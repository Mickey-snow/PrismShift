
source.cpp,30
signed main(void)main21,420

sphere.hpp,427
#define SPHERE_HSPHERE_H2,17
class Sphere : public Visible{Sphere10,129
  Sphere(const Point3& _center, const double& r) : center(_center), radius(r) {}Sphere12,168
  virtual Color Ray_Color(const Ray& r, const Hit_record& rec) const override{Ray_Color14,250
  virtual Hit_record Ray_Hit(const Ray& r, const Interval& time) const override{Ray_Hit23,711
  Point3 center;center55,1641
  double radius;radius56,1658

renderer.cpp,311
std::vector<Point3> Rand_Pixel_Samples(const Camera::View_Info& view, const int& row, const int&Rand_Pixel_Samples5,43
void Renderer::__Renderer_facade::Render(std::ostream& out) const{Render19,575
Color Renderer::__Renderer_facade::Ray_Color(const Ray& r, int current_recur_depth) const{Ray_Color40,1256

CMakeLists.txt,179
project(DisplayImage)DisplayImage2,36
add_library(common STATIC ${COMMON_LIB_SOURCES})common5,104
add_library(lib STATIClib7,159
add_executable(main source.cpp)main15,293

camera.hpp,1203
#define CAMERA_HCAMERA_H2,17
class Camera{Camera10,124
  Camera(const Point3& center_position = Point3(0,0,0),Camera12,146
  void Set_Position(const Vector3& position){Set_Position29,764
  void Adjust_Position(const Vector3& translate){Adjust_Position32,844
  Vector3 Position(void) const{ return camera_center; }Position35,930
  void Set_Width(const int& _width){Set_Width37,987
  struct View_Info{View_Info43,1168
    Vector3 viewport_u, viewport_v;viewport_u44,1188
    Vector3 viewport_u, viewport_v;viewport_v44,1188
    Vector3 pixel_delta_u, pixel_delta_v;pixel_delta_u45,1224
    Vector3 pixel_delta_u, pixel_delta_v;pixel_delta_v45,1224
    Point3 viewport_upper_left;viewport_upper_left46,1266
    Point3 pixel00_loc;pixel00_loc47,1298
  double aspect_ratio;aspect_ratio54,1410
  int image_width, image_height;image_width55,1433
  int image_width, image_height;image_height55,1433
  double focal_length;focal_length56,1466
  double viewpoint_height, viewpoint_width;viewpoint_height57,1489
  double viewpoint_height, viewpoint_width;viewpoint_width57,1489
  Point3 camera_center;camera_center58,1533
  int samples_per_frame;samples_per_frame60,1558

objects.hpp,606
#define OBJECTS_HOBJECTS_H2,18
class Hit_record{Hit_record8,83
  bool hits;hits10,109
  int hit_counts;hit_counts11,122
  std::shared_ptr<Visible> hitted_obj;hitted_obj12,140
  Point3 position;	        // hit positionposition14,182
  Vector3 normal;		// outward normal vectornormal15,225
  double time;			// timetime16,269
  bool front_face;		// is this the front face of the hitted obj?front_face17,294
  Hit_record():hits(false),hit_counts(0) {}Hit_record19,360
  void Set_Face_Normal(const Ray& r, const Vector3& outward_normal){Set_Face_Normal21,405
class Visible{Visible28,600

make.sh,0

TAGS,0

renderer.hpp,557
#define RENDERER_PANEL_HRENDERER_PANEL_H2,25
class Renderer{Renderer10,146
  class __Renderer_facade{__Renderer_facade12,171
    __Renderer_facade(){}__Renderer_facade14,208
    void Set_Camera(Camera* cam_){ cam=cam_; }Set_Camera17,271
    void Set_World(Visible* world_){ world=world_; }Set_World18,318
    Camera* cam;cam24,505
    Visible* world;world25,522
    int samples_per_frame = 15;samples_per_frame28,562
    int max_recurrent_depth = 110;max_recurrent_depth29,594
  static __Renderer_facade* Instance(void){Instance36,705

common/constant.hpp,172
#define CONSTANT_HCONSTANT_H2,19
constexpr double infinity = std::numeric_limits<double>::infinity();infinity7,71
constexpr double pi = 3.1415926535897932385;pi8,140

common/color.hpp,63
#define COLOR_HCOLOR_H2,16
using Color = Vector3;Color7,76

common/vector3.hpp,117
#define VEC3_HVEC3_H2,15
class Vector3{Vector36,51
  double e[3];e36,779
using Point3 = Vector3;Point338,797

common/color.cpp,226
inline double Linear2Gamma(const double& linear_component){Linear2Gamma7,82
Color Format_Color(const Color& pixel_color){Format_Color11,183
void Write_Color(std::ostream& out, const Color& pixel_color){Write_Color27,600

common/vector3.cpp,1800
Vector3::Vector3():e{0,0,0} {}Vector38,99
Vector3::Vector3(const double& e0,const double& e1,const double& e2):e{e0,e1,e2} {}Vector39,130
double Vector3::x() const{ return e[0]; }x12,277
double Vector3::y() const{ return e[1]; }y13,319
double Vector3::z() const{ return e[2]; }z14,361
bool Vector3::Near_Zero() const{Near_Zero16,404
Vector3 Vector3::operator - () const{operator -21,499
Vector3 Vector3::operator - (const Vector3& v) const{operator -24,576
Vector3& Vector3::operator -= (const Vector3& v){ return *this = *this-v; }operator -=27,681
Vector3 Vector3::operator + (const Vector3& v) const{operator +28,757
Vector3& Vector3::operator += (const Vector3& v){ return *this = *this + v; }operator +=31,862
Vector3 operator * (const Vector3& e, const double& t){operator *32,940
Vector3 operator * (const double& t, const Vector3& e){ return e*t; }operator *35,1040
Vector3& Vector3::operator *= (const double& t){ return *this = *this * t; }operator *=36,1110
Vector3 Vector3::operator / (const double& t)const{operator /39,1189
Vector3& Vector3::operator /= (const double& t){ return *this = *this / t; }operator /=42,1285
double Vector3::operator [](const int& i) const{ return e[i]; }operator []44,1363
double& Vector3::operator [](const int& i){ return e[i]; }operator []45,1427
double Vector3::Length() const{ return sqrt(this->Length_squared()); }Length47,1487
double Vector3::Length_squared() const{Length_squared48,1558
std::ostream& operator <<(std::ostream& out, const Vector3& v){operator <<52,1645
double Dot(const Vector3 &u, const Vector3 &v) {Dot57,1760
Vector3 Cross(const Vector3 &u, const Vector3 &v) {Cross63,1870
Vector3 Unit_vector(const Vector3& v) {Unit_vector69,2030
Vector3 Vector3::Random_Unit(){Random_Unit73,2098

common/random.cpp,136
double random_uniform_01(void){random_uniform_016,57
double random_double(const double& min, const double& max){random_double12,239

common/common.hpp,98
#define COMMON_HCOMMON_H2,17
inline double Degree2Rad(const double& degrees){Degree2Rad17,253

common/ray.hpp,361
#define RAY_HRAY_H2,14
class Ray{Ray6,53
  Ray(){}Ray8,72
  Ray(const Point3& origin_, const Vector3& direction_) : origin(origin_), direction(direction_)Ray9,82
  Point3 Origin() const{ return origin; }Origin11,183
  Vector3 Direction() const{ return direction; }Direction12,225
  Point3 origin;origin17,321
  Vector3 direction;direction18,338

common/ray.cpp,50
Point3 Ray::At(const double& time) const{At4,43

common/random.hpp,31
#define RANDOM_HRANDOM_H2,17

common/interval.hpp,815
#define INTERVAL_HINTERVAL_H2,19
class Interval{Interval6,64
  Interval():begin(+infinity),end(-infinity) {} // default interval is emptyInterval8,88
  Interval(const double& _min, const double& _max) : begin(_min), end(_max) {}Interval9,165
  bool Contains(const double& x) const{Contains12,272
  bool Surrounds(const double& x) const{Surrounds15,348
  double Clamp(const double& x) const{Clamp19,424
  static const Interval Empty_Interval, Universe_Interval;Empty_Interval24,540
  static const Interval Empty_Interval, Universe_Interval;Universe_Interval24,540
  double begin,end;begin26,600
  double begin,end;end26,600
const static Interval Empty_Interval(+infinity, -infinity);Empty_Interval29,624
const static Interval Universe_Interval(-infinity, +infinity);Universe_Interval30,684

camera.cpp,83
Camera::View_Info Camera::Get_Initialize_View() const{Get_Initialize_View48,1394

scene.hpp,648
#define SCENE_HSCENE_H2,16
class Scene: public Visible{Scene9,92
  Scene(){}Scene11,129
  Scene(std::shared_ptr<Visible> obj) : objects{obj} {}Scene12,141
  Scene(std::initializer_list<std::shared_ptr<Visible>>&& li):objects{std::move(li)} {}Scene13,197
  void Clear(){ objects.clear(); }Clear16,310
  void Add(std::shared_ptr<Visible> obj){ objects.push_back(obj); }Add17,345
  virtual Hit_record Ray_Hit(const Ray& r, const Interval& time) const override{Ray_Hit21,574
  virtual Color Ray_Color(const Ray& r, const Hit_record& rec) const override{Ray_Color36,953
  std::vector<std::shared_ptr<Visible>> objects;objects41,1095
