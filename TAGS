
scene/test.in,0

source.cpp,45
int main(int argc, char* argv[])main12,162

CMakeLists.txt,789
project(Raytracer CXX)Raytracer2,36
set(CMAKE_CXX_STANDARD 20)CMAKE_CXX_STANDARD4,60
set(CMAKE_CXX_STANDARD_REQUIRED ON)CMAKE_CXX_STANDARD_REQUIRED5,87
set(GLOBAL_INCLUDE_LIB_DIR "include")GLOBAL_INCLUDE_LIB_DIR11,217
add_library(global_include STATIC ${GLOBAL_INCLUDE_LIB_SOURCES})global_include14,374
set(TRACER_LIB_DIR "tracer")TRACER_LIB_DIR17,441
add_library(raylib STATICraylib20,611
add_executable(main source.cpp)main32,815
set(TRACER_TEST_DIR "${TRACER_LIB_DIR}/test/")TRACER_TEST_DIR43,950
add_executable(tracer_test ${TRACER_TEST_SOURCE})tracer_test45,1062
set(GLOBAL_INCLUDE_LIB_TEST_DIR "${GLOBAL_INCLUDE_LIB_DIR}/test/")GLOBAL_INCLUDE_LIB_TEST_DIR47,1113
add_executable(global_include_test ${GLOBAL_INCLUDE_LIB_TEST_SOURCE})global_include_test49,1269

include/test/global-config-test.cpp,97
TEST(GlobalConfig, defaultConfig){TEST5,54
TEST(GlobalConfig, readExternalConfig){TEST15,489

include/test/arg-parser-test.cpp,114
TEST(argParser, init){TEST5,45
TEST(argParser, parse){TEST16,299
TEST(argMarshaler, programname){TEST29,551

include/global_config.cpp,80
void _Global::_Global_ins::Set_config( int argc,  char **argv){Set_config7,86

include/global_config.hpp,579
#define GLOBAL_CONFIG_HGLOBAL_CONFIG_H2,24
class _Global{_Global6,67
  class _Global_ins{_Global_ins9,94
    bool show_render_window;show_render_window11,125
    unsigned int samples_per_pixel;samples_per_pixel12,154
    unsigned int max_recurrent_depth;max_recurrent_depth13,190
    unsigned int image_height;image_height14,228
    std::string output_directory;output_directory15,259
    bool use_timer;use_timer16,293
    unsigned int max_threads;max_threads17,313
    _Global_ins(){_Global_ins19,348
  static _Global_ins* Instance(void){Instance35,666

include/args.cpp,1251
namespace args{args6,56
  const char* Parser::RawArg_at(const int& index) const{RawArg_at8,75
  int Parser::ArgCount(void) const{ return founded_argument.size(); }ArgCount12,167
  int Parser::Raw_ArgCount(void) const{ return argv.size(); }Raw_ArgCount13,237
  Parser::ArgumentMarshaler Parser::Arg_At(const int &offset) const{Arg_At14,299
  bool isOption(const std::string& arg){ return arg[0] == '-'; }isOption18,412
  void Parser::Parse(void){Parse19,477
#define ArgMarshaler ArgMarshaler41,1286
  ArgMarshaler::ArgumentMarshaler(bool hasopt_, std::string opt_, bool haspara_, std::string parArgumentMarshaler42,1333
  ArgMarshaler* ArgMarshaler::NewWithOpt(const std::string opt){NewWithOpt44,1500
  ArgMarshaler* ArgMarshaler::NewWithPara(const std::string para){NewWithPara47,1628
  ArgMarshaler* ArgMarshaler::NewWithOptAndPara(const std::string opt,const std::string para){NewWithOptAndPara50,1759
  bool ArgMarshaler::HasOption() const{ return hasopt; }HasOption54,1911
  bool ArgMarshaler::HasParameter() const{ return haspara; }HasParameter55,1968
  std::string ArgMarshaler::GetOption() const{ return opt; }GetOption56,2029
  std::string ArgMarshaler::GetParameter() const{ return para; }GetParameter57,2090

include/args.hpp,695
#define ARGS_HARGS_H2,15
namespace args{args7,66
  class Parser{Parser8,82
    class ArgumentMarshaler{ArgumentMarshaler10,109
      bool hasopt,haspara;hasopt22,598
      bool hasopt,haspara;haspara22,598
      std::string opt,para;opt23,625
      std::string opt,para;para23,625
    Parser(int argc, char** argv){Parser27,675
    Parser(const std::vector<std::string>& init_argv) : argv(init_argv) { Parse(); }Parser34,835
    std::vector<ArgumentMarshaler> Parsed(void) const{ return founded_argument; }Parsed42,1080
    int argc;argc44,1173
    std::vector<std::string> argv;argv45,1187
    std::vector<ArgumentMarshaler> founded_argument;founded_argument49,1246

build/global_include_test,0

build/tracer_test,0

build/CTestTestfile.cmake,0

build/tracer_test[1]_tests.cmake,123
set(  tracer_test_TESTS aabbConstructor.nopara rayaabbIntersection.hit rayaabbIntersection.notHitracer_test_TESTS27,4995

build/main,0

build/tracer_test[1]_include.cmake,0

build/cmake_install.cmake,675
  set(CMAKE_INSTALL_PREFIX "/usr/local")CMAKE_INSTALL_PREFIX5,127
    set(CMAKE_INSTALL_CONFIG_NAME "Debug")CMAKE_INSTALL_CONFIG_NAME15,460
    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")CMAKE_INSTALL_COMPONENT24,743
    set(CMAKE_INSTALL_COMPONENT)CMAKE_INSTALL_COMPONENT26,800
  set(CMAKE_INSTALL_SO_NO_EXE "0")CMAKE_INSTALL_SO_NO_EXE32,947
  set(CMAKE_CROSSCOMPILING "FALSE")CMAKE_CROSSCOMPILING37,1081
  set(CMAKE_OBJDUMP "/usr/bin/objdump")CMAKE_OBJDUMP42,1201
  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")CMAKE_INSTALL_MANIFEST52,1469
  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")CMAKE_INSTALL_MANIFEST54,1556

build/_deps/googletest-build/CTestTestfile.cmake,0

build/_deps/googletest-build/cmake_install.cmake,480
  set(CMAKE_INSTALL_PREFIX "/usr/local")CMAKE_INSTALL_PREFIX5,154
    set(CMAKE_INSTALL_CONFIG_NAME "Debug")CMAKE_INSTALL_CONFIG_NAME15,487
    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")CMAKE_INSTALL_COMPONENT24,770
    set(CMAKE_INSTALL_COMPONENT)CMAKE_INSTALL_COMPONENT26,827
  set(CMAKE_INSTALL_SO_NO_EXE "0")CMAKE_INSTALL_SO_NO_EXE32,974
  set(CMAKE_CROSSCOMPILING "FALSE")CMAKE_CROSSCOMPILING37,1108
  set(CMAKE_OBJDUMP "/usr/bin/objdump")CMAKE_OBJDUMP42,1228

build/_deps/googletest-build/Makefile,1583
default_target: alldefault_target5,163
% : %,v%18,515
% : RCS/%%21,560
% : RCS/%,v%24,607
% : SCCS/s.%%27,656
% : s.%%30,706
$(VERBOSE)MAKESILENT = -s$(VERBOSE)MAKESILENT35,803
$(VERBOSE).SILENT:$(VERBOSE).SILENT38,870
cmake_force:cmake_force41,929
SHELL = /bin/shSHELL48,1131
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND51,1172
RM = /usr/bin/cmake -E rm -fRM54,1236
EQUALS = =EQUALS57,1301
EQUALS = =EQUALS57,1301
CMAKE_SOURCE_DIR = /home/kqx/Documents/Project/rayCMAKE_SOURCE_DIR60,1370
CMAKE_BINARY_DIR = /home/kqx/Documents/Project/ray/buildCMAKE_BINARY_DIR63,1478
test:test69,1689
test/fast: testtest/fast75,1880
edit_cache:edit_cache79,1957
edit_cache/fast: edit_cacheedit_cache/fast85,2190
rebuild_cache:rebuild_cache89,2288
rebuild_cache/fast: rebuild_cacherebuild_cache/fast95,2569
list_install_components:list_install_components99,2686
list_install_components/fast: list_install_componentslist_install_components/fast104,2917
install: preinstallinstall108,3048
install/fast: preinstall/fastinstall/fast114,3254
install/local: preinstallinstall/local120,3481
install/local/fast: preinstall/fastinstall/local/fast126,3750
install/strip: preinstallinstall/strip132,4034
install/strip/fast: preinstall/fastinstall/strip/fast138,4297
all: cmake_check_build_systemall144,4553
clean:clean151,5055
clean/fast: cleanclean/fast156,5222
preinstall: allpreinstall160,5297
preinstall/fast:preinstall/fast165,5495
depend:depend170,5679
help:help175,5873
cmake_check_build_system:cmake_check_build_system197,6548

build/_deps/googletest-build/googletest/generated/GTestConfigVersion.cmake,591
set(PACKAGE_VERSION "1.12.1")PACKAGE_VERSION10,529
    set(PACKAGE_VERSION_COMPATIBLE FALSE)PACKAGE_VERSION_COMPATIBLE17,1022
    set(PACKAGE_VERSION_COMPATIBLE TRUE)PACKAGE_VERSION_COMPATIBLE19,1073
    set(PACKAGE_VERSION_COMPATIBLE FALSE)PACKAGE_VERSION_COMPATIBLE23,1187
    set(PACKAGE_VERSION_COMPATIBLE TRUE)PACKAGE_VERSION_COMPATIBLE25,1238
      set(PACKAGE_VERSION_EXACT TRUE)PACKAGE_VERSION_EXACT27,1333
  set(PACKAGE_VERSION "${PACKAGE_VERSION} (${installedBits}bit)")PACKAGE_VERSION41,1749
  set(PACKAGE_VERSION_UNSUITABLE TRUE)PACKAGE_VERSION_UNSUITABLE42,1815

build/_deps/googletest-build/googletest/generated/gtest.pc,0

build/_deps/googletest-build/googletest/generated/GTestConfig.cmake,195
macro(set_and_check _var _file)set_and_check8,332
macro(check_required_components _NAME)check_required_components15,542
  set(THREADS_PREFER_PTHREAD_FLAG )THREADS_PREFER_PTHREAD_FLAG28,915

build/_deps/googletest-build/googletest/generated/gtest_main.pc,0

build/_deps/googletest-build/googletest/generated/gmock.pc,0

build/_deps/googletest-build/googletest/generated/gmock_main.pc,0

build/_deps/googletest-build/googletest/CTestTestfile.cmake,0

build/_deps/googletest-build/googletest/cmake_install.cmake,480
  set(CMAKE_INSTALL_PREFIX "/usr/local")CMAKE_INSTALL_PREFIX5,165
    set(CMAKE_INSTALL_CONFIG_NAME "Debug")CMAKE_INSTALL_CONFIG_NAME15,498
    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")CMAKE_INSTALL_COMPONENT24,781
    set(CMAKE_INSTALL_COMPONENT)CMAKE_INSTALL_COMPONENT26,838
  set(CMAKE_INSTALL_SO_NO_EXE "0")CMAKE_INSTALL_SO_NO_EXE32,985
  set(CMAKE_CROSSCOMPILING "FALSE")CMAKE_CROSSCOMPILING37,1119
  set(CMAKE_OBJDUMP "/usr/bin/objdump")CMAKE_OBJDUMP42,1239

build/_deps/googletest-build/googletest/Makefile,2776
default_target: alldefault_target5,163
% : %,v%18,515
% : RCS/%%21,560
% : RCS/%,v%24,607
% : SCCS/s.%%27,656
% : s.%%30,706
$(VERBOSE)MAKESILENT = -s$(VERBOSE)MAKESILENT35,803
$(VERBOSE).SILENT:$(VERBOSE).SILENT38,870
cmake_force:cmake_force41,929
SHELL = /bin/shSHELL48,1131
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND51,1172
RM = /usr/bin/cmake -E rm -fRM54,1236
EQUALS = =EQUALS57,1301
EQUALS = =EQUALS57,1301
CMAKE_SOURCE_DIR = /home/kqx/Documents/Project/rayCMAKE_SOURCE_DIR60,1370
CMAKE_BINARY_DIR = /home/kqx/Documents/Project/ray/buildCMAKE_BINARY_DIR63,1478
test:test69,1689
test/fast: testtest/fast75,1880
edit_cache:edit_cache79,1957
edit_cache/fast: edit_cacheedit_cache/fast85,2190
rebuild_cache:rebuild_cache89,2288
rebuild_cache/fast: rebuild_cacherebuild_cache/fast95,2569
list_install_components:list_install_components99,2686
list_install_components/fast: list_install_componentslist_install_components/fast104,2917
install: preinstallinstall108,3048
install/fast: preinstall/fastinstall/fast114,3254
install/local: preinstallinstall/local120,3481
install/local/fast: preinstall/fastinstall/local/fast126,3750
install/strip: preinstallinstall/strip132,4034
install/strip/fast: preinstall/fastinstall/strip/fast138,4297
all: cmake_check_build_systemall144,4553
clean:clean151,5077
clean/fast: cleanclean/fast156,5255
preinstall: allpreinstall160,5330
preinstall/fast:preinstall/fast165,5539
depend:depend170,5734
_deps/googletest-build/googletest/CMakeFiles/gtest.dir/rule:_deps/googletest-build/googletest/CMakeFiles/gtest.dir/rule175,5945
gtest: _deps/googletest-build/googletest/CMakeFiles/gtest.dir/rulegtest180,6258
gtest/fast:gtest/fast184,6371
_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/rule:_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/rule189,6632
gtest_main: _deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/rulegtest_main194,6960
gtest_main/fast:gtest_main/fast198,7088
src/gtest-all.o: src/gtest-all.cc.osrc/gtest-all.o202,7338
src/gtest-all.cc.o:src/gtest-all.cc.o206,7433
src/gtest-all.i: src/gtest-all.cc.isrc/gtest-all.i210,7692
src/gtest-all.cc.i:src/gtest-all.cc.i214,7791
src/gtest-all.s: src/gtest-all.cc.ssrc/gtest-all.s218,8050
src/gtest-all.cc.s:src/gtest-all.cc.s222,8153
src/gtest_main.o: src/gtest_main.cc.osrc/gtest_main.o226,8412
src/gtest_main.cc.o:src/gtest_main.cc.o230,8510
src/gtest_main.i: src/gtest_main.cc.isrc/gtest_main.i234,8782
src/gtest_main.cc.i:src/gtest_main.cc.i238,8884
src/gtest_main.s: src/gtest_main.cc.ssrc/gtest_main.s242,9156
src/gtest_main.cc.s:src/gtest_main.cc.s246,9262
help:help251,9548
cmake_check_build_system:cmake_check_build_system281,10443

build/_deps/googletest-build/googletest/CMakeFiles/progress.marks,0

build/_deps/googletest-build/googletest/CMakeFiles/CMakeDirectoryInformation.cmake,643
set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/home/kqx/Documents/Project/ray")CMAKE_RELATIVE_PATH_TOP_SOURCE5,144
set(CMAKE_RELATIVE_PATH_TOP_BINARY "/home/kqx/Documents/Project/ray/build")CMAKE_RELATIVE_PATH_TOP_BINARY6,214
set(CMAKE_FORCE_UNIX_PATHS 1)CMAKE_FORCE_UNIX_PATHS9,327
set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")CMAKE_C_INCLUDE_REGEX_SCAN13,428
set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")CMAKE_C_INCLUDE_REGEX_COMPLAIN14,467
set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})CMAKE_CXX_INCLUDE_REGEX_SCAN15,508
set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})CMAKE_CXX_INCLUDE_REGEX_COMPLAIN16,572

build/_deps/googletest-build/googletest/CMakeFiles/Export/0c08b8e77dd885bfe55a19a9659d9fc1/GTestTargets-debug.cmake,130
set(CMAKE_IMPORT_FILE_VERSION 1)CMAKE_IMPORT_FILE_VERSION6,245
set(CMAKE_IMPORT_FILE_VERSION)CMAKE_IMPORT_FILE_VERSION49,2195

build/_deps/googletest-build/googletest/CMakeFiles/Export/0c08b8e77dd885bfe55a19a9659d9fc1/GTestTargets.cmake,417
set(CMAKE_IMPORT_FILE_VERSION 1)CMAKE_IMPORT_FILE_VERSION16,511
set(_cmake_targets_defined "")_cmake_targets_defined19,651
set(_cmake_targets_not_defined "")_cmake_targets_not_defined20,682
set(_cmake_expected_targets "")_cmake_expected_targets21,717
  set(_IMPORT_PREFIX "")_IMPORT_PREFIX55,2278
set(_IMPORT_PREFIX)_IMPORT_PREFIX111,4217
set(CMAKE_IMPORT_FILE_VERSION)CMAKE_IMPORT_FILE_VERSION138,5281

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/build.make,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/compiler_depend.ts,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/flags.make,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/link.txt,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/cmake_clean.cmake,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/depend.make,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/progress.make,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/compiler_depend.make,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/DependInfo.cmake,373
set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)CMAKE_DEPENDS_IN_PROJECT_ONLY3,42
set(CMAKE_DEPENDS_LANGUAGESCMAKE_DEPENDS_LANGUAGES6,149
set(CMAKE_DEPENDS_DEPENDENCY_FILESCMAKE_DEPENDS_DEPENDENCY_FILES10,230
set(CMAKE_Fortran_TARGET_LINKED_INFO_FILESCMAKE_Fortran_TARGET_LINKED_INFO_FILES15,589
set(CMAKE_Fortran_TARGET_MODULE_DIR "")CMAKE_Fortran_TARGET_MODULE_DIR19,672

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/cmake_clean_target.cmake,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o.d,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/compiler_depend.internal,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/build.make,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/compiler_depend.ts,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/flags.make,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/link.txt,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/cmake_clean.cmake,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/depend.make,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/progress.make,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/compiler_depend.make,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/DependInfo.cmake,373
set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)CMAKE_DEPENDS_IN_PROJECT_ONLY3,42
set(CMAKE_DEPENDS_LANGUAGESCMAKE_DEPENDS_LANGUAGES6,149
set(CMAKE_DEPENDS_DEPENDENCY_FILESCMAKE_DEPENDS_DEPENDENCY_FILES10,230
set(CMAKE_Fortran_TARGET_LINKED_INFO_FILESCMAKE_Fortran_TARGET_LINKED_INFO_FILES15,602
set(CMAKE_Fortran_TARGET_MODULE_DIR "")CMAKE_Fortran_TARGET_MODULE_DIR19,685

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/cmake_clean_target.cmake,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/src/gtest_main.cc.o.d,0

build/_deps/googletest-build/googletest/CMakeFiles/gtest_main.dir/compiler_depend.internal,0

build/_deps/googletest-build/googlemock/CTestTestfile.cmake,0

build/_deps/googletest-build/googlemock/cmake_install.cmake,480
  set(CMAKE_INSTALL_PREFIX "/usr/local")CMAKE_INSTALL_PREFIX5,165
    set(CMAKE_INSTALL_CONFIG_NAME "Debug")CMAKE_INSTALL_CONFIG_NAME15,498
    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")CMAKE_INSTALL_COMPONENT24,781
    set(CMAKE_INSTALL_COMPONENT)CMAKE_INSTALL_COMPONENT26,838
  set(CMAKE_INSTALL_SO_NO_EXE "0")CMAKE_INSTALL_SO_NO_EXE32,985
  set(CMAKE_CROSSCOMPILING "FALSE")CMAKE_CROSSCOMPILING37,1119
  set(CMAKE_OBJDUMP "/usr/bin/objdump")CMAKE_OBJDUMP42,1239

build/_deps/googletest-build/googlemock/Makefile,2776
default_target: alldefault_target5,163
% : %,v%18,515
% : RCS/%%21,560
% : RCS/%,v%24,607
% : SCCS/s.%%27,656
% : s.%%30,706
$(VERBOSE)MAKESILENT = -s$(VERBOSE)MAKESILENT35,803
$(VERBOSE).SILENT:$(VERBOSE).SILENT38,870
cmake_force:cmake_force41,929
SHELL = /bin/shSHELL48,1131
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND51,1172
RM = /usr/bin/cmake -E rm -fRM54,1236
EQUALS = =EQUALS57,1301
EQUALS = =EQUALS57,1301
CMAKE_SOURCE_DIR = /home/kqx/Documents/Project/rayCMAKE_SOURCE_DIR60,1370
CMAKE_BINARY_DIR = /home/kqx/Documents/Project/ray/buildCMAKE_BINARY_DIR63,1478
test:test69,1689
test/fast: testtest/fast75,1880
edit_cache:edit_cache79,1957
edit_cache/fast: edit_cacheedit_cache/fast85,2190
rebuild_cache:rebuild_cache89,2288
rebuild_cache/fast: rebuild_cacherebuild_cache/fast95,2569
list_install_components:list_install_components99,2686
list_install_components/fast: list_install_componentslist_install_components/fast104,2917
install: preinstallinstall108,3048
install/fast: preinstall/fastinstall/fast114,3254
install/local: preinstallinstall/local120,3481
install/local/fast: preinstall/fastinstall/local/fast126,3750
install/strip: preinstallinstall/strip132,4034
install/strip/fast: preinstall/fastinstall/strip/fast138,4297
all: cmake_check_build_systemall144,4553
clean:clean151,5077
clean/fast: cleanclean/fast156,5255
preinstall: allpreinstall160,5330
preinstall/fast:preinstall/fast165,5539
depend:depend170,5734
_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/rule:_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/rule175,5945
gmock: _deps/googletest-build/googlemock/CMakeFiles/gmock.dir/rulegmock180,6258
gmock/fast:gmock/fast184,6371
_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/rule:_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/rule189,6632
gmock_main: _deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/rulegmock_main194,6960
gmock_main/fast:gmock_main/fast198,7088
src/gmock-all.o: src/gmock-all.cc.osrc/gmock-all.o202,7338
src/gmock-all.cc.o:src/gmock-all.cc.o206,7433
src/gmock-all.i: src/gmock-all.cc.isrc/gmock-all.i210,7692
src/gmock-all.cc.i:src/gmock-all.cc.i214,7791
src/gmock-all.s: src/gmock-all.cc.ssrc/gmock-all.s218,8050
src/gmock-all.cc.s:src/gmock-all.cc.s222,8153
src/gmock_main.o: src/gmock_main.cc.osrc/gmock_main.o226,8412
src/gmock_main.cc.o:src/gmock_main.cc.o230,8510
src/gmock_main.i: src/gmock_main.cc.isrc/gmock_main.i234,8782
src/gmock_main.cc.i:src/gmock_main.cc.i238,8884
src/gmock_main.s: src/gmock_main.cc.ssrc/gmock_main.s242,9156
src/gmock_main.cc.s:src/gmock_main.cc.s246,9262
help:help251,9548
cmake_check_build_system:cmake_check_build_system281,10443

build/_deps/googletest-build/googlemock/CMakeFiles/progress.marks,0

build/_deps/googletest-build/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake,643
set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/home/kqx/Documents/Project/ray")CMAKE_RELATIVE_PATH_TOP_SOURCE5,144
set(CMAKE_RELATIVE_PATH_TOP_BINARY "/home/kqx/Documents/Project/ray/build")CMAKE_RELATIVE_PATH_TOP_BINARY6,214
set(CMAKE_FORCE_UNIX_PATHS 1)CMAKE_FORCE_UNIX_PATHS9,327
set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")CMAKE_C_INCLUDE_REGEX_SCAN13,428
set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")CMAKE_C_INCLUDE_REGEX_COMPLAIN14,467
set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})CMAKE_CXX_INCLUDE_REGEX_SCAN15,508
set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})CMAKE_CXX_INCLUDE_REGEX_COMPLAIN16,572

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/build.make,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/compiler_depend.ts,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/flags.make,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/link.txt,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/cmake_clean.cmake,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/depend.make,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/progress.make,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/compiler_depend.make,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake,373
set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)CMAKE_DEPENDS_IN_PROJECT_ONLY3,42
set(CMAKE_DEPENDS_LANGUAGESCMAKE_DEPENDS_LANGUAGES6,149
set(CMAKE_DEPENDS_DEPENDENCY_FILESCMAKE_DEPENDS_DEPENDENCY_FILES10,230
set(CMAKE_Fortran_TARGET_LINKED_INFO_FILESCMAKE_Fortran_TARGET_LINKED_INFO_FILES15,589
set(CMAKE_Fortran_TARGET_MODULE_DIR "")CMAKE_Fortran_TARGET_MODULE_DIR19,672

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/cmake_clean_target.cmake,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o.d,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock.dir/compiler_depend.internal,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/build.make,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/compiler_depend.ts,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/flags.make,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/link.txt,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/cmake_clean.cmake,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/depend.make,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/progress.make,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/compiler_depend.make,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake,373
set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)CMAKE_DEPENDS_IN_PROJECT_ONLY3,42
set(CMAKE_DEPENDS_LANGUAGESCMAKE_DEPENDS_LANGUAGES6,149
set(CMAKE_DEPENDS_DEPENDENCY_FILESCMAKE_DEPENDS_DEPENDENCY_FILES10,230
set(CMAKE_Fortran_TARGET_LINKED_INFO_FILESCMAKE_Fortran_TARGET_LINKED_INFO_FILES15,602
set(CMAKE_Fortran_TARGET_MODULE_DIR "")CMAKE_Fortran_TARGET_MODULE_DIR19,685

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/cmake_clean_target.cmake,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/src/gmock_main.cc.o.d,0

build/_deps/googletest-build/googlemock/CMakeFiles/gmock_main.dir/compiler_depend.internal,0

build/_deps/googletest-build/CMakeFiles/progress.marks,0

build/_deps/googletest-build/CMakeFiles/CMakeDirectoryInformation.cmake,643
set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/home/kqx/Documents/Project/ray")CMAKE_RELATIVE_PATH_TOP_SOURCE5,144
set(CMAKE_RELATIVE_PATH_TOP_BINARY "/home/kqx/Documents/Project/ray/build")CMAKE_RELATIVE_PATH_TOP_BINARY6,214
set(CMAKE_FORCE_UNIX_PATHS 1)CMAKE_FORCE_UNIX_PATHS9,327
set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")CMAKE_C_INCLUDE_REGEX_SCAN13,428
set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")CMAKE_C_INCLUDE_REGEX_COMPLAIN14,467
set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})CMAKE_CXX_INCLUDE_REGEX_SCAN15,508
set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})CMAKE_CXX_INCLUDE_REGEX_COMPLAIN16,572

build/_deps/googletest-src/WORKSPACE,0

build/_deps/googletest-src/BUILD.bazel,0

build/_deps/googletest-src/LICENSE,0

build/_deps/googletest-src/.clang-format,0

build/_deps/googletest-src/CMakeLists.txt,495
project(googletest-distribution)googletest-distribution18,355
set(GOOGLETEST_VERSION 1.12.1)GOOGLETEST_VERSION19,388
  set(CMAKE_CXX_EXTENSIONS OFF)CMAKE_CXX_EXTENSIONS22,490
option(BUILD_GMOCK "Builds the googlemock subproject" ON)BUILD_GMOCK31,659
option(INSTALL_GTEST "Enable installation of googletest. (Projects embedding googletest may wantINSTALL_GTEST32,717
option(GTEST_HAS_ABSL "Use Abseil and RE2. Requires Abseil and RE2 to be separately added to theGTEST_HAS_ABSL33,838

build/_deps/googletest-src/README.md,665
# GoogleTestGoogleTest1,0
### AnnouncementsAnnouncements3,14
#### Live at HeadLive at Head5,33
#### Documentation UpdatesDocumentation Updates12,351
#### Release 1.12.1Release 1.12.118,563
#### Coming SoonComing Soon26,785
## Welcome to **GoogleTest**, Google's C++ test framework!Welcome to **GoogleTest**, Google's C++ test framework!32,949
### Getting StartedGetting Started38,1188
## FeaturesFeatures47,1508
## Supported PlatformsSupported Platforms60,1856
## Who Is Using GoogleTest?Who Is Using GoogleTest?69,2201
## Related Open Source ProjectsRelated Open Source Projects81,2644
## Contributing ChangesContributing Changes111,4034

build/_deps/googletest-src/.github/workflows/gtest-ci.yml,0

build/_deps/googletest-src/.github/ISSUE_TEMPLATE/10-feature_request.md,0

build/_deps/googletest-src/.github/ISSUE_TEMPLATE/00-bug_report.md,0

build/_deps/googletest-src/.github/ISSUE_TEMPLATE/config.yml,0

build/_deps/googletest-src/CONTRIBUTORS,0

build/_deps/googletest-src/ci/macos-presubmit.sh,0

build/_deps/googletest-src/ci/windows-presubmit.bat,0

build/_deps/googletest-src/ci/linux-presubmit.sh,0

build/_deps/googletest-src/CONTRIBUTING.md,721
# How to become a contributor and submit your own codeHow to become a contributor and submit your own code1,0
## Contributor License AgreementsContributor License Agreements3,56
## Are you a Googler?Are you a Googler?22,873
## Contributing A PatchContributing A Patch28,1092
## The Google Test and Google Mock CommunitiesThe Google Test and Google Mock Communities47,2129
### Please Be FriendlyPlease Be Friendly57,2651
## StyleStyle76,3621
## Requirements for ContributorsRequirements for Contributors86,4051
## Developing Google Test and Google MockDeveloping Google Test and Google Mock95,4430
### Testing Google Test and Google Mock ThemselvesTesting Google Test and Google Mock Themselves99,4554

build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py,4388
  from sets import Set as set  # For Python 2.3 compatibilityset46,2037
CAN_PASS_EMPTY_ENV = FalseCAN_PASS_EMPTY_ENV59,2563
  child = gtest_test_utils.Subprocess(child62,2640
  CAN_PASS_EMPTY_ENV = eval(child.output)CAN_PASS_EMPTY_ENV64,2758
CAN_UNSET_ENV = FalseCAN_UNSET_ENV73,3163
  child = gtest_test_utils.Subprocess(child77,3266
  CAN_UNSET_ENV = eval(child.output)CAN_UNSET_ENV80,3395
CAN_TEST_EMPTY_FILTER = (CAN_PASS_EMPTY_ENV and CAN_UNSET_ENV)CAN_TEST_EMPTY_FILTER87,3704
FILTER_ENV_VAR = 'GTEST_FILTER'FILTER_ENV_VAR91,3829
TOTAL_SHARDS_ENV_VAR = 'GTEST_TOTAL_SHARDS'TOTAL_SHARDS_ENV_VAR94,3909
SHARD_INDEX_ENV_VAR = 'GTEST_SHARD_INDEX'SHARD_INDEX_ENV_VAR95,3953
SHARD_STATUS_FILE_ENV_VAR = 'GTEST_SHARD_STATUS_FILE'SHARD_STATUS_FILE_ENV_VAR96,3995
FILTER_FLAG = 'gtest_filter'FILTER_FLAG99,4107
ALSO_RUN_DISABLED_TESTS_FLAG = 'gtest_also_run_disabled_tests'ALSO_RUN_DISABLED_TESTS_FLAG102,4191
COMMAND = gtest_test_utils.GetTestExecutablePath('googletest-filter-unittest_')COMMAND105,4313
PARAM_TEST_REGEX = re.compile(r'/ParamTest')PARAM_TEST_REGEX108,4473
TEST_CASE_REGEX = re.compile(r'^\[\-+\] \d+ tests? from (\w+(/\w+)?)')TEST_CASE_REGEX111,4582
TEST_REGEX = re.compile(r'^\[\s*RUN\s*\].*\.(\w+(/\w+)?)')TEST_REGEX114,4712
DISABLED_BANNER_REGEX = re.compile(r'^\[\s*DISABLED\s*\] (.*)')DISABLED_BANNER_REGEX117,4834
LIST_TESTS_FLAG = '--gtest_list_tests'LIST_TESTS_FLAG121,4986
SUPPORTS_DEATH_TESTS = 'HasDeathTest' in gtest_test_utils.Subprocess(SUPPORTS_DEATH_TESTS124,5080
PARAM_TESTS = [PARAM_TESTS128,5249
DISABLED_TESTS = [DISABLED_TESTS139,5512
  DEATH_TESTS = [DEATH_TESTS149,5770
  DEATH_TESTS = []DEATH_TESTS154,5852
ACTIVE_TESTS = [ACTIVE_TESTS157,5902
param_tests_present = Noneparam_tests_present170,6130
environ = os.environ.copy()environ174,6172
def SetEnvVar(env_var, value):SetEnvVar177,6202
def RunAndReturnOutput(args = None):RunAndReturnOutput186,6415
def RunAndExtractTestList(args = None):RunAndExtractTestList193,6629
def RunAndExtractDisabledBannerList(args=None):RunAndExtractDisabledBannerList212,7195
def InvokeWithModifiedEnv(extra_env, function, *args, **kwargs):InvokeWithModifiedEnv223,7599
def RunWithSharding(total_shards, shard_index, command):RunWithSharding234,7911
class GTestFilterUnitTest(gtest_test_utils.TestCase):GTestFilterUnitTest244,8254
  def AssertSetEqual(self, lhs, rhs):AssertSetEqual249,8398
  def AssertPartitionIsValid(self, set_var, list_of_sets):AssertPartitionIsValid258,8640
  def AdjustForParameterizedTests(self, tests_to_run):AdjustForParameterizedTests267,8980
  def RunAndVerify(self, gtest_filter, tests_to_run):RunAndVerify276,9270
  def RunAndVerifyWithSharding(self, gtest_filter, total_shards, tests_to_run,RunAndVerifyWithSharding306,10393
  def RunAndVerifyAllowingDisabled(self, gtest_filter, tests_to_run):RunAndVerifyAllowingDisabled345,12102
  def setUp(self):setUp366,12856
  def testDefaultBehavior(self):testDefaultBehavior378,13187
  def testDefaultBehaviorWithShards(self):testDefaultBehaviorWithShards383,13323
  def testEmptyFilter(self):testEmptyFilter392,13781
  def testBadFilter(self):testBadFilter399,13965
  def testFullName(self):testFullName405,14135
  def testUniversalFilters(self):testUniversalFilters412,14396
  def testFilterByTestCase(self):testFilterByTestCase421,14791
  def testFilterByTest(self):testFilterByTest431,15185
  def testFilterDisabledTests(self):testFilterDisabledTests436,15332
  def testWildcardInTestCaseName(self):testWildcardInTestCaseName461,16215
  def testWildcardInTestName(self):testWildcardInTestName473,16536
  def testFilterWithoutDot(self):testFilterWithoutDot478,16688
  def testTwoPatterns(self):testTwoPatterns489,16915
  def testThreePatterns(self):testThreePatterns502,17227
  def testNegativeFilters(self):testNegativeFilters531,17808
  def testFlagOverridesEnvVar(self):testFlagOverridesEnvVar583,19205
  def testShardStatusFileIsCreated(self):testShardStatusFileIsCreated593,19564
  def testShardStatusFileIsCreatedWithListTests(self):testShardStatusFileIsCreatedWithListTests607,20104
  def testDisabledBanner(self):testDisabledBanner630,21122
    make_filter = lambda s: ['--%s=%s' % (FILTER_FLAG, s)]make_filter632,21232
    def testShardingWorksWithDeathTests(self):testShardingWorksWithDeathTests648,21826

build/_deps/googletest-src/googletest/test/gtest-typed-test_test.h,327
#define GOOGLETEST_TEST_GTEST_TYPED_TEST_TEST_H_GOOGLETEST_TEST_GTEST_TYPED_TEST_TEST_H_31,1605
class ContainerTest : public Test {};ContainerTest43,1960
TYPED_TEST_P(ContainerTest, CanBeDefaultConstructed) { TypeParam container; }TYPED_TEST_P47,2035
TYPED_TEST_P(ContainerTest, InitialSizeIsZero) {TYPED_TEST_P49,2114

build/_deps/googletest-src/googletest/test/gtest_json_test_utils.py,87
def normalize(obj):normalize35,1591
  def _normalize(key, value):_normalize45,1834

build/_deps/googletest-src/googletest/test/gtest_assert_by_exception_test.cc,520
class ThrowListener : public testing::EmptyTestEventListener {ThrowListener40,1739
  void OnTestPartResult(const testing::TestPartResult& result) override {OnTestPartResult41,1802
void Fail(const char* msg) {Fail52,2213
static void AssertFalse() { ASSERT_EQ(2, 3) << "Expected failure"; }AssertFalse58,2306
TEST(Test, Test) {TEST62,2455
int kTestForContinuingTest = 0;kTestForContinuingTest94,3339
TEST(Test, Test2) { kTestForContinuingTest = 1; }TEST96,3372
int main(int argc, char** argv) {main98,3423

build/_deps/googletest-src/googletest/test/gtest_stress_test.cc,1480
namespace testing {testing40,1786
namespace {__anon435f5c37011141,1806
const int kThreadCount = 50;kThreadCount52,2171
std::string IdToKey(int id, const char* suffix) {IdToKey54,2201
std::string IdToString(int id) {IdToString60,2335
void ExpectKeyAndValueWereRecordedForId(ExpectKeyAndValueWereRecordedForId66,2446
void ManyAsserts(int id) {ManyAsserts78,3016
void CheckTestFailureCount(int expected_failures) {CheckTestFailureCount106,4025
TEST(StressTest, CanUseScopedTraceAndAssertionsInManyThreads) {TEST116,4481
void FailingThread(bool is_fatal) {FailingThread150,5790
void GenerateFatalFailureInAnotherThread(bool is_fatal) {GenerateFatalFailureInAnotherThread159,6066
TEST(NoFatalFailureTest, ExpectNoFatalFailureIgnoresFailuresInOtherThreads) {TEST164,6211
void AssertNoFatalFailureIgnoresFailuresInOtherThreads() {AssertNoFatalFailureIgnoresFailuresInOtherThreads172,6541
TEST(NoFatalFailureTest, AssertNoFatalFailureIgnoresFailuresInOtherThreads) {TEST175,6672
TEST(FatalFailureTest, ExpectFatalFailureIgnoresFailuresInOtherThreads) {TEST184,7051
TEST(FatalFailureOnAllThreadsTest, ExpectFatalFailureOnAllThreads) {TEST191,7355
TEST(NonFatalFailureTest, ExpectNonFatalFailureIgnoresFailuresInOtherThreads) {TEST202,7884
TEST(NonFatalFailureOnAllThreadsTest, ExpectNonFatalFailureOnAllThreads) {TEST210,8224
int main(int argc, char** argv) {main224,8773
TEST(StressTest,TEST235,9027
int main(int argc, char **argv) {main238,9120

build/_deps/googletest-src/googletest/test/gtest_no_test_unittest.cc,47
int main(int argc, char **argv) {main35,1670

build/_deps/googletest-src/googletest/test/googletest-json-outfiles-test.py,672
GTEST_OUTPUT_SUBDIR = 'json_outfiles'GTEST_OUTPUT_SUBDIR38,1720
GTEST_OUTPUT_1_TEST = 'gtest_xml_outfile1_test_'GTEST_OUTPUT_1_TEST39,1758
GTEST_OUTPUT_2_TEST = 'gtest_xml_outfile2_test_'GTEST_OUTPUT_2_TEST40,1807
EXPECTED_1 = {EXPECTED_142,1857
EXPECTED_2 = {EXPECTED_288,2798
class GTestJsonOutFilesTest(gtest_test_utils.TestCase):GTestJsonOutFilesTest135,3740
  def setUp(self):setUp138,3860
  def tearDown(self):tearDown146,4218
  def DeleteFilesAndDir(self):DeleteFilesAndDir149,4270
  def testOutfile1(self):testOutfile1163,4616
  def testOutfile2(self):testOutfile2166,4698
  def _TestOutFile(self, test_name, expected):_TestOutFile169,4780

build/_deps/googletest-src/googletest/test/googletest-options-test.cc,1345
namespace testing {testing52,2138
namespace internal {internal53,2158
namespace {__anon677320b1011154,2179
FilePath GetAbsolutePathOf(const FilePath& relative_path) {GetAbsolutePathOf57,2248
TEST(XmlOutputTest, GetOutputFormatDefault) {TEST63,2445
TEST(XmlOutputTest, GetOutputFormat) {TEST68,2588
TEST(XmlOutputTest, GetOutputFileDefault) {TEST73,2739
TEST(XmlOutputTest, GetOutputFileSingleFile) {TEST79,2946
TEST(XmlOutputTest, GetOutputFileFromDirectoryPath) {TEST85,3169
TEST(OutputFileHelpersTest, GetCurrentExecutableName) {TEST100,3747
class XmlOutputChangeDirTest : public Test {XmlOutputChangeDirTest126,4825
  void SetUp() override {SetUp128,4882
  void TearDown() override {TearDown136,5157
  FilePath original_working_dir_;original_working_dir_140,5249
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithDefault) {TEST_F143,5287
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithDefaultXML) {TEST_F151,5561
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithRelativeFile) {TEST_F159,5841
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithRelativePath) {TEST_F167,6133
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithAbsoluteFile) {TEST_F184,6768
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithAbsolutePath) {TEST_F196,7218

build/_deps/googletest-src/googletest/test/googletest-port-test.cc,10228
namespace testing {testing53,2045
namespace internal {internal54,2065
TEST(IsXDigitTest, WorksForNarrowAscii) {TEST56,2087
TEST(IsXDigitTest, ReturnsFalseForNarrowNonAscii) {TEST69,2406
TEST(IsXDigitTest, WorksForWideAscii) {TEST74,2573
TEST(IsXDigitTest, ReturnsFalseForWideNonAscii) {TEST87,2899
class Base {Base93,3129
  Base() : member_(0) {}Base95,3151
  explicit Base(int n) : member_(n) {}Base96,3176
  virtual ~Base() {}~Base99,3288
  int member() { return member_; }member100,3309
  int member_;member_103,3355
class Derived : public Base {Derived106,3374
  explicit Derived(int n) : Base(n) {}Derived108,3413
TEST(ImplicitCastTest, ConvertsPointers) {TEST111,3456
TEST(ImplicitCastTest, CanUseInheritance) {TEST116,3604
class Castable {Castable122,3784
  explicit Castable(bool* converted) : converted_(converted) {}Castable124,3810
  operator Base() {operator Base125,3874
  bool* converted_;converted_131,3952
TEST(ImplicitCastTest, CanUseNonConstCastOperator) {TEST134,3976
class ConstCastable {ConstCastable141,4183
  explicit ConstCastable(bool* converted) : converted_(converted) {}ConstCastable143,4214
  operator Base() const {operator Base144,4283
  bool* converted_;converted_150,4367
TEST(ImplicitCastTest, CanUseConstCastOperatorOnConstValues) {TEST153,4391
class ConstAndNonConstCastable {ConstAndNonConstCastable160,4631
  ConstAndNonConstCastable(bool* converted, bool* const_converted)ConstAndNonConstCastable162,4673
  operator Base() {operator Base164,4808
  operator Base() const {operator Base168,4875
  bool* converted_;converted_174,4965
  bool* const_converted_;const_converted_175,4985
TEST(ImplicitCastTest, CanSelectBetweenConstAndNonConstCasrAppropriately) {TEST178,5015
class To {To194,5598
  To(bool* converted) { *converted = true; }  // NOLINTTo196,5618
TEST(ImplicitCastTest, CanUseImplicitConstructor) {TEST199,5678
TEST(GtestCheckSyntaxTest, BehavesLikeASingleStatement) {TEST213,6111
TEST(GtestCheckSyntaxTest, WorksWithSwitch) {TEST232,6509
TEST(FormatFileLocationTest, FormatsFileLocation) {TEST246,6766
TEST(FormatFileLocationTest, FormatsUnknownFile) {TEST251,6977
TEST(FormatFileLocationTest, FormatsUknownLine) {TEST257,7213
TEST(FormatFileLocationTest, FormatsUknownFileAndLine) {TEST261,7324
TEST(FormatCompilerIndependentFileLocationTest, FormatsFileLocation) {TEST266,7510
TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownFile) {TEST270,7663
TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownLine) {TEST275,7831
TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownFileAndLine) {TEST279,7979
void* ThreadFunc(void* data) {ThreadFunc286,8352
TEST(GetThreadCountTest, ReturnsCorrectValue) {TEST293,8504
TEST(GetThreadCountTest, ReturnsZeroWhenUnableToCountThreads) {TEST351,10527
TEST(GtestCheckDeathTest, DiesWithCorrectOutputOnFailure) {TEST356,10707
TEST(GtestCheckDeathTest, LivesSilentlyOnSuccess) {TEST374,11209
TEST(RegexEngineSelectionTest, SelectsCorrectRegexEngine) {TEST389,11694
class RETest : public ::testing::Test {};RETest402,11967
typedef testing::Types< ::std::string, const char*> StringTypes;StringTypes406,12092
TYPED_TEST(RETest, ImplicitConstructorWorks) {TYPED_TEST411,12235
TYPED_TEST(RETest, RejectsInvalidRegex) {TYPED_TEST423,12595
TYPED_TEST(RETest, FullMatchWorks) {TYPED_TEST430,12804
TYPED_TEST(RETest, PartialMatchWorks) {TYPED_TEST443,13257
TEST(IsInSetTest, NulCharIsNotInAnySet) {TEST458,13783
TEST(IsInSetTest, WorksForNonNulChars) {TEST464,13936
TEST(IsAsciiDigitTest, IsFalseForNonDigit) {TEST472,14122
TEST(IsAsciiDigitTest, IsTrueForDigit) {TEST481,14381
TEST(IsAsciiPunctTest, IsFalseForNonPunct) {TEST488,14561
TEST(IsAsciiPunctTest, IsTrueForPunct) {TEST496,14786
TEST(IsRepeatTest, IsFalseForNonRepeatChar) {TEST502,14942
TEST(IsRepeatTest, IsTrueForRepeatChar) {TEST510,15147
TEST(IsAsciiWhiteSpaceTest, IsFalseForNonWhiteSpace) {TEST516,15282
TEST(IsAsciiWhiteSpaceTest, IsTrueForWhiteSpace) {TEST524,15541
TEST(IsAsciiWordCharTest, IsFalseForNonWordChar) {TEST533,15834
TEST(IsAsciiWordCharTest, IsTrueForLetter) {TEST541,16080
TEST(IsAsciiWordCharTest, IsTrueForDigit) {TEST548,16276
TEST(IsAsciiWordCharTest, IsTrueForUnderscore) {TEST555,16471
TEST(IsValidEscapeTest, IsFalseForNonPrintable) {TEST559,16560
TEST(IsValidEscapeTest, IsFalseForDigit) {TEST564,16689
TEST(IsValidEscapeTest, IsFalseForWhiteSpace) {TEST569,16807
TEST(IsValidEscapeTest, IsFalseForSomeLetter) {TEST574,16931
TEST(IsValidEscapeTest, IsTrueForPunct) {TEST579,17054
TEST(IsValidEscapeTest, IsTrueForSomeLetter) {TEST590,17379
TEST(AtomMatchesCharTest, EscapedPunct) {TEST599,17639
TEST(AtomMatchesCharTest, Escaped_d) {TEST611,18078
TEST(AtomMatchesCharTest, Escaped_D) {TEST620,18365
TEST(AtomMatchesCharTest, Escaped_s) {TEST629,18651
TEST(AtomMatchesCharTest, Escaped_S) {TEST640,19037
TEST(AtomMatchesCharTest, Escaped_w) {TEST649,19324
TEST(AtomMatchesCharTest, Escaped_W) {TEST661,19757
TEST(AtomMatchesCharTest, EscapedWhiteSpace) {TEST672,20142
TEST(AtomMatchesCharTest, UnescapedDot) {TEST691,20936
TEST(AtomMatchesCharTest, UnescapedChar) {TEST700,21230
TEST(ValidateRegexTest, GeneratesFailureAndReturnsFalseForInvalid) {TEST710,21575
TEST(ValidateRegexTest, ReturnsTrueForValid) {TEST746,23637
TEST(MatchRepetitionAndRegexAtHeadTest, WorksForZeroOrOne) {TEST757,24011
TEST(MatchRepetitionAndRegexAtHeadTest, WorksForZeroOrMany) {TEST769,24528
TEST(MatchRepetitionAndRegexAtHeadTest, WorksForOneOrMany) {TEST780,24977
TEST(MatchRegexAtHeadTest, ReturnsTrueForEmptyRegex) {TEST791,25426
TEST(MatchRegexAtHeadTest, WorksWhenDollarIsInRegex) {TEST796,25568
TEST(MatchRegexAtHeadTest, WorksWhenRegexStartsWithEscapeSequence) {TEST803,25757
TEST(MatchRegexAtHeadTest, WorksWhenRegexStartsWithRepetition) {TEST811,26018
TEST(MatchRegexAtHeadTest, WorksWhenRegexStartsWithRepetionOfEscapeSequence) {TEST820,26325
TEST(MatchRegexAtHeadTest, MatchesSequentially) {TEST830,26706
TEST(MatchRegexAnywhereTest, ReturnsFalseWhenStringIsNull) {TEST836,26864
TEST(MatchRegexAnywhereTest, WorksWhenRegexStartsWithCaret) {TEST840,26974
TEST(MatchRegexAnywhereTest, ReturnsFalseWhenNoMatch) {TEST849,27273
TEST(MatchRegexAnywhereTest, ReturnsTrueWhenMatchingPrefix) {TEST854,27444
TEST(MatchRegexAnywhereTest, ReturnsTrueWhenMatchingNonPrefix) {TEST860,27670
TEST(RETest, ImplicitConstructorWorks) {TEST866,27889
TEST(RETest, RejectsInvalidRegex) {TEST875,28132
TEST(RETest, FullMatchWorks) {TEST887,28561
TEST(RETest, PartialMatchWorks) {TEST903,28982
TEST(CaptureTest, CapturesStdout) {TEST920,29437
TEST(CaptureTest, CapturesStderr) {TEST930,29709
TEST(CaptureTest, CapturesStdoutAndStderr) {TEST941,30054
TEST(CaptureDeathTest, CannotReenterStdoutCapture) {TEST950,30296
TEST(ThreadLocalTest, DefaultConstructorInitializesToDefaultValues) {TEST962,30641
TEST(ThreadLocalTest, SingleParamConstructorInitializesToParam) {TEST970,30825
class NoDefaultContructor {NoDefaultContructor979,31019
  explicit NoDefaultContructor(const char*) {}NoDefaultContructor981,31056
  NoDefaultContructor(const NoDefaultContructor&) {}NoDefaultContructor982,31103
TEST(ThreadLocalTest, ValueDefaultContructorIsNotRequiredForParamVersion) {TEST985,31160
TEST(ThreadLocalTest, GetAndPointerReturnSameValue) {TEST990,31324
TEST(ThreadLocalTest, PointerAndConstPointerReturnSameValue) {TEST1000,31672
void AddTwo(int* param) { *param += 2; }AddTwo1013,32098
TEST(ThreadWithParamTest, ConstructorExecutesThreadFunc) {TEST1015,32140
TEST(MutexDeathTest, AssertHeldShouldAssertWhenNotLocked) {TEST1022,32307
TEST(MutexTest, AssertHeldShouldNotAssertWhenLocked) {TEST1034,32640
class AtomicCounterWithMutex {AtomicCounterWithMutex1040,32749
  explicit AtomicCounterWithMutex(Mutex* mutex)AtomicCounterWithMutex1042,32789
  void Increment() {Increment1045,32887
  int value() const { return value_; }value1079,34258
  volatile int value_;value_1082,34308
  Mutex* const mutex_;  // Protects value_.mutex_1083,34331
  Random random_;random_1084,34375
void CountingThreadFunc(pair<AtomicCounterWithMutex*, int> param) {CountingThreadFunc1087,34397
TEST(MutexTest, OnlyOneThreadCanLockAtATime) {TEST1092,34602
  typedef ThreadWithParam<pair<AtomicCounterWithMutex*, int> > ThreadType;ThreadType1096,34714
void RunFromThread(void(func)(T), T param) {RunFromThread1119,35662
void RetrieveThreadLocalValue(RetrieveThreadLocalValue1124,35778
TEST(ThreadLocalTest, ParameterizedConstructorSetsDefault) {TEST1129,35909
class DestructorCall {DestructorCall1144,36487
  DestructorCall() {DestructorCall1146,36519
  bool CheckDestroyed() const {CheckDestroyed1154,36703
  void ReportDestroyed() {ReportDestroyed1162,36882
  static std::vector<DestructorCall*>& List() { return *list_; }List1169,36998
  static void ResetList() {ResetList1171,37064
  bool invoked_;invoked_1179,37209
  AutoHandle wait_event_;wait_event_1181,37247
  static std::vector<DestructorCall*>* const list_;list_1183,37280
std::vector<DestructorCall*>* const DestructorCall::list_ =list_1189,37448
class DestructorTracker {DestructorTracker1194,37629
  DestructorTracker() : index_(GetNewIndex()) {}DestructorTracker1196,37664
  DestructorTracker(const DestructorTracker& /* rhs */)DestructorTracker1197,37713
  ~DestructorTracker() {~DestructorTracker1199,37802
  static size_t GetNewIndex() {GetNewIndex1206,38018
  const size_t index_;index_1210,38158
typedef ThreadLocal<DestructorTracker>* ThreadParam;ThreadParam1213,38185
void CallThreadLocalGet(ThreadParam thread_local_param) {CallThreadLocalGet1215,38239
TEST(ThreadLocalTest, DestroysManagedObjectForOwnThreadWhenDying) {TEST1221,38438
TEST(ThreadLocalTest, DestroysManagedObjectAtThreadExit) {TEST1243,39149
TEST(ThreadLocalTest, ThreadLocalMutationsAffectOnlyCurrentThread) {TEST1267,39978
TEST(WindowsTypesTest, HANDLEIsVoidStar) {TEST1281,40399
TEST(WindowsTypesTest, _CRITICAL_SECTIONIs_CRITICAL_SECTION) {TEST1286,40548
TEST(WindowsTypesTest, CRITICAL_SECTIONIs_RTL_CRITICAL_SECTION) {TEST1290,40680

build/_deps/googletest-src/googletest/test/googletest-output-test_.cc,12758
void TestEq1(int x) { ASSERT_EQ(1, x); }TestEq159,2389
void TryTestSubroutine() {TryTestSubroutine63,2540
TEST(PassingTest, PassingTest1) {}TEST77,2956
TEST(PassingTest, PassingTest2) {}TEST79,2992
class FailingParamTest : public testing::TestWithParam<int> {};FailingParamTest83,3128
TEST_P(FailingParamTest, Fails) { EXPECT_EQ(1, GetParam()); }TEST_P85,3193
class EmptyBasenameParamInst : public testing::TestWithParam<int> {};EmptyBasenameParamInst94,3613
TEST_P(EmptyBasenameParamInst, Passes) { EXPECT_EQ(1, GetParam()); }TEST_P96,3684
static const char kGoldenString[] = "\"Line\0 1\"\nLine 2";kGoldenString100,3827
TEST(NonfatalFailureTest, EscapesStringOperands) {TEST102,3888
TEST(NonfatalFailureTest, DiffForLongStrings) {TEST110,4090
TEST(FatalFailureTest, FatalFailureInSubroutine) {TEST116,4295
TEST(FatalFailureTest, FatalFailureInNestedSubroutine) {TEST123,4487
TEST(FatalFailureTest, NonfatalFailureInSubroutine) {TEST140,5038
TEST(LoggingTest, InterleavingLoggingAndAssertions) {TEST147,5332
void SubWithoutTrace(int n) {SubWithoutTrace160,5693
void SubWithTrace(int n) {SubWithTrace166,5817
TEST(SCOPED_TRACETest, AcceptedValues) {TEST172,5921
TEST(SCOPED_TRACETest, ObeysScopes) {TEST183,6270
TEST(SCOPED_TRACETest, WorksInLoop) {TEST202,6923
TEST(SCOPED_TRACETest, WorksInSubroutine) {TEST213,7164
TEST(SCOPED_TRACETest, CanBeNested) {TEST221,7326
TEST(SCOPED_TRACETest, CanBeRepeated) {TEST230,7541
struct CheckPoints {CheckPoints282,9580
  Notification n1;n1283,9601
  Notification n2;n2284,9620
  Notification n3;n3285,9639
static void ThreadWithScopedTrace(CheckPoints* check_points) {ThreadWithScopedTrace288,9662
TEST(SCOPED_TRACETest, WorksConcurrently) {TEST302,10140
TEST(ScopedTraceTest, WithExplicitFileAndLine) {TEST326,10970
TEST(DisabledTestsWarningTest,TEST331,11184
void AdHocTest() {AdHocTest342,11610
int RunAllTests() {RunAllTests349,11805
class NonFatalFailureInFixtureConstructorTest : public testing::Test {NonFatalFailureInFixtureConstructorTest355,11925
  NonFatalFailureInFixtureConstructorTest() {NonFatalFailureInFixtureConstructorTest357,12008
  ~NonFatalFailureInFixtureConstructorTest() override {~NonFatalFailureInFixtureConstructorTest362,12171
  void SetUp() override { ADD_FAILURE() << "Expected failure #2, in SetUp()."; }SetUp366,12304
  void TearDown() override {TearDown368,12386
TEST_F(NonFatalFailureInFixtureConstructorTest, FailureInConstructor) {TEST_F373,12481
class FatalFailureInFixtureConstructorTest : public testing::Test {FatalFailureInFixtureConstructorTest378,12669
  FatalFailureInFixtureConstructorTest() {FatalFailureInFixtureConstructorTest380,12749
  ~FatalFailureInFixtureConstructorTest() override {~FatalFailureInFixtureConstructorTest385,12849
  void SetUp() override {SetUp389,12979
  void TearDown() override {TearDown395,13187
  void Init() { FAIL() << "Expected failure #1, in the test fixture c'tor."; }Init402,13411
TEST_F(FatalFailureInFixtureConstructorTest, FailureInConstructor) {TEST_F405,13494
class NonFatalFailureInSetUpTest : public testing::Test {NonFatalFailureInSetUpTest412,13783
  ~NonFatalFailureInSetUpTest() override { Deinit(); }~NonFatalFailureInSetUpTest414,13853
  void SetUp() override {SetUp416,13909
  void TearDown() override { FAIL() << "Expected failure #3, in TearDown()."; }TearDown421,14037
  void Deinit() { FAIL() << "Expected failure #4, in the test fixture d'tor."; }Deinit424,14128
TEST_F(NonFatalFailureInSetUpTest, FailureInSetUp) {TEST_F427,14213
class FatalFailureInSetUpTest : public testing::Test {FatalFailureInSetUpTest432,14363
  ~FatalFailureInSetUpTest() override { Deinit(); }~FatalFailureInSetUpTest434,14430
  void SetUp() override {SetUp436,14483
  void TearDown() override { FAIL() << "Expected failure #2, in TearDown()."; }TearDown441,14604
  void Deinit() { FAIL() << "Expected failure #3, in the test fixture d'tor."; }Deinit444,14695
TEST_F(FatalFailureInSetUpTest, FailureInSetUp) {TEST_F447,14780
TEST(AddFailureAtTest, MessageContainsSpecifiedFileAndLineNumber) {TEST452,14950
TEST(GtestFailAtTest, MessageContainsSpecifiedFileAndLineNumber) {TEST456,15094
namespace foo {foo470,15728
class MixedUpTestSuiteTest : public testing::Test {};MixedUpTestSuiteTest472,15745
TEST_F(MixedUpTestSuiteTest, FirstTestFromNamespaceFoo) {}TEST_F474,15800
TEST_F(MixedUpTestSuiteTest, SecondTestFromNamespaceFoo) {}TEST_F475,15859
class MixedUpTestSuiteWithSameTestNameTest : public testing::Test {};MixedUpTestSuiteWithSameTestNameTest477,15920
TEST_F(MixedUpTestSuiteWithSameTestNameTest,TEST_F479,15991
namespace bar {bar484,16105
class MixedUpTestSuiteTest : public testing::Test {};MixedUpTestSuiteTest486,16122
TEST_F(MixedUpTestSuiteTest, ThisShouldFail) {}TEST_F490,16318
TEST_F(MixedUpTestSuiteTest, ThisShouldFailToo) {}TEST_F491,16366
class MixedUpTestSuiteWithSameTestNameTest : public testing::Test {};MixedUpTestSuiteWithSameTestNameTest493,16418
TEST_F(MixedUpTestSuiteWithSameTestNameTest,TEST_F497,16602
class TEST_F_before_TEST_in_same_test_case : public testing::Test {};TEST_F_before_TEST_in_same_test_case507,16989
TEST_F(TEST_F_before_TEST_in_same_test_case, DefinedUsingTEST_F) {}TEST_F509,17060
TEST(TEST_F_before_TEST_in_same_test_case, DefinedUsingTESTAndShouldFail) {}TEST513,17242
class TEST_before_TEST_F_in_same_test_case : public testing::Test {};TEST_before_TEST_F_in_same_test_case515,17320
TEST(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST) {}TEST517,17391
TEST_F(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST_FAndShouldFail) {}TEST_F521,17569
int global_integer = 0;global_integer524,17725
TEST(ExpectNonfatalFailureTest, CanReferenceGlobalVariables) {TEST527,17822
TEST(ExpectNonfatalFailureTest, CanReferenceLocalVariables) {TEST536,18139
TEST(ExpectNonfatalFailureTest, SucceedsWhenThereIsOneNonfatalFailure) {TEST546,18499
TEST(ExpectNonfatalFailureTest, FailsWhenThereIsNoNonfatalFailure) {TEST553,18797
TEST(ExpectNonfatalFailureTest, FailsWhenThereAreTwoNonfatalFailures) {TEST560,19029
TEST(ExpectNonfatalFailureTest, FailsWhenThereIsOneFatalFailure) {TEST572,19394
TEST(ExpectNonfatalFailureTest, FailsWhenStatementReturns) {TEST579,19664
TEST(ExpectNonfatalFailureTest, FailsWhenStatementThrows) {TEST588,19924
TEST(ExpectFatalFailureTest, CanReferenceGlobalVariables) {TEST599,20214
TEST(ExpectFatalFailureTest, CanReferenceLocalStaticVariables) {TEST608,20505
TEST(ExpectFatalFailureTest, SucceedsWhenThereIsOneFatalFailure) {TEST617,20838
TEST(ExpectFatalFailureTest, FailsWhenThereIsNoFatalFailure) {TEST624,21102
void FatalFailure() { FAIL() << "Expected fatal failure."; }FatalFailure630,21281
TEST(ExpectFatalFailureTest, FailsWhenThereAreTwoFatalFailures) {TEST634,21424
TEST(ExpectFatalFailureTest, FailsWhenThereIsOneNonfatalFailure) {TEST646,21713
TEST(ExpectFatalFailureTest, FailsWhenStatementReturns) {TEST653,21988
TEST(ExpectFatalFailureTest, FailsWhenStatementThrows) {TEST662,22239
std::string ParamNameFunc(const testing::TestParamInfo<std::string>& info) {ParamNameFunc674,22523
class ParamTest : public testing::TestWithParam<std::string> {};ParamTest678,22624
TEST_P(ParamTest, Success) { EXPECT_EQ("a", GetParam()); }TEST_P680,22690
TEST_P(ParamTest, Failure) { EXPECT_EQ("b", GetParam()) << "Expected failure"; }TEST_P682,22750
using NoTests = ParamTest;NoTests688,23033
class DetectNotInstantiatedTest : public testing::TestWithParam<int> {};DetectNotInstantiatedTest692,23195
TEST_P(DetectNotInstantiatedTest, Used) {}TEST_P693,23268
class TypedTest : public testing::Test {};TypedTest699,23476
TYPED_TEST(TypedTest, Success) { EXPECT_EQ(0, TypeParam()); }TYPED_TEST703,23571
TYPED_TEST(TypedTest, Failure) {TYPED_TEST705,23634
typedef testing::Types<char, int> TypesForTestWithNames;TypesForTestWithNames709,23721
class TypedTestWithNames : public testing::Test {};TypedTestWithNames712,23801
class TypedTestNames {TypedTestNames714,23854
  static std::string GetName(int i) {GetName717,23910
TYPED_TEST(TypedTestWithNames, Success) {}TYPED_TEST727,24236
TYPED_TEST(TypedTestWithNames, Failure) { FAIL(); }TYPED_TEST729,24280
class TypedTestP : public testing::Test {};TypedTestP732,24355
TYPED_TEST_P(TypedTestP, Success) { EXPECT_EQ(0U, TypeParam()); }TYPED_TEST_P736,24433
TYPED_TEST_P(TypedTestP, Failure) {TYPED_TEST_P738,24500
typedef testing::Types<unsigned char, unsigned int> UnsignedTypes;UnsignedTypes744,24651
class TypedTestPNames {TypedTestPNames747,24788
  static std::string GetName(int i) {GetName750,24845
class DetectNotInstantiatedTypesTest : public testing::Test {};DetectNotInstantiatedTypesTest764,25293
TYPED_TEST_P(DetectNotInstantiatedTypesTest, Used) {TYPED_TEST_P766,25409
TEST(ADeathTest, ShouldRunFirst) {}TEST783,26003
class ATypedDeathTest : public testing::Test {};ATypedDeathTest789,26179
typedef testing::Types<int, double> NumericTypes;NumericTypes791,26229
TYPED_TEST(ATypedDeathTest, ShouldRunFirst) {}TYPED_TEST794,26329
class ATypeParamDeathTest : public testing::Test {};ATypeParamDeathTest800,26529
TYPED_TEST_P(ATypeParamDeathTest, ShouldRunFirst) {}TYPED_TEST_P804,26625
class ExpectFailureTest : public testing::Test {ExpectFailureTest814,26939
  enum FailureMode { FATAL_FAILURE, NONFATAL_FAILURE };FailureMode816,27061
  enum FailureMode { FATAL_FAILURE, NONFATAL_FAILURE };FATAL_FAILURE816,27061
  enum FailureMode { FATAL_FAILURE, NONFATAL_FAILURE };NONFATAL_FAILURE816,27061
  static void AddFailure(FailureMode failure) {AddFailure817,27117
TEST_F(ExpectFailureTest, ExpectFatalFailure) {TEST_F826,27325
TEST_F(ExpectFailureTest, ExpectNonFatalFailure) {TEST_F842,27942
class ExpectFailureWithThreadsTest : public ExpectFailureTest {ExpectFailureWithThreadsTest858,28552
  static void AddFailureInOtherThread(FailureMode failure) {AddFailureInOtherThread860,28628
TEST_F(ExpectFailureWithThreadsTest, ExpectFatalFailure) {TEST_F866,28788
TEST_F(ExpectFailureWithThreadsTest, ExpectNonFatalFailure) {TEST_F873,29045
typedef ExpectFailureWithThreadsTest ScopedFakeTestPartResultReporterTest;ScopedFakeTestPartResultReporterTest880,29318
TEST_F(ScopedFakeTestPartResultReporterTest, InterceptOnlyCurrentThread) {TEST_F884,29552
TEST_F(ExpectFailureTest, ExpectFatalFailureOnAllThreads) {TEST_F900,30083
TEST_F(ExpectFailureTest, ExpectNonFatalFailureOnAllThreads) {TEST_F914,30735
class DynamicFixture : public testing::Test {DynamicFixture930,31489
  DynamicFixture() { printf("DynamicFixture()\n"); }DynamicFixture932,31547
  ~DynamicFixture() override { printf("~DynamicFixture()\n"); }~DynamicFixture933,31600
  void SetUp() override { printf("DynamicFixture::SetUp\n"); }SetUp934,31664
  void TearDown() override { printf("DynamicFixture::TearDown\n"); }TearDown935,31727
  static void SetUpTestSuite() { printf("DynamicFixture::SetUpTestSuite\n"); }SetUpTestSuite937,31797
  static void TearDownTestSuite() {TearDownTestSuite938,31876
class DynamicTest : public DynamicFixture {DynamicTest944,31992
  void TestBody() override { EXPECT_TRUE(Pass); }TestBody946,32045
        __LINE__, []() -> DynamicFixture* { return new DynamicTest<true>; }),__anon6907d6f50102953,32280
        __LINE__, []() -> DynamicFixture* { return new DynamicTest<false>; }),__anon6907d6f50202956,32458
        []() -> DynamicFixture* { return new DynamicTest<true>; }),__anon6907d6f50302962,32732
        __LINE__, []() -> DynamicFixture* { return new DynamicTest<true>; }),__anon6907d6f50402967,32962
        []() -> testing::Test* { return new DynamicTest<true>; }),__anon6907d6f50502970,33147
        __LINE__, []() -> DynamicFixture* { return new DynamicTest<true>; }),__anon6907d6f50602976,33411
                          []() { return new DynamicTest<true>; }));__anon6907d6f50702979,33612
auto dynamic_test = (dynamic_test949,32099
class FooEnvironment : public testing::Environment {FooEnvironment983,33756
  void SetUp() override { printf("%s", "FooEnvironment::SetUp() called.\n"); }SetUp985,33818
  void TearDown() override {TearDown987,33898
class BarEnvironment : public testing::Environment {BarEnvironment993,34034
  void SetUp() override { printf("%s", "BarEnvironment::SetUp() called.\n"); }SetUp995,34096
  void TearDown() override {TearDown997,34176
class TestSuiteThatFailsToSetUp : public testing::Test {TestSuiteThatFailsToSetUp1003,34323
  static void SetUpTestSuite() { EXPECT_TRUE(false); }SetUpTestSuite1005,34389
TEST_F(TestSuiteThatFailsToSetUp, ShouldNotRun) { std::abort(); }TEST_F1007,34447
int main(int argc, char** argv) {main1014,34711

build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest.py,810
LIST_TESTS_FLAG = 'gtest_list_tests'LIST_TESTS_FLAG46,1982
EXE_PATH = gtest_test_utils.GetTestExecutablePath('googletest-list-tests-unittest_')EXE_PATH49,2075
EXPECTED_OUTPUT_NO_FILTER_RE = re.compile(r"""FooDeathTest\.EXPECTED_OUTPUT_NO_FILTER_RE53,2254
EXPECTED_OUTPUT_FILTER_FOO_RE = re.compile(r"""FooDeathTest\.EXPECTED_OUTPUT_FILTER_FOO_RE97,3299
def Run(args):Run114,3484
class GTestListTestsUnitTest(gtest_test_utils.TestCase):GTestListTestsUnitTest124,3727
  def RunAndVerify(self, flag_value, expected_output_re, other_flag):RunAndVerify127,3852
  def testDefaultBehavior(self):testDefaultBehavior171,5359
  def testFlag(self):testFlag178,5569
  def testOverrideNonFilterFlags(self):testOverrideNonFilterFlags188,5916
  def testWithFilterFlags(self):testWithFilterFlags195,6200

build/_deps/googletest-src/googletest/test/BUILD.bazel,0

build/_deps/googletest-src/googletest/test/googletest-param-test-invalid-name2-test_.cc,281
namespace {__anona97ffff6011132,1583
class DummyTest : public ::testing::TestWithParam<const char *> {};DummyTest33,1595
std::string StringParamTestSuffix(StringParamTestSuffix35,1664
TEST_P(DummyTest, Dummy) {}TEST_P40,1792
int main(int argc, char *argv[]) {main47,2007

build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc,1755
TEST(Foo, Bar1) {}TEST42,1971
TEST(Foo, Bar2) {}TEST44,1991
TEST(Foo, DISABLED_Bar3) {}TEST46,2011
TEST(Abc, Xyz) {}TEST48,2040
TEST(Abc, Def) {}TEST50,2059
TEST(FooBar, Baz) {}TEST52,2078
class FooTest : public testing::Test {};FooTest54,2100
TEST_F(FooTest, Test1) {}TEST_F56,2142
TEST_F(FooTest, DISABLED_Test2) {}TEST_F58,2169
TEST_F(FooTest, Test3) {}TEST_F60,2205
TEST(FooDeathTest, Test1) {}TEST62,2232
class MyType {MyType66,2304
  explicit MyType(const std::string& a_value) : value_(a_value) {}MyType68,2328
  const std::string& value() const { return value_; }value70,2396
  std::string value_;value_73,2461
void PrintTo(const MyType& x, std::ostream* os) { *os << x.value(); }PrintTo77,2533
class ValueParamTest : public testing::TestWithParam<MyType> {};ValueParamTest79,2604
TEST_P(ValueParamTest, TestA) {}TEST_P81,2670
TEST_P(ValueParamTest, TestB) {}TEST_P83,2704
    VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooVeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName101,3405
class TypedTest : public testing::Test {};TypedTest105,3709
class MyArray {};MyArray108,3786
    MyTypes;MyTypes113,4136
TYPED_TEST(TypedTest, TestA) {}TYPED_TEST117,4189
TYPED_TEST(TypedTest, TestB) {}TYPED_TEST119,4222
class TypeParamTest : public testing::Test {};TypeParamTest124,4318
TYPED_TEST_P(TypeParamTest, TestA) {}TYPED_TEST_P128,4402
TYPED_TEST_P(TypeParamTest, TestB) {}TYPED_TEST_P130,4441
int main(int argc, char** argv) {main136,4600

build/_deps/googletest-src/googletest/test/gtest_testbridge_test_.cc,106
TEST(TestFilterTest, TestThatSucceeds) {}TEST38,1781
TEST(TestFilterTest, TestThatFails) {TEST40,1824

build/_deps/googletest-src/googletest/test/gtest_premature_exit_test.cc,673
namespace {__anon8d289a01011144,1878
class PrematureExitTest : public Test {PrematureExitTest46,1891
  static bool FileExists(const char* filepath) {FileExists49,1996
  PrematureExitTest() {PrematureExitTest55,2122
  bool PrematureExitFileExists() const {PrematureExitFileExists65,2427
  const char* premature_exit_file_path_;premature_exit_file_path_69,2523
typedef PrematureExitTest PrematureExitDeathTest;PrematureExitDeathTest72,2568
TEST_F(PrematureExitDeathTest, FileExistsDuringExecutionOfDeathTest) {TEST_F79,2848
TEST_F(PrematureExitTest, PrematureExitFileExistsDuringTestExecution) {TEST_F99,3481
int main(int argc, char** argv) {main111,3784

build/_deps/googletest-src/googletest/test/gtest_prod_test.cc,212
TEST(PrivateCodeTest, CanAccessPrivateMembers) {TEST38,1738
typedef testing::Test PrivateCodeFixtureTest;PrivateCodeFixtureTest46,1866
TEST_F(PrivateCodeFixtureTest, CanAccessPrivateMembers) {TEST_F50,2011

build/_deps/googletest-src/googletest/test/googletest-color-test.py,705
IS_WINDOWS = os.name == 'nt'IS_WINDOWS37,1686
COLOR_ENV_VAR = 'GTEST_COLOR'COLOR_ENV_VAR39,1716
COLOR_FLAG = 'gtest_color'COLOR_FLAG40,1746
COMMAND = gtest_test_utils.GetTestExecutablePath('googletest-color-test_')COMMAND41,1773
def SetEnvVar(env_var, value):SetEnvVar44,1850
def UsesColor(term, color_env_var, color_flag):UsesColor53,2072
class GTestColorTest(gtest_test_utils.TestCase):GTestColorTest67,2441
  def testNoEnvVarNoFlag(self):testNoEnvVarNoFlag68,2490
  def testFlagOnly(self):testFlagOnly83,3163
  def testEnvVarOnly(self):testEnvVarOnly94,3605
  def testEnvVarAndFlag(self):testEnvVarAndFlag105,4060
  def testAliasesOfYesAndNo(self):testAliasesOfYesAndNo112,4334

build/_deps/googletest-src/googletest/test/gtest_xml_test_utils.py,422
GTEST_DEFAULT_OUTPUT_FILE = 'test_detail.xml'GTEST_DEFAULT_OUTPUT_FILE36,1667
class GTestXMLTestCase(gtest_test_utils.TestCase):GTestXMLTestCase38,1714
  def AssertEquivalentNodes(self, expected_node, actual_node):AssertEquivalentNodes44,1845
  identifying_attribute = {identifying_attribute103,4719
  def _GetChildren(self, element):_GetChildren112,4915
  def NormalizeXml(self, element):NormalizeXml153,6946

build/_deps/googletest-src/googletest/test/gtest_throw_on_failure_ex_test.cc,166
void Fail(const char* msg) {Fail44,1943
void TestFailureThrowsRuntimeError() {TestFailureThrowsRuntimeError52,2115
int main(int argc, char** argv) {main79,2954

build/_deps/googletest-src/googletest/test/googletest-param-test2-test.cc,64
ParamGenerator<int> extern_gen = Values(33);extern_gen43,1957

build/_deps/googletest-src/googletest/test/gtest_repeat_test.cc,1633
namespace {__anon2b6515f4011139,1703
#define GTEST_CHECK_INT_EQ_(GTEST_CHECK_INT_EQ_43,1823
int g_environment_set_up_count = 0;g_environment_set_up_count59,2737
int g_environment_tear_down_count = 0;g_environment_tear_down_count60,2773
class MyEnvironment : public testing::Environment {MyEnvironment62,2813
  MyEnvironment() {}MyEnvironment64,2874
  void SetUp() override { g_environment_set_up_count++; }SetUp65,2895
  void TearDown() override { g_environment_tear_down_count++; }TearDown66,2953
int g_should_fail_count = 0;g_should_fail_count71,3050
TEST(FooTest, ShouldFail) {TEST73,3080
int g_should_pass_count = 0;g_should_pass_count80,3207
TEST(FooTest, ShouldPass) { g_should_pass_count++; }TEST82,3237
int g_death_test_count = 0;g_death_test_count87,3384
TEST(BarDeathTest, ThreadSafeAndFast) {TEST89,3413
int g_param_test_count = 0;g_param_test_count99,3716
const int kNumberOfParamTests = 10;kNumberOfParamTests101,3745
class MyParamTest : public testing::TestWithParam<int> {};MyParamTest103,3782
TEST_P(MyParamTest, ShouldPass) {TEST_P105,3842
void ResetCounts() {ResetCounts113,4136
void CheckCounts(int expected) {CheckCounts123,4389
void TestRepeatUnspecified() {TestRepeatUnspecified133,4861
void TestRepeat(int repeat) {TestRepeat140,5051
void TestRepeatWithEmptyFilter(int repeat) {TestRepeatWithEmptyFilter151,5367
void TestRepeatWithFilterForSuccessfulTests(int repeat) {TestRepeatWithFilterForSuccessfulTests163,5714
void TestRepeatWithFilterForFailedTests(int repeat) {TestRepeatWithFilterForFailedTests180,6405
int main(int argc, char **argv) {main197,6989

build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest_.cc,237
namespace {__anonaaa857a8011147,2050
TEST(Foo, Bar) { EXPECT_EQ(2, 3); }TEST50,2098
ExitWithExceptionCode(struct _EXCEPTION_POINTERS* exception_pointers) {ExitWithExceptionCode55,2259
int main(int argc, char** argv) {main62,2418

build/_deps/googletest-src/googletest/test/gtest_test_utils.py,1303
IS_WINDOWS = os.name == 'nt'IS_WINDOWS38,1739
IS_CYGWIN = os.name == 'posix' and 'CYGWIN' in os.uname()[0]IS_CYGWIN39,1768
IS_OS2 = os.name == 'os2'IS_OS240,1829
import unittest as _test_module_test_module45,1900
GTEST_OUTPUT_VAR_NAME = 'GTEST_OUTPUT'GTEST_OUTPUT_VAR_NAME48,1960
PREMATURE_EXIT_FILE_ENV_VAR = 'TEST_PREMATURE_EXIT_FILE'PREMATURE_EXIT_FILE_ENV_VAR51,2079
environ = os.environ.copy()environ53,2137
def SetEnvVar(env_var, value):SetEnvVar56,2167
TestCase = _test_module.TestCase  # pylint: disable=C6409TestCase68,2520
_flag_map = {'source_dir': os.path.dirname(sys.argv[0]),_flag_map72,2704
_gtest_flags_are_parsed = False_gtest_flags_are_parsed74,2817
def _ParseAndStripGTestFlags(argv):_ParseAndStripGTestFlags77,2851
def GetFlag(flag):GetFlag106,3795
def GetSourceDir():GetSourceDir117,4072
def GetBuildDir():GetBuildDir123,4219
_temp_dir = None_temp_dir129,4368
def _RemoveTempDir():_RemoveTempDir131,4386
def GetTempDir():GetTempDir138,4508
def GetTestExecutablePath(executable_name, build_dir=None):GetTestExecutablePath145,4621
def GetExitStatus(exit_code):GetExitStatus176,5632
class Subprocess:Subprocess196,6172
  def __init__(self, command, working_dir=None, capture_stderr=True, env=None):__init__197,6190
def Main():Main243,7960

build/_deps/googletest-src/googletest/test/googletest-failfast-unittest_.cc,3037
namespace {__anonf77cecee011141,1913
class HasFixtureTest : public testing::Test {};HasFixtureTest45,1951
TEST_F(HasFixtureTest, Test0) {}TEST_F47,2000
TEST_F(HasFixtureTest, Test1) { FAIL() << "Expected failure."; }TEST_F49,2034
TEST_F(HasFixtureTest, Test2) { FAIL() << "Expected failure."; }TEST_F51,2100
TEST_F(HasFixtureTest, Test3) { FAIL() << "Expected failure."; }TEST_F53,2166
TEST_F(HasFixtureTest, Test4) { FAIL() << "Expected failure."; }TEST_F55,2232
TEST(HasSimpleTest, Test0) {}TEST59,2322
TEST(HasSimpleTest, Test1) { FAIL() << "Expected failure."; }TEST61,2353
TEST(HasSimpleTest, Test2) { FAIL() << "Expected failure."; }TEST63,2416
TEST(HasSimpleTest, Test3) { FAIL() << "Expected failure."; }TEST65,2479
TEST(HasSimpleTest, Test4) { FAIL() << "Expected failure."; }TEST67,2542
TEST(HasDisabledTest, Test0) {}TEST71,2631
TEST(HasDisabledTest, DISABLED_Test1) { FAIL() << "Expected failure."; }TEST73,2664
TEST(HasDisabledTest, Test2) { FAIL() << "Expected failure."; }TEST75,2738
TEST(HasDisabledTest, Test3) { FAIL() << "Expected failure."; }TEST77,2803
TEST(HasDisabledTest, Test4) { FAIL() << "Expected failure."; }TEST79,2868
TEST(HasDeathTest, Test0) { EXPECT_DEATH_IF_SUPPORTED(exit(1), ".*"); }TEST83,2955
TEST(HasDeathTest, Test1) {TEST85,3028
TEST(HasDeathTest, Test2) {TEST89,3125
TEST(HasDeathTest, Test3) {TEST93,3222
TEST(HasDeathTest, Test4) {TEST97,3319
TEST(DISABLED_HasDisabledSuite, Test0) {}TEST103,3451
TEST(DISABLED_HasDisabledSuite, Test1) { FAIL() << "Expected failure."; }TEST105,3494
TEST(DISABLED_HasDisabledSuite, Test2) { FAIL() << "Expected failure."; }TEST107,3569
TEST(DISABLED_HasDisabledSuite, Test3) { FAIL() << "Expected failure."; }TEST109,3644
TEST(DISABLED_HasDisabledSuite, Test4) { FAIL() << "Expected failure."; }TEST111,3719
class HasParametersTest : public testing::TestWithParam<int> {};HasParametersTest115,3821
TEST_P(HasParametersTest, Test1) { FAIL() << "Expected failure."; }TEST_P117,3887
TEST_P(HasParametersTest, Test2) { FAIL() << "Expected failure."; }TEST_P119,3956
class MyTestListener : public ::testing::EmptyTestEventListener {MyTestListener124,4139
  void OnTestSuiteStart(const ::testing::TestSuite& test_suite) override {OnTestSuiteStart125,4205
  void OnTestStart(const ::testing::TestInfo& test_info) override {OnTestStart129,4355
  void OnTestPartResult(OnTestPartResult134,4535
  void OnTestEnd(const ::testing::TestInfo& test_info) override {OnTestEnd140,4757
  void OnTestSuiteEnd(const ::testing::TestSuite& test_suite) override {OnTestSuiteEnd145,4933
TEST(HasSkipTest, Test0) { SUCCEED() << "Expected success."; }TEST150,5082
TEST(HasSkipTest, Test1) { GTEST_SKIP() << "Expected skip."; }TEST152,5146
TEST(HasSkipTest, Test2) { FAIL() << "Expected failure."; }TEST154,5210
TEST(HasSkipTest, Test3) { FAIL() << "Expected failure."; }TEST156,5271
TEST(HasSkipTest, Test4) { FAIL() << "Expected failure."; }TEST158,5332
int main(int argc, char** argv) {main162,5410

build/_deps/googletest-src/googletest/test/googletest-param-test-test.h,319
#define GOOGLETEST_TEST_GOOGLETEST_PARAM_TEST_TEST_H_GOOGLETEST_TEST_GOOGLETEST_PARAM_TEST_TEST_H_36,1781
class ExternalInstantiationTest : public ::testing::TestWithParam<int> {};ExternalInstantiationTest42,1963
class InstantiationInMultipleTranslationUnitsTestInstantiationInMultipleTranslationUnitsTest46,2125

build/_deps/googletest-src/googletest/test/gtest_skip_check_output_test.py,332
EXE_PATH = gtest_test_utils.GetTestExecutablePath('gtest_skip_test')EXE_PATH41,1820
OUTPUT = gtest_test_utils.Subprocess([EXE_PATH]).outputOUTPUT43,1890
class SkipEntireEnvironmentTest(gtest_test_utils.TestCase):SkipEntireEnvironmentTest47,1956
  def testSkipEntireEnvironmentTest(self):testSkipEntireEnvironmentTest49,2017

build/_deps/googletest-src/googletest/test/gtest_testbridge_test.py,399
binary_name = 'gtest_testbridge_test_'binary_name36,1676
COMMAND = gtest_test_utils.GetTestExecutablePath(binary_name)COMMAND37,1715
TESTBRIDGE_NAME = 'TESTBRIDGE_TEST_ONLY'TESTBRIDGE_NAME38,1777
def Assert(condition):Assert41,1820
class GTestTestFilterTest(gtest_test_utils.TestCase):GTestTestFilterTest46,1890
  def testTestExecutionIsFiltered(self):testTestExecutionIsFiltered48,1945

build/_deps/googletest-src/googletest/test/googletest-message-test.cc,921
namespace {__anon691a580a011136,1652
TEST(MessageTest, DefaultConstructor) {TEST43,1763
TEST(MessageTest, CopyConstructor) {TEST49,1892
TEST(MessageTest, ConstructsFromCString) {TEST56,2080
TEST(MessageTest, StreamsFloat) {TEST62,2217
TEST(MessageTest, StreamsDouble) {TEST70,2559
TEST(MessageTest, StreamsPointer) {TEST80,2959
TEST(MessageTest, StreamsNullPointer) {TEST87,3123
TEST(MessageTest, StreamsCString) {TEST93,3270
TEST(MessageTest, StreamsNullCString) {TEST98,3399
TEST(MessageTest, StreamsString) {TEST104,3548
TEST(MessageTest, StreamsStringWithEmbeddedNUL) {TEST110,3738
TEST(MessageTest, StreamsNULChar) {TEST119,4138
TEST(MessageTest, StreamsInt) {TEST124,4254
TEST(MessageTest, StreamsBasicIoManip) {TEST130,4432
TEST(MessageTest, GetString) {TEST139,4710
TEST(MessageTest, StreamsToOStream) {TEST146,4873
TEST(MessageTest, DoesNotTakeUpMuchStackSpace) {TEST154,5114

build/_deps/googletest-src/googletest/test/googletest-filter-unittest_.cc,1344
namespace {__anon1f5bf88a011141,1913
class FooTest : public testing::Test {};FooTest45,1949
TEST_F(FooTest, Abc) {}TEST_F47,1991
TEST_F(FooTest, Xyz) { FAIL() << "Expected failure."; }TEST_F49,2016
TEST(BarTest, TestOne) {}TEST53,2096
TEST(BarTest, TestTwo) {}TEST55,2123
TEST(BarTest, TestThree) {}TEST57,2150
TEST(BarTest, DISABLED_TestFour) { FAIL() << "Expected failure."; }TEST59,2179
TEST(BarTest, DISABLED_TestFive) { FAIL() << "Expected failure."; }TEST61,2248
TEST(BazTest, TestOne) { FAIL() << "Expected failure."; }TEST65,2340
TEST(BazTest, TestA) {}TEST67,2399
TEST(BazTest, TestB) {}TEST69,2424
TEST(BazTest, DISABLED_TestC) { FAIL() << "Expected failure."; }TEST71,2449
TEST(HasDeathTest, Test1) { EXPECT_DEATH_IF_SUPPORTED(exit(1), ".*"); }TEST75,2542
TEST(HasDeathTest, Test2) { EXPECT_DEATH_IF_SUPPORTED(exit(1), ".*"); }TEST79,2719
TEST(DISABLED_FoobarTest, Test1) { FAIL() << "Expected failure."; }TEST83,2817
TEST(DISABLED_FoobarTest, DISABLED_Test2) { FAIL() << "Expected failure."; }TEST85,2886
TEST(DISABLED_FoobarbazTest, TestA) { FAIL() << "Expected failure."; }TEST89,2992
class ParamTest : public testing::TestWithParam<int> {};ParamTest91,3064
TEST_P(ParamTest, TestX) {}TEST_P93,3122
TEST_P(ParamTest, TestY) {}TEST_P95,3151
int main(int argc, char **argv) {main102,3330

build/_deps/googletest-src/googletest/test/gtest_unittest.cc,60049
TEST(CommandLineFlagsTest, CanBeAccessedInCodeOnceGTestHIsIncluded) {TEST39,1843
namespace testing {testing72,3039
namespace internal {internal73,3059
class StreamingListenerTest : public Test {StreamingListenerTest77,3112
  class FakeSocketWriter : public StreamingListener::AbstractSocketWriter {FakeSocketWriter79,3165
    void Send(const std::string& message) override { output_ += message; }Send82,3289
    std::string output_;output_84,3365
  StreamingListenerTest()StreamingListenerTest87,3396
  std::string* output() { return &(fake_sock_writer_->output_); }output94,3659
  FakeSocketWriter* const fake_sock_writer_;fake_sock_writer_96,3726
  StreamingListener streamer_;streamer_97,3771
  UnitTest unit_test_;unit_test_98,3802
  TestInfo test_info_obj_;  // The name test_info_ was taken by testing::Test.test_info_obj_99,3825
TEST_F(StreamingListenerTest, OnTestProgramEnd) {TEST_F102,3908
TEST_F(StreamingListenerTest, OnTestIterationEnd) {TEST_F108,4080
TEST_F(StreamingListenerTest, OnTestSuiteStart) {TEST_F114,4279
TEST_F(StreamingListenerTest, OnTestSuiteEnd) {TEST_F120,4489
TEST_F(StreamingListenerTest, OnTestStart) {TEST_F126,4706
TEST_F(StreamingListenerTest, OnTestEnd) {TEST_F132,4867
TEST_F(StreamingListenerTest, OnTestPartResult) {TEST_F138,5039
class TestEventListenersAccessor {TestEventListenersAccessor153,5590
  static TestEventListener* GetRepeater(TestEventListeners* listeners) {GetRepeater155,5634
  static void SetDefaultResultPrinter(TestEventListeners* listeners,SetDefaultResultPrinter159,5746
  static void SetDefaultXmlGenerator(TestEventListeners* listeners,SetDefaultXmlGenerator163,5938
  static bool EventForwardingEnabled(const TestEventListeners& listeners) {EventForwardingEnabled168,6128
  static void SuppressEventForwarding(TestEventListeners* listeners) {SuppressEventForwarding172,6256
class UnitTestRecordPropertyTestHelper : public Test {UnitTestRecordPropertyTestHelper177,6377
  UnitTestRecordPropertyTestHelper() {}UnitTestRecordPropertyTestHelper179,6444
  void UnitTestRecordProperty(const char* key, const std::string& value) {UnitTestRecordProperty182,6556
  UnitTest unit_test_;unit_test_186,6679
class TestingVector : public std::vector<int> {};TestingVector275,9830
::std::ostream& operator<<(::std::ostream& os, const TestingVector& vector) {operator <<277,9881
namespace {__anon728d14140111287,10150
TEST(GetRandomSeedFromFlagTest, HandlesZero) {TEST289,10163
TEST(GetRandomSeedFromFlagTest, PreservesValidSeed) {TEST295,10333
TEST(GetRandomSeedFromFlagTest, NormalizesInvalidSeed) {TEST303,10648
TEST(GetNextRandomSeedTest, WorksForValidInput) {TEST313,10973
static void ClearCurrentTestPartResults() {ClearCurrentTestPartResults326,11478
TEST(GetTypeIdTest, ReturnsSameValueForSameType) {TEST333,11639
class SubClassOfTest : public Test {};SubClassOfTest338,11793
class AnotherSubClassOfTest : public Test {};AnotherSubClassOfTest339,11832
TEST(GetTypeIdTest, ReturnsDifferentValuesForDifferentTypes) {TEST341,11879
TEST(GetTestTypeIdTest, ReturnsTheSameValueInsideOrOutsideOfGoogleTest) {TEST352,12426
TEST(CanonicalizeForStdLibVersioning, LeavesUnversionedNamesUnchanged) {TEST360,12662
TEST(CanonicalizeForStdLibVersioning, ElidesDoubleUnderNames) {TEST369,13162
TEST(FormatTimeInMillisAsSecondsTest, FormatsZero) {TEST383,13738
TEST(FormatTimeInMillisAsSecondsTest, FormatsPositiveNumber) {TEST387,13844
TEST(FormatTimeInMillisAsSecondsTest, FormatsNegativeNumber) {TEST395,14180
class FormatEpochTimeInMillisAsIso8601Test : public Test {FormatEpochTimeInMillisAsIso8601Test409,14865
  static const TimeInMillis kMillisPerSec = 1000;kMillisPerSec414,15131
  void SetUp() override {SetUp417,15192
  void TearDown() override {TearDown430,15624
  static void SetTimeZone(const char* time_zone) {SetTimeZone436,15751
  const char* saved_tz_;saved_tz_465,16746
const TimeInMillis FormatEpochTimeInMillisAsIso8601Test::kMillisPerSec;kMillisPerSec468,16775
TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsTwoDigitSegments) {TEST_F470,16848
TEST_F(FormatEpochTimeInMillisAsIso8601Test, IncludesMillisecondsAfterDot) {TEST_F475,17036
TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsLeadingZeroes) {TEST_F480,17236
TEST_F(FormatEpochTimeInMillisAsIso8601Test, Prints24HourTime) {TEST_F485,17421
TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsEpochStart) {TEST_F490,17603
TEST(NullLiteralTest, LHSAllowsNullLiterals) {TEST501,17992
struct ConvertToAll {ConvertToAll518,18595
  operator T() const {  // NOLINToperator T520,18641
struct ConvertToPointer {ConvertToPointer525,18699
  operator T*() const {  // NOLINToperator T*527,18746
struct ConvertToAllButNoPointers {ConvertToAllButNoPointers532,18809
  operator T() const {  // NOLINToperator T535,18948
struct MyType {};MyType540,19006
inline bool operator==(MyType const&, MyType const&) { return true; }operator ==541,19024
TEST(NullLiteralTest, ImplicitConversion) {TEST543,19095
TEST(NullLiteralTest, NoConversionNoWarning) {TEST560,19634
TEST(CodePointToUtf8Test, CanEncodeNul) {TEST580,20130
TEST(CodePointToUtf8Test, CanEncodeAscii) {TEST585,20270
TEST(CodePointToUtf8Test, CanEncode8To11Bits) {TEST594,20581
TEST(CodePointToUtf8Test, CanEncode12To16Bits) {TEST607,21150
TEST(CodePointToUtf8Test, CanEncode17To21Bits) {TEST622,21806
TEST(CodePointToUtf8Test, CanEncodeInvalidCodePoint) {TEST634,22348
TEST(WideStringToUtf8Test, CanEncodeNul) {TEST643,22616
TEST(WideStringToUtf8Test, CanEncodeAscii) {TEST649,22822
TEST(WideStringToUtf8Test, CanEncode8To11Bits) {TEST658,23194
TEST(WideStringToUtf8Test, CanEncode12To16Bits) {TEST671,23726
TEST(WideStringToUtf8Test, StopsOnNulCharacter) {TEST684,24313
TEST(WideStringToUtf8Test, StopsWhenLengthLimitReached) {TEST690,24544
TEST(WideStringToUtf8Test, CanEncode17To21Bits) {TEST698,24883
TEST(WideStringToUtf8Test, CanEncodeInvalidCodePoint) {TEST709,25475
TEST(WideStringToUtf8Test, CanEncodeValidUtf16SUrrogatePairs) {TEST716,25792
TEST(WideStringToUtf8Test, CanEncodeInvalidUtf16SurrogatePair) {TEST723,26064
TEST(WideStringToUtf8Test, ConcatenatesCodepointsCorrectly) {TEST738,26783
TEST(WideStringToUtf8Test, ConcatenatesCodepointsCorrectly) {TEST750,27108
TEST(RandomDeathTest, GeneratesCrashesOnInvalidRange) {TEST763,27428
TEST(RandomTest, GeneratesNumbersWithinRange) {TEST773,27888
TEST(RandomTest, RepeatsWhenReseeded) {TEST786,28318
static bool IsPositive(int n) { return n > 0; }IsPositive807,28824
TEST(ContainerUtilityTest, CountIf) {TEST809,28873
static int g_sum = 0;g_sum825,29242
static void Accumulate(int n) { g_sum += n; }Accumulate826,29264
TEST(ContainerUtilityTest, ForEach) {TEST828,29311
TEST(ContainerUtilityTest, GetElementOr) {TEST847,29724
TEST(ContainerUtilityDeathTest, ShuffleRange) {TEST859,30050
class VectorShuffleTest : public Test {VectorShuffleTest880,30769
  static const size_t kVectorSize = 20;kVectorSize882,30821
  VectorShuffleTest() : random_(1) {VectorShuffleTest884,30862
  static bool VectorIsCorrupt(const TestingVector& vector) {VectorIsCorrupt890,31000
  static bool VectorIsNotCorrupt(const TestingVector& vector) {VectorIsNotCorrupt909,31555
  static bool RangeIsShuffled(const TestingVector& vector, int begin, int end) {RangeIsShuffled913,31661
  static bool RangeIsUnshuffled(const TestingVector& vector, int begin,RangeIsUnshuffled922,31889
  static bool VectorIsShuffled(const TestingVector& vector) {VectorIsShuffled927,32058
  static bool VectorIsUnshuffled(const TestingVector& vector) {VectorIsUnshuffled931,32197
  testing::internal::Random random_;random_935,32304
  TestingVector vector_;vector_936,32341
const size_t VectorShuffleTest::kVectorSize;kVectorSize939,32398
TEST_F(VectorShuffleTest, HandlesEmptyRange) {TEST_F941,32444
TEST_F(VectorShuffleTest, HandlesRangeOfSizeOne) {TEST_F963,33220
TEST_F(VectorShuffleTest, ShufflesEntireVector) {TEST_F983,33962
TEST_F(VectorShuffleTest, ShufflesStartOfVector) {TEST_F994,34382
TEST_F(VectorShuffleTest, ShufflesEndOfVector) {TEST_F1005,34735
TEST_F(VectorShuffleTest, ShufflesMiddleOfVector) {TEST_F1015,35095
TEST_F(VectorShuffleTest, ShufflesRepeatably) {TEST_F1026,35555
TEST(AssertHelperTest, AssertHelperIsSmall) {TEST1047,36084
TEST(StringTest, EndsWithCaseInsensitive) {TEST1054,36368
static const wchar_t* const kNull = nullptr;kNull1068,37029
TEST(StringTest, CaseInsensitiveWideCStringEquals) {TEST1071,37125
TEST(StringTest, ShowWideCString) {TEST1085,37843
TEST(StringTest, AnsiAndUtf16Null) {TEST1092,38097
TEST(StringTest, AnsiAndUtf16ConvertBasic) {TEST1097,38229
TEST(StringTest, AnsiAndUtf16ConvertPathChars) {TEST1106,38485
TEST(TestPropertyTest, StringValue) {TEST1119,38869
TEST(TestPropertyTest, ReplaceStringValue) {TEST1126,39066
static void AddFatalFailure() { FAIL() << "Expected fatal failure."; }AddFatalFailure1136,39437
static void AddNonfatalFailure() {AddNonfatalFailure1138,39509
class ScopedFakeTestPartResultReporterTest : public Test {ScopedFakeTestPartResultReporterTest1142,39597
  enum FailureMode { FATAL_FAILURE, NONFATAL_FAILURE };FailureMode1144,39729
  enum FailureMode { FATAL_FAILURE, NONFATAL_FAILURE };FATAL_FAILURE1144,39729
  enum FailureMode { FATAL_FAILURE, NONFATAL_FAILURE };NONFATAL_FAILURE1144,39729
  static void AddFailure(FailureMode failure) {AddFailure1145,39785
TEST_F(ScopedFakeTestPartResultReporterTest, InterceptsTestFailures) {TEST_F1156,40025
TEST_F(ScopedFakeTestPartResultReporterTest, DeprecatedConstructor) {TEST_F1171,40502
class ScopedFakeTestPartResultReporterWithThreadsTestScopedFakeTestPartResultReporterWithThreadsTest1183,40821
  static void AddFailureInOtherThread(FailureMode failure) {AddFailureInOtherThread1186,40939
TEST_F(ScopedFakeTestPartResultReporterWithThreadsTest,TEST_F1192,41099
typedef ScopedFakeTestPartResultReporterTest ExpectFatalFailureTest;ExpectFatalFailureTest1217,42009
TEST_F(ExpectFatalFailureTest, CatchesFatalFaliure) {TEST_F1219,42079
TEST_F(ExpectFatalFailureTest, AcceptsStdStringObject) {TEST_F1223,42206
TEST_F(ExpectFatalFailureTest, CatchesFatalFailureOnAllThreads) {TEST_F1228,42374
int NonVoidFunction() {NonVoidFunction1243,42909
TEST_F(ExpectFatalFailureTest, CanBeUsedInNonVoidFunction) {TEST_F1249,43047
void DoesNotAbortHelper(bool* aborted) {DoesNotAbortHelper1256,43273
TEST_F(ExpectFatalFailureTest, DoesNotAbort) {TEST_F1268,43559
static int global_var = 0;global_var1278,43850
#define GTEST_USE_UNPROTECTED_COMMA_ GTEST_USE_UNPROTECTED_COMMA_1279,43877
TEST_F(ExpectFatalFailureTest, AcceptsMacroThatExpandsToUnprotectedComma) {TEST_F1281,43942
typedef ScopedFakeTestPartResultReporterTest ExpectNonfatalFailureTest;ExpectNonfatalFailureTest1302,44377
TEST_F(ExpectNonfatalFailureTest, CatchesNonfatalFailure) {TEST_F1304,44450
TEST_F(ExpectNonfatalFailureTest, AcceptsStdStringObject) {TEST_F1308,44593
TEST_F(ExpectNonfatalFailureTest, CatchesNonfatalFailureOnAllThreads) {TEST_F1313,44777
TEST_F(ExpectNonfatalFailureTest, AcceptsMacroThatExpandsToUnprotectedComma) {TEST_F1323,45269
    ExpectFailureWithThreadsTest;ExpectFailureWithThreadsTest1342,45694
TEST_F(ExpectFailureWithThreadsTest, ExpectFatalFailureOnAllThreads) {TEST_F1344,45729
TEST_F(ExpectFailureWithThreadsTest, ExpectNonFatalFailureOnAllThreads) {TEST_F1349,45947
TEST(TestPropertyTest, ConstructorWorks) {TEST1358,46213
TEST(TestPropertyTest, SetValue) {TEST1364,46388
class TestResultTest : public Test {TestResultTest1375,46699
  typedef std::vector<TestPartResult> TPRVector;TPRVector1377,46748
  TestPartResult *pr1, *pr2;pr11380,46844
  TestPartResult *pr1, *pr2;pr21380,46844
  TestResult *r0, *r1, *r2;r01383,46909
  TestResult *r0, *r1, *r2;r11383,46909
  TestResult *r0, *r1, *r2;r21383,46909
  void SetUp() override {SetUp1385,46938
  void TearDown() override {TearDown1419,48150
  static void CompareTestPartResult(const TestPartResult& expected,CompareTestPartResult1429,48309
TEST_F(TestResultTest, total_part_count) {TEST_F1444,49016
TEST_F(TestResultTest, Passed) {TEST_F1451,49213
TEST_F(TestResultTest, Failed) {TEST_F1458,49368
typedef TestResultTest TestResultDeathTest;TestResultDeathTest1466,49536
TEST_F(TestResultDeathTest, GetTestPartResult) {TEST_F1468,49581
TEST(TestResultPropertyTest, NoPropertiesFoundWhenNoneAreAdded) {TEST1476,49925
TEST(TestResultPropertyTest, OnePropertyFoundWhenAdded) {TEST1482,50129
TEST(TestResultPropertyTest, MultiplePropertiesFoundWhenAdded) {TEST1493,50602
TEST(TestResultPropertyTest, OverridesValuesForDuplicateKeys) {TEST1510,51401
TEST(TestResultPropertyTest, GetTestProperty) {TEST1532,52419
class GTestFlagSaverTest : public Test {GTestFlagSaverTest1570,53944
  static void SetUpTestSuite() {SetUpTestSuite1575,54190
  static void TearDownTestSuite() {TearDownTestSuite1600,55152
  void VerifyAndModifyFlags() {VerifyAndModifyFlags1607,55339
  static GTestFlagSaver* saver_;saver_1649,57149
GTestFlagSaver* GTestFlagSaverTest::saver_ = nullptr;saver_1652,57186
TEST_F(GTestFlagSaverTest, ModifyGTestFlags) { VerifyAndModifyFlags(); }TEST_F1658,57423
TEST_F(GTestFlagSaverTest, VerifyGTestFlags) { VerifyAndModifyFlags(); }TEST_F1662,57612
static void SetEnv(const char* name, const char* value) {SetEnv1667,57885
TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenVariableIsNotSet) {TEST1711,59513
TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenValueOverflows) {TEST1720,59834
TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenValueIsInvalid) {TEST1732,60303
TEST(Int32FromGTestEnvTest, ParsesAndReturnsValidValue) {TEST1747,60819
TEST(ParseInt32FlagTest, ReturnsFalseForInvalidFlag) {TEST1760,61253
TEST(ParseInt32FlagTest, ReturnsDefaultWhenValueOverflows) {TEST1771,61601
TEST(ParseInt32FlagTest, ReturnsDefaultWhenValueIsInvalid) {TEST1785,62062
TEST(ParseInt32FlagTest, ParsesAndReturnsValidValue) {TEST1799,62506
TEST(Int32FromEnvOrDieTest, ParsesAndReturnsValidValue) {TEST1812,62976
TEST(Int32FromEnvOrDieDeathTest, AbortsOnFailure) {TEST1823,63521
TEST(Int32FromEnvOrDieDeathTest, AbortsOnInt32Overflow) {TEST1831,63842
TEST(ShouldRunTestOnShardTest, IsPartitionWhenThereIsOneShard) {TEST1839,64151
class ShouldShardTest : public testing::Test {ShouldShardTest1847,64449
  void SetUp() override {SetUp1849,64508
  void TearDown() override {TearDown1854,64641
  const char* index_var_;index_var_1859,64731
  const char* total_var_;total_var_1860,64757
TEST_F(ShouldShardTest, ReturnsFalseWhenNeitherEnvVarIsSet) {TEST_F1865,64874
TEST_F(ShouldShardTest, ReturnsFalseWhenTotalShardIsOne) {TEST_F1874,65172
TEST_F(ShouldShardTest, WorksWhenShardEnvVarsAreValid) {TEST_F1885,65594
typedef ShouldShardTest ShouldShardDeathTest;ShouldShardDeathTest1905,66279
TEST_F(ShouldShardDeathTest, AbortsWhenShardingEnvVarsAreInvalid) {TEST_F1907,66326
TEST(ShouldRunTestOnShardTest, IsPartitionWhenThereAreFiveShards) {TEST1927,67008
TEST(UnitTestTest, CanGetOriginalWorkingDir) {TEST1970,68602
TEST(UnitTestTest, ReturnsPlausibleTimestamp) {TEST1975,68796
void ExpectNonFatalFailureRecordingPropertyWithReservedKey(ExpectNonFatalFailureRecordingPropertyWithReservedKey1983,69172
void ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTest(ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTest1990,69482
void ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTestSuite(ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTestSuite1998,69835
void ExpectNonFatalFailureRecordingPropertyWithReservedKeyOutsideOfTestSuite(ExpectNonFatalFailureRecordingPropertyWithReservedKeyOutsideOfTestSuite2007,70175
class UnitTestRecordPropertyTestUnitTestRecordPropertyTest2016,70614
  static void SetUpTestSuite() {SetUpTestSuite2019,70723
TEST_F(UnitTestRecordPropertyTest, OnePropertyFoundWhenAdded) {TEST_F2049,71883
TEST_F(UnitTestRecordPropertyTest, MultiplePropertiesFoundWhenAdded) {TEST_F2060,72298
TEST_F(UnitTestRecordPropertyTest, OverridesValuesForDuplicateKeys) {TEST_F2076,72959
TEST_F(UnitTestRecordPropertyTest,TEST_F2095,73658
TEST_F(UnitTestRecordPropertyTest,TEST_F2108,74273
class UnitTestRecordPropertyTestEnvironment : public Environment {UnitTestRecordPropertyTestEnvironment2116,74562
  void TearDown() override {TearDown2118,74638
static Environment* record_property_env GTEST_ATTRIBUTE_UNUSED_ =GTEST_ATTRIBUTE_UNUSED_2139,75521
bool IsEven(int n) { return (n % 2) == 0; }IsEven2151,76115
struct IsEvenFunctor {IsEvenFunctor2154,76238
  bool operator()(int n) { return IsEven(n); }operator ()2155,76261
AssertionResult AssertIsEven(const char* expr, int n) {AssertIsEven2160,76394
AssertionResult ResultIsEven(int n) {ResultIsEven2172,76714
AssertionResult ResultIsEvenNoExplanation(int n) {ResultIsEvenNoExplanation2182,77057
struct AssertIsEvenFunctor {AssertIsEvenFunctor2191,77296
  AssertionResult operator()(const char* expr, int n) {operator ()2192,77325
bool SumIsEven2(int n1, int n2) { return IsEven(n1 + n2); }SumIsEven22198,77498
struct SumIsEven3Functor {SumIsEven3Functor2202,77652
  bool operator()(int n1, int n2, int n3) { return IsEven(n1 + n2 + n3); }operator ()2203,77679
AssertionResult AssertSumIsEven4(const char* e1, const char* e2, const char* e3,AssertSumIsEven42208,77852
struct AssertSumIsEven5Functor {AssertSumIsEven5Functor2225,78469
  AssertionResult operator()(const char* e1, const char* e2, const char* e3,operator ()2226,78502
TEST(Pred1Test, WithoutFormat) {TEST2245,79205
TEST(Pred1Test, WithFormat) {TEST2260,79678
TEST(Pred1Test, SingleEvaluationOnFailure) {TEST2279,80288
TEST(PredTest, WithoutFormat) {TEST2298,80869
TEST(PredTest, WithFormat) {TEST2319,81454
TEST(PredTest, SingleEvaluationOnFailure) {TEST2345,82210
TEST(PredTest, ExpectPredEvalFailure) {TEST2392,83987
  const auto compare_sets = [](std::set<int>, std::set<int>) { return false; };__anon728d141402022395,84103
bool IsPositive(double x) { return x > 0; }IsPositive2405,84516
bool IsNegative(T x) {IsNegative2408,84583
bool GreaterThan(T1 x1, T2 x2) {GreaterThan2413,84661
TEST(PredicateAssertionTest, AcceptsOverloadedFunction) {TEST2419,84825
TEST(PredicateAssertionTest, AcceptsTemplateFunction) {TEST2427,85186
AssertionResult IsPositiveFormat(const char* /* expr */, int n) {IsPositiveFormat2437,85536
AssertionResult IsPositiveFormat(const char* /* expr */, double x) {IsPositiveFormat2441,85685
AssertionResult IsNegativeFormat(const char* /* expr */, T x) {IsNegativeFormat2446,85859
AssertionResult EqualsFormat(const char* /* expr1 */, const char* /* expr2 */,EqualsFormat2451,86042
TEST(PredicateFormatAssertionTest, AcceptsOverloadedFunction) {TEST2459,86395
TEST(PredicateFormatAssertionTest, AcceptsTemplateFunction) {TEST2466,86661
TEST(StringAssertionTest, ASSERT_STREQ) {TEST2474,86890
TEST(StringAssertionTest, ASSERT_STREQ_Null) {TEST2486,87239
TEST(StringAssertionTest, ASSERT_STREQ_Null2) {TEST2492,87463
TEST(StringAssertionTest, ASSERT_STRNE) {TEST2497,87608
TEST(StringAssertionTest, ASSERT_STRCASEEQ) {TEST2509,87950
TEST(StringAssertionTest, ASSERT_STRCASENE) {TEST2518,88223
TEST(StringAssertionTest, STREQ_Wide) {TEST2530,88609
TEST(StringAssertionTest, STRNE_Wide) {TEST2558,89355
TEST(IsSubstringTest, ReturnsCorrectResultForCString) {TEST2589,90200
TEST(IsSubstringTest, ReturnsCorrectResultForWideCString) {TEST2600,90668
TEST(IsSubstringTest, GeneratesCorrectMessageForCString) {TEST2612,91152
TEST(IsSubstringTest, ReturnsCorrectResultsForStdString) {TEST2624,91580
TEST(IsSubstringTest, ReturnsCorrectResultForStdWstring) {TEST2632,91909
TEST(IsSubstringTest, GeneratesCorrectMessageForWstring) {TEST2639,92236
TEST(IsNotSubstringTest, ReturnsCorrectResultForCString) {TEST2656,92782
TEST(IsNotSubstringTest, ReturnsCorrectResultForWideCString) {TEST2663,93079
TEST(IsNotSubstringTest, GeneratesCorrectMessageForWideCString) {TEST2670,93387
TEST(IsNotSubstringTest, ReturnsCorrectResultsForStdString) {TEST2682,93842
TEST(IsNotSubstringTest, GeneratesCorrectMessageForStdString) {TEST2689,94161
TEST(IsNotSubstringTest, ReturnsCorrectResultForStdWstring) {TEST2704,94674
class FloatingPointTest : public Test {FloatingPointTest2715,95007
  struct TestValues {TestValues2718,95112
    RawType close_to_positive_zero;close_to_positive_zero2719,95134
    RawType close_to_negative_zero;close_to_negative_zero2720,95170
    RawType further_from_negative_zero;further_from_negative_zero2721,95206
    RawType close_to_one;close_to_one2723,95247
    RawType further_from_one;further_from_one2724,95273
    RawType infinity;infinity2726,95304
    RawType close_to_infinity;close_to_infinity2727,95326
    RawType further_from_infinity;further_from_infinity2728,95357
    RawType nan1;nan12730,95393
    RawType nan2;nan22731,95411
  typedef typename testing::internal::FloatingPoint<RawType> Floating;Floating2734,95435
  typedef typename Floating::Bits Bits;Bits2735,95506
  void SetUp() override {SetUp2737,95547
  void TestSize() { EXPECT_EQ(sizeof(RawType), sizeof(Bits)); }TestSize2782,97327
  static TestValues values_;values_2784,97392
    FloatingPointTest<RawType>::values_;values_2789,97501
typedef FloatingPointTest<float> FloatTest;FloatTest2792,97601
TEST_F(FloatTest, Size) { TestSize(); }TEST_F2795,97711
TEST_F(FloatTest, Zeros) {TEST_F2798,97787
TEST_F(FloatTest, AlmostZeros) {TEST_F2809,98156
TEST_F(FloatTest, SmallDiff) {TEST_F2830,99006
TEST_F(FloatTest, LargeDiff) {TEST_F2837,99253
TEST_F(FloatTest, Infinity) {TEST_F2845,99487
TEST_F(FloatTest, NaN) {TEST_F2858,100048
TEST_F(FloatTest, Reflexive) {TEST_F2875,100820
TEST_F(FloatTest, Commutative) {TEST_F2882,101009
TEST_F(FloatTest, EXPECT_NEAR) {TEST_F2892,101360
TEST_F(FloatTest, ASSERT_NEAR) {TEST_F2901,101679
TEST_F(FloatTest, FloatLESucceeds) {TEST_F2910,102018
TEST_F(FloatTest, FloatLEFails) {TEST_F2919,102368
typedef FloatingPointTest<double> DoubleTest;DoubleTest2949,103361
TEST_F(DoubleTest, Size) { TestSize(); }TEST_F2952,103475
TEST_F(DoubleTest, Zeros) {TEST_F2955,103552
TEST_F(DoubleTest, AlmostZeros) {TEST_F2966,103926
TEST_F(DoubleTest, SmallDiff) {TEST_F2988,104807
TEST_F(DoubleTest, LargeDiff) {TEST_F2995,105057
TEST_F(DoubleTest, Infinity) {TEST_F3003,105293
TEST_F(DoubleTest, NaN) {TEST_F3016,105861
TEST_F(DoubleTest, Reflexive) {TEST_F3027,106342
TEST_F(DoubleTest, Commutative) {TEST_F3034,106536
TEST_F(DoubleTest, EXPECT_NEAR) {TEST_F3044,106892
TEST_F(DoubleTest, ASSERT_NEAR) {TEST_F3060,107596
TEST_F(DoubleTest, DoubleLESucceeds) {TEST_F3069,107925
TEST_F(DoubleTest, DoubleLEFails) {TEST_F3078,108276
TEST(DisabledTest, DISABLED_TestShouldNotRun) {TEST3112,109361
TEST(DisabledTest, NotDISABLED_TestShouldRun) { EXPECT_EQ(1, 1); }TEST3118,109547
TEST(DISABLED_TestSuite, TestShouldNotRun) {TEST3122,109683
TEST(DISABLED_TestSuite, DISABLED_TestShouldNotRun) {TEST3128,109889
class DisabledTestsTest : public Test {DisabledTestsTest3134,110145
  static void SetUpTestSuite() {SetUpTestSuite3136,110197
  static void TearDownTestSuite() {TearDownTestSuite3141,110361
TEST_F(DisabledTestsTest, DISABLED_TestShouldNotRun_1) {TEST_F3147,110534
TEST_F(DisabledTestsTest, DISABLED_TestShouldNotRun_2) {TEST_F3151,110662
class TypedTest : public Test {};TypedTest3158,110860
typedef testing::Types<int, double> NumericTypes;NumericTypes3160,110895
TYPED_TEST(TypedTest, DISABLED_ShouldNotRun) {TYPED_TEST3163,110989
class DISABLED_TypedTest : public Test {};DISABLED_TypedTest3168,111132
TYPED_TEST(DISABLED_TypedTest, ShouldNotRun) {TYPED_TEST3172,111229
class TypedTestP : public Test {};TypedTestP3179,111433
TYPED_TEST_P(TypedTestP, DISABLED_ShouldNotRun) {TYPED_TEST_P3183,111502
class DISABLED_TypedTestP : public Test {};DISABLED_TypedTestP3193,111804
TYPED_TEST_P(DISABLED_TypedTestP, ShouldNotRun) {TYPED_TEST_P3197,111891
class SingleEvaluationTest : public Test {SingleEvaluationTest3208,112251
  static void CompareAndIncrementCharPtrs() { ASSERT_STREQ(p1_++, p2_++); }CompareAndIncrementCharPtrs3213,112524
  static void CompareAndIncrementInts() { ASSERT_NE(a_++, b_++); }CompareAndIncrementInts3217,112750
  SingleEvaluationTest() {SingleEvaluationTest3220,112830
  static const char* const s1_;s1_3227,112916
  static const char* const s2_;s2_3228,112948
  static const char* p1_;p1_3229,112980
  static const char* p2_;p2_3230,113006
  static int a_;a_3232,113033
  static int b_;b_3233,113050
const char* const SingleEvaluationTest::s1_ = "01234";s1_3236,113071
const char* const SingleEvaluationTest::s2_ = "abcde";s2_3237,113126
const char* SingleEvaluationTest::p1_;p1_3238,113181
const char* SingleEvaluationTest::p2_;p2_3239,113220
int SingleEvaluationTest::a_;a_3240,113259
int SingleEvaluationTest::b_;b_3241,113289
TEST_F(SingleEvaluationTest, FailedASSERT_STREQ) {TEST_F3245,113403
TEST_F(SingleEvaluationTest, ASSERT_STR) {TEST_F3253,113689
TEST_F(SingleEvaluationTest, FailedASSERT_NE) {TEST_F3267,114088
TEST_F(SingleEvaluationTest, OtherCases) {TEST_F3275,114357
#define ERROR_DESC ERROR_DESC3309,115062
#define ERROR_DESC ERROR_DESC3311,115114
#define ERROR_DESC ERROR_DESC3316,115188
void ThrowAnInteger() { throw 1; }ThrowAnInteger3320,115269
void ThrowRuntimeError(const char* what) { throw std::runtime_error(what); }ThrowRuntimeError3321,115304
TEST_F(SingleEvaluationTest, ExceptionTests) {TEST_F3324,115444
class NoFatalFailureTest : public Test {NoFatalFailureTest3386,117218
  void Succeeds() {}Succeeds3388,117271
  void FailsNonFatal() { ADD_FAILURE() << "some non-fatal failure"; }FailsNonFatal3389,117292
  void Fails() { FAIL() << "some fatal failure"; }Fails3390,117362
  void DoAssertNoFatalFailureOnFails() {DoAssertNoFatalFailureOnFails3392,117414
  void DoExpectNoFatalFailureOnFails() {DoExpectNoFatalFailureOnFails3397,117545
TEST_F(NoFatalFailureTest, NoFailure) {TEST_F3403,117670
TEST_F(NoFatalFailureTest, NonFatalIsNoFailure) {TEST_F3408,117791
TEST_F(NoFatalFailureTest, AssertNoFatalFailureOnFatalFailure) {TEST_F3415,118086
TEST_F(NoFatalFailureTest, ExpectNoFatalFailureOnFatalFailure) {TEST_F3432,118807
TEST_F(NoFatalFailureTest, MessageIsStreamable) {TEST_F3453,119765
    EXPECT_NO_FATAL_FAILURE([] { FAIL() << "foo"; }()) << "my message";__anon728d141403023457,119927
std::string EditsToString(const std::vector<EditType>& edits) {EditsToString3472,120530
std::vector<size_t> CharsToIndices(const std::string& str) {CharsToIndices3481,120758
std::vector<std::string> CharsToLines(const std::string& str) {CharsToLines3489,120959
TEST(EditDistance, TestSuites) {TEST3497,121157
  struct Case {Case3498,121190
    int line;line3499,121206
    const char* left;left3500,121220
    const char* right;right3501,121242
    const char* expected_edits;expected_edits3502,121265
    const char* expected_diff;expected_diff3503,121297
TEST(AssertionTest, EqFailure) {TEST3547,123423
TEST(AssertionTest, EqFailureWithDiff) {TEST3598,124789
TEST(AssertionTest, AppendUserMessage) {TEST3618,125630
TEST(AssertionTest, ASSERT_TRUE) {TEST3634,126017
TEST(AssertionTest, AssertTrueWithAssertionResult) {TEST3640,126215
TEST(AssertionTest, ASSERT_FALSE) {TEST3657,126855
TEST(AssertionTest, AssertFalseWithAssertionResult) {TEST3666,127175
TEST(ExpectTest, ASSERT_EQ_Double) {TEST3690,128082
TEST(AssertionTest, ASSERT_EQ) {TEST3699,128250
TEST(AssertionTest, ASSERT_EQ_NULL) {TEST3711,128598
TEST(ExpectTest, ASSERT_EQ_0) {TEST3725,129069
TEST(AssertionTest, ASSERT_NE) {TEST3736,129247
TEST(AssertionTest, ASSERT_LE) {TEST3744,129486
TEST(AssertionTest, ASSERT_LT) {TEST3751,129661
TEST(AssertionTest, ASSERT_GE) {TEST3757,129816
TEST(AssertionTest, ASSERT_GT) {TEST3764,129991
void ThrowNothing() {}ThrowNothing3771,130152
TEST(AssertionTest, ASSERT_THROW) {TEST3774,130199
TEST(AssertionTest, ASSERT_NO_THROW) {TEST3800,131041
TEST(AssertionTest, ASSERT_ANY_THROW) {TEST3814,131684
TEST(AssertionTest, AssertPrecedence) {TEST3825,132056
void TestEq1(int x) { ASSERT_EQ(1, x); }TestEq13832,132238
TEST(AssertionTest, NonFixtureSubroutine) {TEST3835,132345
class Uncopyable {Uncopyable3840,132476
  explicit Uncopyable(int a_value) : value_(a_value) {}Uncopyable3842,132504
  int value() const { return value_; }value3844,132561
  bool operator==(const Uncopyable& rhs) const {operator ==3845,132600
  int value_;value_3854,132851
::std::ostream& operator<<(::std::ostream& os, const Uncopyable& value) {operator <<3857,132869
bool IsPositiveUncopyable(const Uncopyable& x) { return x.value() > 0; }IsPositiveUncopyable3861,132976
void TestAssertNonPositive() {TestAssertNonPositive3864,133094
void TestAssertEqualsUncopyable() {TestAssertEqualsUncopyable3869,133232
TEST(AssertionTest, AssertWorksWithUncopyableObject) {TEST3876,133389
TEST(AssertionTest, ExpectWorksWithUncopyableObject) {TEST3889,133903
enum NamedEnum { kE1 = 0, kE2 = 1 };NamedEnum3902,134393
enum NamedEnum { kE1 = 0, kE2 = 1 };kE13902,134393
enum NamedEnum { kE1 = 0, kE2 = 1 };kE23902,134393
TEST(AssertionTest, NamedEnum) {TEST3904,134431
enum {__anon728d141404033915,134779
  kCaseA = -1,kCaseA3916,134786
  kCaseB = testing::internal::kMaxBiggestInt,kCaseB3929,135300
  kCaseC = 42kCaseC3937,135402
TEST(AssertionTest, AnonymousEnum) {TEST3940,135420
static HRESULT UnexpectedHRESULTFailure() { return E_UNEXPECTED; }UnexpectedHRESULTFailure3977,136421
static HRESULT OkHRESULTSuccess() { return S_OK; }OkHRESULTSuccess3979,136489
static HRESULT FalseHRESULTSuccess() { return S_FALSE; }FalseHRESULTSuccess3981,136541
TEST(HRESULTAssertionTest, EXPECT_HRESULT_SUCCEEDED) {TEST3987,136756
TEST(HRESULTAssertionTest, ASSERT_HRESULT_SUCCEEDED) {TEST3996,137096
TEST(HRESULTAssertionTest, EXPECT_HRESULT_FAILED) {TEST4005,137427
TEST(HRESULTAssertionTest, ASSERT_HRESULT_FAILED) {TEST4016,137890
TEST(HRESULTAssertionTest, Streaming) {TEST4033,138458
TEST(AssertionSyntaxTest, BasicAssertionsBehavesLikeSingleStatement) {TEST4068,139726
TEST(ExpectThrowTest, DoesNotGenerateUnreachableCodeWarning) {TEST4092,140329
TEST(ExpectThrowTest, DoesNotGenerateDuplicateCatchClauseWarning) {TEST4104,140725
TEST(AssertionSyntaxTest, ExceptionAssertionsBehavesLikeSingleStatement) {TEST4115,141104
TEST(AssertionSyntaxTest, NoFatalFailureAssertionsBehavesLikeSingleStatement) {TEST4150,141940
TEST(AssertionSyntaxTest, WorksWithSwitch) {TEST4177,142592
void ThrowAString() { throw "std::string"; }ThrowAString4204,143131
TEST(AssertionSyntaxTest, WorksWithConst) {TEST4208,143268
namespace testing {testing4218,143456
TEST(SuccessfulAssertionTest, SUCCEED) {TEST4221,143520
TEST(SuccessfulAssertionTest, EXPECT) {TEST4228,143737
TEST(SuccessfulAssertionTest, EXPECT_STR) {TEST4234,143943
TEST(SuccessfulAssertionTest, ASSERT) {TEST4240,144153
TEST(SuccessfulAssertionTest, ASSERT_STR) {TEST4246,144359
namespace {__anon728d141405114253,144533
TEST(AssertionWithMessageTest, EXPECT) {TEST4257,144603
TEST(AssertionWithMessageTest, ASSERT) {TEST4281,145743
TEST(AssertionWithMessageTest, ASSERT_STR) {TEST4291,146120
TEST(AssertionWithMessageTest, ASSERT_FLOATING) {TEST4299,146447
TEST(AssertionWithMessageTest, ASSERT_FALSE) {TEST4307,146780
TEST(AssertionWithMessageTest, FAIL) { EXPECT_FATAL_FAILURE(FAIL() << 0, "0"); }TEST4318,147129
TEST(AssertionWithMessageTest, SUCCEED) { SUCCEED() << "Success == " << 1; }TEST4321,147259
TEST(AssertionWithMessageTest, ASSERT_TRUE) {TEST4324,147389
TEST(AssertionWithMessageTest, WideStringMessage) {TEST4337,147784
TEST(ExpectTest, EXPECT_TRUE) {TEST4352,148211
TEST(ExpectTest, ExpectTrueWithAssertionResult) {TEST4367,148896
TEST(ExpectTest, EXPECT_FALSE) {TEST4381,149527
TEST(ExpectTest, ExpectFalseWithAssertionResult) {TEST4396,150219
TEST(ExpectTest, EXPECT_EQ) {TEST4415,150939
TEST(ExpectTest, EXPECT_EQ_Double) {TEST4430,151495
TEST(ExpectTest, EXPECT_EQ_NULL) {TEST4439,151681
TEST(ExpectTest, EXPECT_EQ_0) {TEST4453,152145
TEST(ExpectTest, EXPECT_NE) {TEST4464,152326
TEST(ExpectTest, EXPECT_LE) {TEST4483,153054
TEST(ExpectTest, EXPECT_LT) {TEST4492,153321
TEST(ExpectTest, EXPECT_GE) {TEST4500,153559
TEST(ExpectTest, EXPECT_GT) {TEST4509,153826
TEST(ExpectTest, EXPECT_THROW) {TEST4519,154093
TEST(ExpectTest, EXPECT_NO_THROW) {TEST4538,154903
TEST(ExpectTest, EXPECT_ANY_THROW) {TEST4552,155570
TEST(ExpectTest, ExpectPrecedence) {TEST4562,155917
TEST(StreamableToStringTest, Scalar) {TEST4571,156202
TEST(StreamableToStringTest, Pointer) {TEST4576,156355
TEST(StreamableToStringTest, NullPointer) {TEST4583,156547
TEST(StreamableToStringTest, CString) {TEST4589,156722
TEST(StreamableToStringTest, NullCString) {TEST4594,156879
TEST(StreamableTest, string) {TEST4602,157113
TEST(StreamableTest, stringWithEmbeddedNUL) {TEST4610,157427
TEST(StreamableTest, NULChar) {TEST4621,157857
TEST(StreamableTest, int) { EXPECT_FATAL_FAILURE(FAIL() << 900913, "900913"); }TEST4630,158090
TEST(StreamableTest, NullCharPtr) {TEST4637,158413
TEST(StreamableTest, BasicIoManip) {TEST4643,158631
void AddFailureHelper(bool* aborted) {AddFailureHelper4654,158941
TEST(MacroTest, ADD_FAILURE) {TEST4661,159087
TEST(MacroTest, ADD_FAILURE_AT) {TEST4668,159273
TEST(MacroTest, FAIL) {TEST4683,159924
TEST(MacroTest, GTEST_FAIL_AT) {TEST4690,160122
TEST(MacroTest, SUCCEED) {TEST4703,160650
TEST(EqAssertionTest, Bool) {TEST4716,160980
TEST(EqAssertionTest, Int) {TEST4727,161253
TEST(EqAssertionTest, Time_T) {TEST4733,161418
TEST(EqAssertionTest, Char) {TEST4740,161665
TEST(EqAssertionTest, WideChar) {TEST4748,161946
TEST(EqAssertionTest, StdString) {TEST4767,162621
TEST(EqAssertionTest, StdWideString) {TEST4796,163690
TEST(EqAssertionTest, CharPointer) {TEST4834,164915
TEST(EqAssertionTest, WideCharPointer) {TEST4854,165753
TEST(EqAssertionTest, OtherPointer) {TEST4876,166706
class UnprintableChar {UnprintableChar4884,167073
  explicit UnprintableChar(char ch) : char_(ch) {}UnprintableChar4886,167106
  bool operator==(const UnprintableChar& rhs) const {operator ==4888,167158
  bool operator!=(const UnprintableChar& rhs) const {operator !=4891,167247
  bool operator<(const UnprintableChar& rhs) const { return char_ < rhs.char_; }operator <4894,167336
  bool operator<=(const UnprintableChar& rhs) const {operator <=4895,167417
  bool operator>(const UnprintableChar& rhs) const { return char_ > rhs.char_; }operator >4898,167506
  bool operator>=(const UnprintableChar& rhs) const {operator >=4899,167587
  char char_;char_4904,167687
TEST(ComparisonAssertionTest, AcceptsUnprintableArgs) {TEST4909,167791
class Foo {Foo4945,169282
  Foo() {}Foo4947,169303
  int Bar() const { return 1; }Bar4950,169325
TEST(FRIEND_TEST_Test, TEST) { ASSERT_EQ(1, Foo().Bar()); }TEST4960,169639
class FRIEND_TEST_Test2 : public Test {FRIEND_TEST_Test24963,169761
  Foo foo;foo4965,169813
TEST_F(FRIEND_TEST_Test2, TEST_F) { ASSERT_EQ(1, foo.Bar()); }TEST_F4970,169948
class TestLifeCycleTest : public Test {TestLifeCycleTest4978,170201
  TestLifeCycleTest() { count_++; }TestLifeCycleTest4982,170339
  ~TestLifeCycleTest() override { count_--; }~TestLifeCycleTest4986,170461
  int count() const { return count_; }count4989,170577
  static int count_;count_4992,170627
int TestLifeCycleTest::count_ = 0;count_4995,170652
TEST_F(TestLifeCycleTest, Test1) {TEST_F4998,170729
TEST_F(TestLifeCycleTest, Test2) {TEST_F5005,170922
TEST(AssertionResultTest, CopyConstructorWorksWhenNotOptimied) {TEST5016,171247
TEST(AssertionResultTest, ConstructionWorks) {TEST5032,171837
TEST(AssertionResultTest, NegationWorks) {TEST5055,172496
TEST(AssertionResultTest, StreamingWorks) {TEST5065,172768
TEST(AssertionResultTest, CanStreamOstreamManipulators) {TEST5071,172933
TEST(AssertionResultTest, ConstructibleFromContextuallyConvertibleToBool) {TEST5079,173222
  struct ExplicitlyConvertibleToBool {ExplicitlyConvertibleToBool5080,173298
    explicit operator bool() const { return value; }operator bool5081,173337
    bool value;value5082,173390
struct ConvertibleToAssertionResult {ConvertibleToAssertionResult5090,173540
  operator AssertionResult() const { return AssertionResult(true); }operator AssertionResult5091,173578
TEST(AssertionResultTest, ConstructibleFromImplicitlyConvertible) {TEST5094,173651
class Base {Base5101,173879
  explicit Base(int an_x) : x_(an_x) {}Base5103,173901
  int x() const { return x_; }x5104,173941
  int x_;x_5107,173983
std::ostream& operator<<(std::ostream& os, const Base& val) {operator <<5109,173996
std::ostream& operator<<(std::ostream& os, const Base* pointer) {operator <<5112,174084
TEST(MessageTest, CanStreamUserTypeInGlobalNameSpace) {TEST5116,174196
namespace {__anon728d141406115126,174474
class MyTypeInUnnamedNameSpace : public Base {MyTypeInUnnamedNameSpace5127,174486
  explicit MyTypeInUnnamedNameSpace(int an_x) : Base(an_x) {}MyTypeInUnnamedNameSpace5129,174542
std::ostream& operator<<(std::ostream& os,operator <<5131,174607
std::ostream& operator<<(std::ostream& os,operator <<5135,174740
TEST(MessageTest, CanStreamUserTypeInUnnamedNameSpace) {TEST5141,174913
namespace namespace1 {namespace15151,175227
class MyTypeInNameSpace1 : public Base {MyTypeInNameSpace15152,175250
  explicit MyTypeInNameSpace1(int an_x) : Base(an_x) {}MyTypeInNameSpace15154,175300
std::ostream& operator<<(std::ostream& os, const MyTypeInNameSpace1& val) {operator <<5156,175359
std::ostream& operator<<(std::ostream& os, const MyTypeInNameSpace1* pointer) {operator <<5159,175461
TEST(MessageTest, CanStreamUserTypeInUserNameSpace) {TEST5164,175614
namespace namespace2 {namespace25174,175949
class MyTypeInNameSpace2 : public ::Base {MyTypeInNameSpace25175,175972
  explicit MyTypeInNameSpace2(int an_x) : Base(an_x) {}MyTypeInNameSpace25177,176024
std::ostream& operator<<(std::ostream& os,operator <<5180,176110
std::ostream& operator<<(std::ostream& os,operator <<5184,176249
TEST(MessageTest, CanStreamUserTypeInUserNameSpaceWithStreamOperatorInGlobal) {TEST5189,176412
TEST(MessageTest, NullPointers) {TEST5198,176694
TEST(MessageTest, WideStrings) {TEST5212,177081
namespace testing {testing5232,177813
class TestInfoTest : public Test {TestInfoTest5236,177864
  static const TestInfo* GetTestInfo(const char* test_name) {GetTestInfo5238,177911
  static const TestResult* GetTestResult(const TestInfo* test_info) {GetTestResult5249,178326
TEST_F(TestInfoTest, Names) {TEST_F5255,178494
TEST_F(TestInfoTest, result) {TEST_F5263,178721
#define VERIFY_CODE_LOCATION VERIFY_CODE_LOCATION5273,179054
TEST(CodeLocationForTEST, Verify) {TEST5281,179511
class CodeLocationForTESTF : public Test {};CodeLocationForTESTF5285,179574
TEST_F(CodeLocationForTESTF, Verify) {TEST_F5287,179620
class CodeLocationForTESTP : public TestWithParam<int> {};CodeLocationForTESTP5291,179686
TEST_P(CodeLocationForTESTP, Verify) {TEST_P5293,179746
class CodeLocationForTYPEDTEST : public Test {};CodeLocationForTYPEDTEST5300,179896
TYPED_TEST(CodeLocationForTYPEDTEST, Verify) {TYPED_TEST5304,179996
class CodeLocationForTYPEDTESTP : public Test {};CodeLocationForTYPEDTESTP5309,180092
TYPED_TEST_P(CodeLocationForTYPEDTESTP, Verify) {TYPED_TEST_P5313,180191
class SetUpTestCaseTest : public Test {SetUpTestCaseTest5327,180590
  static void SetUpTestCase() {SetUpTestCase5331,180725
  static void TearDownTestCase() {TearDownTestCase5348,181236
  void SetUp() override {SetUp5362,181624
  static int counter_;counter_5369,181822
  static const char* shared_resource_;shared_resource_5372,181910
int SetUpTestCaseTest::counter_ = 0;counter_5375,181953
const char* SetUpTestCaseTest::shared_resource_ = nullptr;shared_resource_5376,181990
TEST_F(SetUpTestCaseTest, Test1) { EXPECT_STRNE(nullptr, shared_resource_); }TEST_F5379,182091
TEST_F(SetUpTestCaseTest, Test2) { EXPECT_STREQ("123", shared_resource_); }TEST_F5382,182217
class SetUpTestSuiteTest : public Test {SetUpTestSuiteTest5386,182383
  static void SetUpTestSuite() {SetUpTestSuite5390,182519
  static void TearDownTestSuite() {TearDownTestSuite5407,183033
  void SetUp() override {SetUp5421,183425
  static int counter_;counter_5428,183625
  static const char* shared_resource_;shared_resource_5431,183713
int SetUpTestSuiteTest::counter_ = 0;counter_5434,183756
const char* SetUpTestSuiteTest::shared_resource_ = nullptr;shared_resource_5435,183794
TEST_F(SetUpTestSuiteTest, TestSetupTestSuite1) {TEST_F5438,183896
TEST_F(SetUpTestSuiteTest, TestSetupTestSuite2) {TEST_F5443,184039
struct Flags {Flags5450,184258
  Flags()Flags5452,184343
  static Flags AlsoRunDisabledTests(bool also_run_disabled_tests) {AlsoRunDisabledTests5475,184991
  static Flags BreakOnFailure(bool break_on_failure) {BreakOnFailure5483,185252
  static Flags CatchExceptions(bool catch_exceptions) {CatchExceptions5491,185486
  static Flags DeathTestUseFork(bool death_test_use_fork) {DeathTestUseFork5499,185724
  static Flags FailFast(bool fail_fast) {FailFast5507,185962
  static Flags Filter(const char* filter) {Filter5515,186159
  static Flags ListTests(bool list_tests) {ListTests5523,186356
  static Flags Output(const char* output) {Output5531,186557
  static Flags Brief(bool brief) {Brief5539,186749
  static Flags PrintTime(bool print_time) {PrintTime5547,186935
  static Flags RandomSeed(int32_t random_seed) {RandomSeed5555,187141
  static Flags Repeat(int32_t repeat) {Repeat5563,187349
  static Flags RecreateEnvironmentsWhenRepeating(RecreateEnvironmentsWhenRepeating5571,187568
  static Flags Shuffle(bool shuffle) {Shuffle5581,187887
  static Flags StackTraceDepth(int32_t stack_trace_depth) {StackTraceDepth5589,188094
  static Flags StreamResultTo(const char* stream_result_to) {StreamResultTo5597,188341
  static Flags ThrowOnFailure(bool throw_on_failure) {ThrowOnFailure5605,188582
  bool also_run_disabled_tests;also_run_disabled_tests5612,188765
  bool break_on_failure;break_on_failure5613,188797
  bool catch_exceptions;catch_exceptions5614,188822
  bool death_test_use_fork;death_test_use_fork5615,188847
  bool fail_fast;fail_fast5616,188875
  const char* filter;filter5617,188893
  bool list_tests;list_tests5618,188915
  const char* output;output5619,188934
  bool brief;brief5620,188956
  bool print_time;print_time5621,188970
  int32_t random_seed;random_seed5622,188989
  int32_t repeat;repeat5623,189012
  bool recreate_environments_when_repeating;recreate_environments_when_repeating5624,189030
  bool shuffle;shuffle5625,189075
  int32_t stack_trace_depth;stack_trace_depth5626,189091
  const char* stream_result_to;stream_result_to5627,189120
  bool throw_on_failure;throw_on_failure5628,189152
class ParseFlagsTest : public Test {ParseFlagsTest5632,189232
  void SetUp() override {SetUp5635,189321
  static void AssertStringArrayEq(int size1, CharType** array1, int size2,AssertStringArrayEq5657,190162
  static void CheckFlags(const Flags& expected) {CheckFlags5667,190528
  static void TestParsingFlags(int argc1, const CharType** argv1, int argc2,TestParsingFlags5695,192094
#define GTEST_TEST_PARSING_FLAGS_(GTEST_TEST_PARSING_FLAGS_5740,193671
TEST_F(ParseFlagsTest, Empty) {TEST_F5747,193990
TEST_F(ParseFlagsTest, NoFlag) {TEST_F5756,194204
TEST_F(ParseFlagsTest, FailFast) {TEST_F5765,194427
TEST_F(ParseFlagsTest, FilterEmpty) {TEST_F5774,194698
TEST_F(ParseFlagsTest, FilterNonEmpty) {TEST_F5783,194969
TEST_F(ParseFlagsTest, BreakOnFailureWithoutValue) {TEST_F5792,195242
TEST_F(ParseFlagsTest, BreakOnFailureFalse_0) {TEST_F5801,195542
TEST_F(ParseFlagsTest, BreakOnFailureFalse_f) {TEST_F5810,195840
TEST_F(ParseFlagsTest, BreakOnFailureFalse_F) {TEST_F5819,196138
TEST_F(ParseFlagsTest, BreakOnFailureTrue) {TEST_F5829,196473
TEST_F(ParseFlagsTest, CatchExceptions) {TEST_F5838,196765
TEST_F(ParseFlagsTest, DeathTestUseFork) {TEST_F5847,197056
TEST_F(ParseFlagsTest, DuplicatedFlags) {TEST_F5857,197437
TEST_F(ParseFlagsTest, UnrecognizedFlag) {TEST_F5867,197766
TEST_F(ParseFlagsTest, ListTestsFlag) {TEST_F5881,198216
TEST_F(ParseFlagsTest, ListTestsTrue) {TEST_F5890,198509
TEST_F(ParseFlagsTest, ListTestsFalse) {TEST_F5899,198805
TEST_F(ParseFlagsTest, ListTestsFalse_f) {TEST_F5908,199079
TEST_F(ParseFlagsTest, ListTestsFalse_F) {TEST_F5917,199355
TEST_F(ParseFlagsTest, OutputXml) {TEST_F5926,199628
TEST_F(ParseFlagsTest, OutputXmlFile) {TEST_F5935,199894
TEST_F(ParseFlagsTest, OutputXmlDirectory) {TEST_F5944,200185
TEST_F(ParseFlagsTest, BriefFlag) {TEST_F5955,200540
TEST_F(ParseFlagsTest, BriefFlagTrue) {TEST_F5964,200815
TEST_F(ParseFlagsTest, BriefFlagFalse) {TEST_F5973,201097
TEST_F(ParseFlagsTest, PrintTimeFlag) {TEST_F5982,201365
TEST_F(ParseFlagsTest, PrintTimeTrue) {TEST_F5991,201658
TEST_F(ParseFlagsTest, PrintTimeFalse) {TEST_F6000,201954
TEST_F(ParseFlagsTest, PrintTimeFalse_f) {TEST_F6009,202228
TEST_F(ParseFlagsTest, PrintTimeFalse_F) {TEST_F6018,202504
TEST_F(ParseFlagsTest, RandomSeed) {TEST_F6027,202785
TEST_F(ParseFlagsTest, Repeat) {TEST_F6036,203059
TEST_F(ParseFlagsTest, RecreateEnvironmentsWhenRepeating) {TEST_F6045,203343
TEST_F(ParseFlagsTest, AlsoRunDisabledTestsFlag) {TEST_F6059,203732
TEST_F(ParseFlagsTest, AlsoRunDisabledTestsTrue) {TEST_F6069,204101
TEST_F(ParseFlagsTest, AlsoRunDisabledTestsFalse) {TEST_F6080,204497
TEST_F(ParseFlagsTest, ShuffleWithoutValue) {TEST_F6091,204853
TEST_F(ParseFlagsTest, ShuffleFalse_0) {TEST_F6100,205121
TEST_F(ParseFlagsTest, ShuffleTrue) {TEST_F6109,205421
TEST_F(ParseFlagsTest, StackTraceDepth) {TEST_F6118,205698
TEST_F(ParseFlagsTest, StreamResultTo) {TEST_F6126,205943
TEST_F(ParseFlagsTest, ThrowOnFailureWithoutValue) {TEST_F6137,206308
TEST_F(ParseFlagsTest, ThrowOnFailureFalse_0) {TEST_F6146,206608
TEST_F(ParseFlagsTest, ThrowOnFailureTrue) {TEST_F6156,206943
TEST_F(ParseFlagsTest, FilterBad) {TEST_F6165,207236
TEST_F(ParseFlagsTest, OutputEmpty) {TEST_F6184,207914
TEST_F(ParseFlagsTest, AbseilPositionalFlags) {TEST_F6203,208550
TEST_F(ParseFlagsTest, WideStrings) {TEST_F6218,209102
class FlagfileTest : public ParseFlagsTest {FlagfileTest6238,209756
  void SetUp() override {SetUp6240,209810
  void TearDown() override {TearDown6250,210128
  internal::FilePath CreateFlagfile(const char* contents) {CreateFlagfile6255,210255
  internal::FilePath testdata_path_;testdata_path_6265,210610
TEST_F(FlagfileTest, Empty) {TEST_F6269,210679
TEST_F(FlagfileTest, FilterNonEmpty) {TEST_F6282,211124
TEST_F(FlagfileTest, SeveralFlags) {TEST_F6296,211614
class CurrentTestInfoTest : public Test {CurrentTestInfoTest6318,212387
  static void SetUpTestSuite() {SetUpTestSuite6322,212542
  static void TearDownTestSuite() {TearDownTestSuite6331,212913
TEST_F(CurrentTestInfoTest, WorksForFirstTestInATestSuite) {TEST_F6340,213275
TEST_F(CurrentTestInfoTest, WorksForSecondTestInATestSuite) {TEST_F6354,214029
namespace my_namespace {my_namespace6368,214698
namespace testing {testing6369,214723
class Test {};Test6373,214842
class Message {};Message6377,214970
class AssertionResult {};AssertionResult6382,215120
TEST(NestedTestingNamespaceTest, Success) {TEST6385,215213
TEST(NestedTestingNamespaceTest, Failure) {TEST6390,215368
class ProtectedFixtureMethodsTest : public Test {ProtectedFixtureMethodsTest6402,215779
  void SetUp() override { Test::SetUp(); }SetUp6404,215841
  void TearDown() override { Test::TearDown(); }TearDown6405,215884
TEST(StreamingAssertionsTest, Unconditional) {TEST6410,216038
TEST(StreamingAssertionsTest, Truth) {TEST6422,216438
TEST(StreamingAssertionsTest, Truth2) {TEST6431,216794
TEST(StreamingAssertionsTest, IntegerEquals) {TEST6445,217276
TEST(StreamingAssertionsTest, IntegerLessThan) {TEST6454,217630
TEST(StreamingAssertionsTest, StringsEqual) {TEST6463,217986
TEST(StreamingAssertionsTest, StringsNotEqual) {TEST6472,218383
TEST(StreamingAssertionsTest, StringsEqualIgnoringCase) {TEST6481,218783
TEST(StreamingAssertionsTest, StringNotEqualIgnoringCase) {TEST6490,219208
TEST(StreamingAssertionsTest, FloatingPointEquals) {TEST6499,219635
TEST(StreamingAssertionsTest, Throw) {TEST6510,220061
TEST(StreamingAssertionsTest, NoThrow) {TEST6521,220546
TEST(StreamingAssertionsTest, AnyThrow) {TEST6531,220992
TEST(ColoredOutputTest, UsesColorsWhenGTestColorFlagIsYes) {TEST6545,221558
TEST(ColoredOutputTest, UsesColorsWhenGTestColorFlagIsAliasOfYes) {TEST6557,222035
TEST(ColoredOutputTest, UsesNoColorWhenGTestColorFlagIsNo) {TEST6570,222450
TEST(ColoredOutputTest, UsesNoColorWhenGTestColorFlagIsInvalid) {TEST6582,222932
TEST(ColoredOutputTest, UsesColorsWhenStdoutIsTty) {TEST6595,223330
TEST(ColoredOutputTest, UsesColorsWhenTermSupportsColors) {TEST6603,223609
static bool dummy1 GTEST_ATTRIBUTE_UNUSED_ = StaticAssertTypeEq<bool, bool>();GTEST_ATTRIBUTE_UNUSED_6670,226151
static bool dummy2 GTEST_ATTRIBUTE_UNUSED_ =GTEST_ATTRIBUTE_UNUSED_6671,226230
class StaticAssertTypeEqTestHelper {StaticAssertTypeEqTestHelper6677,226401
  StaticAssertTypeEqTestHelper() { StaticAssertTypeEq<bool, T>(); }StaticAssertTypeEqTestHelper6679,226447
TEST(StaticAssertTypeEqTest, WorksInClass) {TEST6682,226519
typedef int IntAlias;IntAlias6688,226669
TEST(StaticAssertTypeEqTest, CompilesForEqualTypes) {TEST6690,226692
TEST(HasNonfatalFailureTest, ReturnsFalseWhenThereIsNoFailure) {TEST6695,226829
static void FailFatally() { FAIL(); }FailFatally6699,226935
TEST(HasNonfatalFailureTest, ReturnsFalseWhenThereIsOnlyFatalFailure) {TEST6701,226974
TEST(HasNonfatalFailureTest, ReturnsTrueWhenThereIsNonfatalFailure) {TEST6708,227195
TEST(HasNonfatalFailureTest, ReturnsTrueWhenThereAreFatalAndNonfatalFailures) {TEST6715,227413
static bool HasNonfatalFailureHelper() {HasNonfatalFailureHelper6724,227726
TEST(HasNonfatalFailureTest, WorksOutsideOfTestBody) {TEST6728,227816
TEST(HasNonfatalFailureTest, WorksOutsideOfTestBody2) {TEST6732,227918
TEST(HasFailureTest, ReturnsFalseWhenThereIsNoFailure) {TEST6739,228128
TEST(HasFailureTest, ReturnsTrueWhenThereIsFatalFailure) {TEST6743,228218
TEST(HasFailureTest, ReturnsTrueWhenThereIsNonfatalFailure) {TEST6750,228399
TEST(HasFailureTest, ReturnsTrueWhenThereAreFatalAndNonfatalFailures) {TEST6757,228583
static bool HasFailureHelper() { return testing::Test::HasFailure(); }HasFailureHelper6766,228854
TEST(HasFailureTest, WorksOutsideOfTestBody) {TEST6768,228926
TEST(HasFailureTest, WorksOutsideOfTestBody2) {TEST6772,229012
class TestListener : public EmptyTestEventListener {TestListener6779,229188
  TestListener() : on_start_counter_(nullptr), is_destroyed_(nullptr) {}TestListener6781,229250
  TestListener(int* on_start_counter, bool* is_destroyed)TestListener6782,229323
  ~TestListener() override {~TestListener6785,229458
  void OnTestProgramStart(const UnitTest& /*unit_test*/) override {OnTestProgramStart6790,229550
  int* on_start_counter_;on_start_counter_6795,229695
  bool* is_destroyed_;is_destroyed_6796,229721
TEST(TestEventListenersTest, ConstructionWorks) {TEST6800,229774
TEST(TestEventListenersTest, DestructionWorks) {TEST6810,230148
TEST(TestEventListenersTest, Append) {TEST6836,231270
class SequenceTestingListener : public EmptyTestEventListener {SequenceTestingListener6853,231860
  SequenceTestingListener(std::vector<std::string>* vector, const char* id)SequenceTestingListener6855,231933
  void OnTestProgramStart(const UnitTest& /*unit_test*/) override {OnTestProgramStart6859,232058
  void OnTestProgramEnd(const UnitTest& /*unit_test*/) override {OnTestProgramEnd6863,232198
  void OnTestIterationStart(const UnitTest& /*unit_test*/,OnTestIterationStart6867,232334
  void OnTestIterationEnd(const UnitTest& /*unit_test*/,OnTestIterationEnd6872,232525
  std::string GetEventDescription(const char* method) {GetEventDescription6878,232720
  std::vector<std::string>* vector_;vector_6884,232871
  const char* const id_;id_6885,232908
TEST(EventListenerTest, AppendKeepsOrder) {TEST6891,233085
TEST(TestEventListenersTest, Release) {TEST6932,234818
TEST(EventListenerTest, SuppressEventForwarding) {TEST6953,235609
TEST(EventListenerDeathTest, EventsNotForwardedInDeathTestSubprecesses) {TEST6969,236288
TEST(EventListenerTest, default_result_printer) {TEST6982,236815
TEST(EventListenerTest, RemovingDefaultResultPrinterWorks) {TEST7013,238005
TEST(EventListenerTest, default_xml_generator) {TEST7041,239193
TEST(EventListenerTest, RemovingDefaultXmlGeneratorWorks) {TEST7072,240376
GTEST_TEST(AlternativeNameTest, Works) {  // GTEST_TEST is the same as TEST.GTEST_TEST7102,241641
class ConversionHelperBase {};ConversionHelperBase7148,243370
class ConversionHelperDerived : public ConversionHelperBase {};ConversionHelperDerived7149,243401
struct HasDebugStringMethods {HasDebugStringMethods7151,243466
  std::string DebugString() const { return ""; }DebugString7152,243497
  std::string ShortDebugString() const { return ""; }ShortDebugString7153,243546
struct InheritsDebugStringMethods : public HasDebugStringMethods {};InheritsDebugStringMethods7156,243604
struct WrongTypeDebugStringMethod {WrongTypeDebugStringMethod7158,243674
  std::string DebugString() const { return ""; }DebugString7159,243710
  int ShortDebugString() const { return 1; }ShortDebugString7160,243759
struct NotConstDebugStringMethod {NotConstDebugStringMethod7163,243808
  std::string DebugString() { return ""; }DebugString7164,243843
  std::string ShortDebugString() const { return ""; }ShortDebugString7165,243886
struct MissingDebugStringMethod {MissingDebugStringMethod7168,243944
  std::string DebugString() { return ""; }DebugString7169,243978
TEST(HasDebugStringAndShortDebugStringTest, ValueIsCompileTimeConstant) {TEST7176,244138
TEST(HasDebugStringAndShortDebugStringTest,TEST7201,245213
TEST(HasDebugStringAndShortDebugStringTest,TEST7209,245519
void TestGTestRemoveReferenceAndConst() {TestGTestRemoveReferenceAndConst7219,245853
TEST(RemoveReferenceToConstTest, Works) {TEST7224,246040
void TestGTestReferenceToConst() {TestGTestReferenceToConst7235,246438
TEST(GTestReferenceToConstTest, Works) {TEST7240,246602
class NonContainer {};NonContainer7249,246902
TEST(IsContainerTestTest, WorksForNonContainer) {TEST7251,246926
TEST(IsContainerTestTest, WorksForContainer) {TEST7257,247202
struct ConstOnlyContainerWithPointerIterator {ConstOnlyContainerWithPointerIterator7263,247430
  using const_iterator = int*;const_iterator7264,247477
struct ConstOnlyContainerWithClassIterator {ConstOnlyContainerWithClassIterator7269,247574
  struct const_iterator {const_iterator7270,247619
TEST(IsContainerTestTest, ConstOnlyContainer) {TEST7278,247803
struct AHashTable {AHashTable7286,248100
  typedef void hasher;hasher7287,248120
struct NotReallyAHashTable {NotReallyAHashTable7289,248146
  typedef void hasher;hasher7290,248175
  typedef void reverse_iterator;reverse_iterator7291,248198
TEST(IsHashTable, Basic) {TEST7293,248234
TEST(ArrayEqTest, WorksForDegeneratedArrays) {TEST7302,248579
TEST(ArrayEqTest, WorksForOneDimensionalArrays) {TEST7307,248693
TEST(ArrayEqTest, WorksForTwoDimensionalArrays) {TEST7319,248992
TEST(ArrayAwareFindTest, WorksForOneDimensionalArray) {TEST7333,249311
TEST(ArrayAwareFindTest, WorksForTwoDimensionalArray) {TEST7339,249500
TEST(CopyArrayTest, WorksForDegeneratedArrays) {TEST7350,249776
TEST(CopyArrayTest, WorksForOneDimensionalArrays) {TEST7356,249884
TEST(CopyArrayTest, WorksForTwoDimensionalArrays) {TEST7369,250178
TEST(NativeArrayTest, ConstructorFromArrayWorks) {TEST7384,250521
TEST(NativeArrayTest, CreatesAndDeletesCopyOfArrayWhenAskedTo) {TEST7391,250719
  typedef int Array[2];Array7392,250784
TEST(NativeArrayTest, TypeMembersAreCorrect) {TEST7406,251111
TEST(NativeArrayTest, MethodsWork) {TEST7414,251440
TEST(NativeArrayTest, WorksForTwoDimensionalArray) {TEST7440,252122
TEST(IndexSequence, MakeIndexSequence) {TEST7448,252350
TEST(ElemFromList, Basic) {TEST7464,252964
TEST(FlatTuple, Basic) {TEST7478,253502
namespace {__anon728d141407117496,254011
std::string AddIntToString(int i, const std::string& s) {AddIntToString7497,254023
TEST(FlatTuple, Apply) {TEST7502,254132
  EXPECT_TRUE(tuple.Apply([](int i, const std::string& s) -> bool {__anon728d141408027509,254339
  tuple.Apply([](int& i, std::string& s) {__anon728d141409027517,254553
struct ConstructionCounting {ConstructionCounting7525,254701
  ConstructionCounting() { ++default_ctor_calls; }ConstructionCounting7526,254731
  ~ConstructionCounting() { ++dtor_calls; }~ConstructionCounting7527,254782
  ConstructionCounting(const ConstructionCounting&) { ++copy_ctor_calls; }ConstructionCounting7528,254826
  ConstructionCounting(ConstructionCounting&&) noexcept { ++move_ctor_calls; }ConstructionCounting7529,254901
  ConstructionCounting& operator=(const ConstructionCounting&) {operator =7530,254980
  ConstructionCounting& operator=(ConstructionCounting&&) noexcept {operator =7534,255096
  static void Reset() {Reset7539,255217
  static int default_ctor_calls;default_ctor_calls7548,255406
  static int dtor_calls;dtor_calls7549,255439
  static int copy_ctor_calls;copy_ctor_calls7550,255464
  static int move_ctor_calls;move_ctor_calls7551,255494
  static int copy_assignment_calls;copy_assignment_calls7552,255524
  static int move_assignment_calls;move_assignment_calls7553,255560
int ConstructionCounting::default_ctor_calls = 0;default_ctor_calls7556,255600
int ConstructionCounting::dtor_calls = 0;dtor_calls7557,255650
int ConstructionCounting::copy_ctor_calls = 0;copy_ctor_calls7558,255692
int ConstructionCounting::move_ctor_calls = 0;move_ctor_calls7559,255739
int ConstructionCounting::copy_assignment_calls = 0;copy_assignment_calls7560,255786
int ConstructionCounting::move_assignment_calls = 0;move_assignment_calls7561,255839
TEST(FlatTuple, ConstructorCalls) {TEST7563,255893
TEST(FlatTuple, ManyTypes) {TEST7637,258702
#define GTEST_FLAT_TUPLE_INT8 GTEST_FLAT_TUPLE_INT87643,258943
#define GTEST_FLAT_TUPLE_INT16 GTEST_FLAT_TUPLE_INT167644,259013
#define GTEST_FLAT_TUPLE_INT32 GTEST_FLAT_TUPLE_INT327645,259088
#define GTEST_FLAT_TUPLE_INT64 GTEST_FLAT_TUPLE_INT647646,259165
#define GTEST_FLAT_TUPLE_INT128 GTEST_FLAT_TUPLE_INT1287647,259242
#define GTEST_FLAT_TUPLE_INT256 GTEST_FLAT_TUPLE_INT2567648,259320
TEST(SkipPrefixTest, SkipsWhenPrefixMatches) {TEST7664,259775
TEST(SkipPrefixTest, DoesNotSkipWhenPrefixDoesNotMatch) {TEST7676,260016
TEST(AdHocTestResultTest, AdHocTestResultForUnitTestDoesNotShowFailure) {TEST7689,260300
class DynamicUnitTestFixture : public testing::Test {};DynamicUnitTestFixture7695,260520
class DynamicTest : public DynamicUnitTestFixture {DynamicTest7697,260577
  void TestBody() override { EXPECT_TRUE(true); }TestBody7698,260629
    __LINE__, []() -> DynamicUnitTestFixture* { return new DynamicTest; });__anon728d14140a027703,260799
auto* dynamic_test = testing::RegisterTest(dynamic_test7701,260683
TEST(RegisterTest, WasRegistered) {TEST7705,260876
TEST(PatternGlobbingTest, MatchesFilterLinearRuntime) {TEST7724,261603
TEST(PatternGlobbingTest, MatchesFilterWithMultiplePatterns) {TEST7738,261997
TEST(PatternGlobbingTest, MatchesFilterEdgeCases) {TEST7747,262495

build/_deps/googletest-src/googletest/test/googletest-param-test-invalid-name1-test.py,429
binary_name = 'googletest-param-test-invalid-name1-test_'binary_name35,1675
COMMAND = gtest_test_utils.GetTestExecutablePath(binary_name)COMMAND36,1733
def Assert(condition):Assert39,1797
def TestExitCodeAndOutput(command):TestExitCodeAndOutput44,1867
class GTestParamTestInvalidName1Test(gtest_test_utils.TestCase):GTestParamTestInvalidName1Test56,2209
  def testExitCodeAndOutput(self):testExitCodeAndOutput58,2275

build/_deps/googletest-src/googletest/test/gtest_xml_output_unittest.py,2276
GTEST_FILTER_FLAG = '--gtest_filter'GTEST_FILTER_FLAG44,1792
GTEST_LIST_TESTS_FLAG = '--gtest_list_tests'GTEST_LIST_TESTS_FLAG45,1829
GTEST_OUTPUT_FLAG = '--gtest_output'GTEST_OUTPUT_FLAG46,1874
GTEST_DEFAULT_OUTPUT_FILE = 'test_detail.xml'GTEST_DEFAULT_OUTPUT_FILE47,1911
GTEST_PROGRAM_NAME = 'gtest_xml_output_unittest_'GTEST_PROGRAM_NAME48,1957
NO_STACKTRACE_SUPPORT_FLAG = '--no_stacktrace_support'NO_STACKTRACE_SUPPORT_FLAG51,2060
TOTAL_SHARDS_ENV_VAR = 'GTEST_TOTAL_SHARDS'TOTAL_SHARDS_ENV_VAR54,2163
SHARD_INDEX_ENV_VAR = 'GTEST_SHARD_INDEX'SHARD_INDEX_ENV_VAR55,2207
SHARD_STATUS_FILE_ENV_VAR = 'GTEST_SHARD_STATUS_FILE'SHARD_STATUS_FILE_ENV_VAR56,2249
SUPPORTS_STACK_TRACES = NO_STACKTRACE_SUPPORT_FLAG not in sys.argvSUPPORTS_STACK_TRACES58,2304
  STACK_TRACE_TEMPLATE = '\nStack trace:\n*'STACK_TRACE_TEMPLATE61,2398
  STACK_TRACE_TEMPLATE = ''STACK_TRACE_TEMPLATE63,2449
EXPECTED_NON_EMPTY_XML = """<?xml version="1.0" encoding="UTF-8"?>EXPECTED_NON_EMPTY_XML67,2571
EXPECTED_FILTERED_TEST_XML = """<?xml version="1.0" encoding="UTF-8"?>EXPECTED_FILTERED_TEST_XML193,12493
EXPECTED_SHARDED_TEST_XML = """<?xml version="1.0" encoding="UTF-8"?>EXPECTED_SHARDED_TEST_XML202,13021
EXPECTED_NO_TEST_XML = """<?xml version="1.0" encoding="UTF-8"?>EXPECTED_NO_TEST_XML219,14328
GTEST_PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath(GTEST_PROGRAM_NAME)GTEST_PROGRAM_PATH234,15028
SUPPORTS_TYPED_TESTS = 'TypedTest' in gtest_test_utils.Subprocess(SUPPORTS_TYPED_TESTS236,15109
class GTestXMLOutputUnitTest(gtest_xml_test_utils.GTestXMLTestCase):GTestXMLOutputUnitTest240,15256
    def testNonEmptyXmlOutput(self):testNonEmptyXmlOutput248,15556
  def testNoTestXmlOutput(self):testNoTestXmlOutput255,15801
  def testTimestampValue(self):testTimestampValue264,16122
  def testDefaultOutputFile(self):testDefaultOutputFile289,17324
  def testSuppressedXmlOutput(self):testSuppressedXmlOutput312,18112
  def testFilteredTestXmlOutput(self):testFilteredTestXmlOutput341,19176
  def testShardedTestXmlOutput(self):testShardedTestXmlOutput351,19563
  def _GetXmlOutput(self, gtest_prog_name, extra_args, extra_env,_GetXmlOutput365,19996
  def _TestXmlOutput(self, gtest_prog_name, expected_xml,_TestXmlOutput394,21207

build/_deps/googletest-src/googletest/test/googletest-json-output-unittest.py,1721
GTEST_FILTER_FLAG = '--gtest_filter'GTEST_FILTER_FLAG43,1771
GTEST_LIST_TESTS_FLAG = '--gtest_list_tests'GTEST_LIST_TESTS_FLAG44,1808
GTEST_OUTPUT_FLAG = '--gtest_output'GTEST_OUTPUT_FLAG45,1853
GTEST_DEFAULT_OUTPUT_FILE = 'test_detail.json'GTEST_DEFAULT_OUTPUT_FILE46,1890
GTEST_PROGRAM_NAME = 'gtest_xml_output_unittest_'GTEST_PROGRAM_NAME47,1937
NO_STACKTRACE_SUPPORT_FLAG = '--no_stacktrace_support'NO_STACKTRACE_SUPPORT_FLAG50,2040
SUPPORTS_STACK_TRACES = NO_STACKTRACE_SUPPORT_FLAG not in sys.argvSUPPORTS_STACK_TRACES52,2096
  STACK_TRACE_TEMPLATE = '\nStack trace:\n*'STACK_TRACE_TEMPLATE55,2190
  STACK_TRACE_TEMPLATE = ''STACK_TRACE_TEMPLATE57,2241
EXPECTED_NON_EMPTY = {EXPECTED_NON_EMPTY59,2270
EXPECTED_FILTERED = {EXPECTED_FILTERED634,17858
EXPECTED_NO_TEST = {EXPECTED_NO_TEST679,18736
GTEST_PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath(GTEST_PROGRAM_NAME)GTEST_PROGRAM_PATH734,19874
SUPPORTS_TYPED_TESTS = 'TypedTest' in gtest_test_utils.Subprocess(SUPPORTS_TYPED_TESTS736,19955
class GTestJsonOutputUnitTest(gtest_test_utils.TestCase):GTestJsonOutputUnitTest740,20102
    def testNonEmptyJsonOutput(self):testNonEmptyJsonOutput748,20390
  def testNoTestJsonOutput(self):testNoTestJsonOutput756,20704
  def testTimestampValue(self):testTimestampValue765,21026
  def testDefaultOutputFile(self):testDefaultOutputFile789,22171
  def testSuppressedJsonOutput(self):testSuppressedJsonOutput813,23000
  def testFilteredTestJsonOutput(self):testFilteredTestJsonOutput843,24118
  def _GetJsonOutput(self, gtest_prog_name, extra_args, expected_exit_code):_GetJsonOutput853,24501
  def _TestJsonOutput(self, gtest_prog_name, expected,_TestJsonOutput885,25764

build/_deps/googletest-src/googletest/test/googletest-setuptestsuite-test_.cc,446
class SetupFailTest : public ::testing::Test {SetupFailTest32,1583
  static void SetUpTestSuite() { ASSERT_EQ("", "SET_UP_FAIL"); }SetUpTestSuite34,1642
TEST_F(SetupFailTest, NoopPassingTest) {}TEST_F37,1711
class TearDownFailTest : public ::testing::Test {TearDownFailTest39,1754
  static void TearDownTestSuite() { ASSERT_EQ("", "TEAR_DOWN_FAIL"); }TearDownTestSuite41,1816
TEST_F(TearDownFailTest, NoopPassingTest) {}TEST_F44,1891

build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py,1196
IS_WINDOWS = os.name == 'nt'IS_WINDOWS46,2024
BREAK_ON_FAILURE_ENV_VAR = 'GTEST_BREAK_ON_FAILURE'BREAK_ON_FAILURE_ENV_VAR49,2131
BREAK_ON_FAILURE_FLAG = 'gtest_break_on_failure'BREAK_ON_FAILURE_FLAG52,2258
THROW_ON_FAILURE_ENV_VAR = 'GTEST_THROW_ON_FAILURE'THROW_ON_FAILURE_ENV_VAR55,2385
CATCH_EXCEPTIONS_ENV_VAR = 'GTEST_CATCH_EXCEPTIONS'CATCH_EXCEPTIONS_ENV_VAR58,2515
EXE_PATH = gtest_test_utils.GetTestExecutablePath(EXE_PATH61,2629
environ = gtest_test_utils.environenviron65,2727
SetEnvVar = gtest_test_utils.SetEnvVarSetEnvVar66,2762
def Run(command):Run76,3136
class GTestBreakOnFailureUnitTest(gtest_test_utils.TestCase):GTestBreakOnFailureUnitTest89,3371
  def RunAndVerify(self, env_var_value, flag_value, expect_seg_fault):RunAndVerify95,3599
  def testDefaultBehavior(self):testDefaultBehavior140,5036
  def testEnvVar(self):testEnvVar147,5244
  def testFlag(self):testFlag157,5585
  def testFlagOverridesEnvVar(self):testFlagOverridesEnvVar167,5910
  def testBreakOnFailureOverridesThrowOnFailure(self):testBreakOnFailureOverridesThrowOnFailure183,6499
    def testCatchExceptionsDoesNotInterfere(self):testCatchExceptionsDoesNotInterfere195,6894

build/_deps/googletest-src/googletest/test/gtest_list_output_unittest_.cc,1071
TEST(FooTest, Test1) {}TEST43,1968
TEST(FooTest, Test2) {}TEST45,1993
class FooTestFixture : public ::testing::Test {};FooTestFixture47,2018
TEST_F(FooTestFixture, Test3) {}TEST_F48,2068
TEST_F(FooTestFixture, Test4) {}TEST_F49,2101
class ValueParamTest : public ::testing::TestWithParam<int> {};ValueParamTest51,2135
TEST_P(ValueParamTest, Test5) {}TEST_P52,2199
TEST_P(ValueParamTest, Test6) {}TEST_P53,2232
class TypedTest : public ::testing::Test {};TypedTest57,2369
typedef testing::Types<int, bool> TypedTestTypes;TypedTestTypes58,2414
TYPED_TEST(TypedTest, Test7) {}TYPED_TEST60,2509
TYPED_TEST(TypedTest, Test8) {}TYPED_TEST61,2541
class TypeParameterizedTestSuite : public ::testing::Test {};TypeParameterizedTestSuite64,2596
TYPED_TEST_P(TypeParameterizedTestSuite, Test9) {}TYPED_TEST_P66,2706
TYPED_TEST_P(TypeParameterizedTestSuite, Test10) {}TYPED_TEST_P67,2757
typedef testing::Types<int, bool> TypeParameterizedTestSuiteTypes;  // NOLINTTypeParameterizedTestSuiteTypes69,2881
int main(int argc, char **argv) {main73,3092

build/_deps/googletest-src/googletest/test/googletest-listener-test.cc,4147
std::vector<std::string>* g_events = nullptr;g_events51,2120
namespace testing {testing53,2167
namespace internal {internal54,2187
class EventRecordingListener : public TestEventListener {EventRecordingListener56,2209
  explicit EventRecordingListener(const char* name) : name_(name) {}EventRecordingListener58,2276
  void OnTestProgramStart(const UnitTest& /*unit_test*/) override {OnTestProgramStart61,2358
  void OnTestIterationStart(const UnitTest& /*unit_test*/,OnTestIterationStart65,2497
  void OnEnvironmentsSetUpStart(const UnitTest& /*unit_test*/) override {OnEnvironmentsSetUpStart73,2779
  void OnEnvironmentsSetUpEnd(const UnitTest& /*unit_test*/) override {OnEnvironmentsSetUpEnd77,2930
  void OnTestCaseStart(const TestCase& /*test_case*/) override {OnTestCaseStart81,3118
  void OnTestStart(const TestInfo& /*test_info*/) override {OnTestStart86,3296
  void OnTestPartResult(const TestPartResult& /*test_part_result*/) override {OnTestPartResult90,3421
  void OnTestEnd(const TestInfo& /*test_info*/) override {OnTestEnd94,3569
  void OnTestCaseEnd(const TestCase& /*test_case*/) override {OnTestCaseEnd99,3732
  void OnEnvironmentsTearDownStart(const UnitTest& /*unit_test*/) override {OnEnvironmentsTearDownStart104,3906
  void OnEnvironmentsTearDownEnd(const UnitTest& /*unit_test*/) override {OnEnvironmentsTearDownEnd108,4063
  void OnTestIterationEnd(const UnitTest& /*unit_test*/,OnTestIterationEnd112,4216
  void OnTestProgramEnd(const UnitTest& /*unit_test*/) override {OnTestProgramEnd120,4492
  std::string GetFullMethodName(const char* name) { return name_ + "." + name; }GetFullMethodName125,4637
  std::string name_;name_127,4719
class EventRecordingListener2 : public TestEventListener {EventRecordingListener2131,4807
  explicit EventRecordingListener2(const char* name) : name_(name) {}EventRecordingListener2133,4875
  void OnTestProgramStart(const UnitTest& /*unit_test*/) override {OnTestProgramStart136,4958
  void OnTestIterationStart(const UnitTest& /*unit_test*/,OnTestIterationStart140,5097
  void OnEnvironmentsSetUpStart(const UnitTest& /*unit_test*/) override {OnEnvironmentsSetUpStart148,5379
  void OnEnvironmentsSetUpEnd(const UnitTest& /*unit_test*/) override {OnEnvironmentsSetUpEnd152,5530
  void OnTestSuiteStart(const TestSuite& /*test_suite*/) override {OnTestSuiteStart156,5677
  void OnTestStart(const TestInfo& /*test_info*/) override {OnTestStart160,5814
  void OnTestPartResult(const TestPartResult& /*test_part_result*/) override {OnTestPartResult164,5939
  void OnTestEnd(const TestInfo& /*test_info*/) override {OnTestEnd168,6087
  void OnTestSuiteEnd(const TestSuite& /*test_suite*/) override {OnTestSuiteEnd172,6208
  void OnEnvironmentsTearDownStart(const UnitTest& /*unit_test*/) override {OnEnvironmentsTearDownStart176,6341
  void OnEnvironmentsTearDownEnd(const UnitTest& /*unit_test*/) override {OnEnvironmentsTearDownEnd180,6498
  void OnTestIterationEnd(const UnitTest& /*unit_test*/,OnTestIterationEnd184,6651
  void OnTestProgramEnd(const UnitTest& /*unit_test*/) override {OnTestProgramEnd192,6927
  std::string GetFullMethodName(const char* name) { return name_ + "." + name; }GetFullMethodName197,7072
  std::string name_;name_199,7154
class EnvironmentInvocationCatcher : public Environment {EnvironmentInvocationCatcher202,7179
  void SetUp() override { g_events->push_back("Environment::SetUp"); }SetUp204,7249
  void TearDown() override { g_events->push_back("Environment::TearDown"); }TearDown206,7321
class ListenerTest : public Test {ListenerTest209,7402
  static void SetUpTestSuite() {SetUpTestSuite211,7449
  static void TearDownTestSuite() {TearDownTestSuite215,7544
  void SetUp() override { g_events->push_back("ListenerTest::SetUp"); }SetUp219,7645
  void TearDown() override { g_events->push_back("ListenerTest::TearDown"); }TearDown221,7718
TEST_F(ListenerTest, DoesFoo) {TEST_F224,7800
TEST_F(ListenerTest, DoesBar) {TEST_F231,8038
void VerifyResults(const std::vector<std::string>& data,VerifyResults244,8381
int main(int argc, char** argv) {main267,9201

build/_deps/googletest-src/googletest/test/googletest-env-var-test.py,725
IS_WINDOWS = os.name == 'nt'IS_WINDOWS38,1683
IS_LINUX = os.name == 'posix' and os.uname()[0] == 'Linux'IS_LINUX39,1712
COMMAND = gtest_test_utils.GetTestExecutablePath('googletest-env-var-test_')COMMAND41,1772
environ = os.environ.copy()environ43,1850
def AssertEq(expected, actual):AssertEq46,1880
def SetEnvVar(env_var, value):SetEnvVar53,2042
def GetFlag(flag):GetFlag62,2255
def TestFlag(flag, test_val, default_val):TestFlag71,2463
class GTestEnvVarTest(gtest_test_utils.TestCase):GTestEnvVarTest81,2757
  def testEnvVarAffectsFlag(self):testEnvVarAffectsFlag83,2808
  def testXmlOutputFile(self):testXmlOutputFile105,3630
  def testXmlOutputFileOverride(self):testXmlOutputFileOverride112,3861

build/_deps/googletest-src/googletest/test/gtest_xml_outfile2_test_.cc,277
class PropertyTwo : public testing::Test {PropertyTwo35,1685
  void SetUp() override { RecordProperty("SetUpProp", 2); }SetUp37,1740
  void TearDown() override { RecordProperty("TearDownProp", 2); }TearDown38,1800
TEST_F(PropertyTwo, TestSomeProperties) {TEST_F41,1870

build/_deps/googletest-src/googletest/test/gtest_skip_in_environment_setup_test.cc,285
class SetupEnvironment : public testing::Environment {SetupEnvironment37,1705
  void SetUp() override { GTEST_SKIP() << "Skipping the entire environment"; }SetUp39,1769
TEST(Test, AlwaysFails) { EXPECT_EQ(true, false); }TEST42,1852
int main(int argc, char **argv) {main44,1905

build/_deps/googletest-src/googletest/test/googletest-param-test-invalid-name1-test_.cc,216
namespace {__anona5756ed5011132,1583
class DummyTest : public ::testing::TestWithParam<const char *> {};DummyTest33,1595
TEST_P(DummyTest, Dummy) {}TEST_P35,1664
int main(int argc, char *argv[]) {main43,1892

build/_deps/googletest-src/googletest/test/googletest-output-test.py,2658
GENGOLDEN_FLAG = '--gengolden'GENGOLDEN_FLAG49,1981
CATCH_EXCEPTIONS_ENV_VAR_NAME = 'GTEST_CATCH_EXCEPTIONS'CATCH_EXCEPTIONS_ENV_VAR_NAME50,2012
NO_STACKTRACE_SUPPORT_FLAG = '--no_stacktrace_support'NO_STACKTRACE_SUPPORT_FLAG53,2122
IS_LINUX = os.name == 'posix' and os.uname()[0] == 'Linux'IS_LINUX55,2178
IS_WINDOWS = os.name == 'nt'IS_WINDOWS56,2237
GOLDEN_NAME = 'googletest-output-test-golden-lin.txt'GOLDEN_NAME58,2267
PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('googletest-output-test_')PROGRAM_PATH60,2322
COMMAND_LIST_TESTS = ({}, [PROGRAM_PATH, '--gtest_list_tests'])COMMAND_LIST_TESTS64,2514
COMMAND_WITH_COLOR = ({}, [PROGRAM_PATH, '--gtest_color=yes'])COMMAND_WITH_COLOR65,2578
COMMAND_WITH_TIME = ({}, [PROGRAM_PATH,COMMAND_WITH_TIME66,2641
COMMAND_WITH_DISABLED = (COMMAND_WITH_DISABLED70,2879
COMMAND_WITH_SHARDING = (COMMAND_WITH_SHARDING75,3067
GOLDEN_PATH = os.path.join(gtest_test_utils.GetSourceDir(), GOLDEN_NAME)GOLDEN_PATH81,3261
def ToUnixLineEnding(s):ToUnixLineEnding84,3336
def RemoveLocations(test_output):RemoveLocations90,3489
def RemoveStackTraceDetails(output):RemoveStackTraceDetails107,3991
def RemoveStackTraces(output):RemoveStackTraces115,4254
def RemoveTime(output):RemoveTime122,4479
def RemoveTypeInfoDetails(test_output):RemoveTypeInfoDetails128,4626
def NormalizeToCurrentPlatform(test_output):NormalizeToCurrentPlatform142,5026
def RemoveTestCounts(output):RemoveTestCounts156,5576
def RemoveMatchingTests(test_output, pattern):RemoveMatchingTests170,6113
def NormalizeOutput(output):NormalizeOutput193,6834
def GetShellCommandOutput(env_cmd):GetShellCommandOutput203,7097
def GetCommandOutput(env_cmd):GetCommandOutput224,7754
def GetOutputOfAllCommands():GetOutputOfAllCommands241,8333
test_list = GetShellCommandOutput(COMMAND_LIST_TESTS)test_list250,8640
SUPPORTS_DEATH_TESTS = 'DeathTest' in test_listSUPPORTS_DEATH_TESTS251,8694
SUPPORTS_TYPED_TESTS = 'TypedTest' in test_listSUPPORTS_TYPED_TESTS252,8742
SUPPORTS_THREADS = 'ExpectFailureWithThreadsTest' in test_listSUPPORTS_THREADS253,8790
SUPPORTS_STACK_TRACES = NO_STACKTRACE_SUPPORT_FLAG not in sys.argvSUPPORTS_STACK_TRACES254,8853
CAN_GENERATE_GOLDEN_FILE = (SUPPORTS_DEATH_TESTS andCAN_GENERATE_GOLDEN_FILE256,8921
class GTestOutputTest(gtest_test_utils.TestCase):GTestOutputTest261,9128
  def RemoveUnsupportedTests(self, test_output):RemoveUnsupportedTests262,9178
  def testOutput(self):testOutput281,10082
      output = GetOutputOfAllCommands()output332,12117
      golden_file = open(GOLDEN_PATH, 'wb')golden_file333,12157
      message = (message337,12278

build/_deps/googletest-src/googletest/test/gtest_test_macro_stack_footprint_test.cc,178
#define TEN_TESTS_(TEN_TESTS_41,2050
#define HUNDRED_TESTS_(HUNDRED_TESTS_54,2490
#define THOUSAND_TESTS_(THOUSAND_TESTS_67,3050
THOUSAND_TESTS_(T)THOUSAND_TESTS_81,3660

build/_deps/googletest-src/googletest/test/googletest-catch-exceptions-test_.cc,4268
class SehExceptionInConstructorTest : public Test {SehExceptionInConstructorTest53,1997
  SehExceptionInConstructorTest() { RaiseException(42, 0, 0, NULL); }SehExceptionInConstructorTest55,2058
TEST_F(SehExceptionInConstructorTest, ThrowsExceptionInConstructor) {}TEST_F58,2132
class SehExceptionInDestructorTest : public Test {SehExceptionInDestructorTest60,2204
  ~SehExceptionInDestructorTest() { RaiseException(42, 0, 0, NULL); }~SehExceptionInDestructorTest62,2264
TEST_F(SehExceptionInDestructorTest, ThrowsExceptionInDestructor) {}TEST_F65,2338
class SehExceptionInSetUpTestSuiteTest : public Test {SehExceptionInSetUpTestSuiteTest67,2408
  static void SetUpTestSuite() { RaiseException(42, 0, 0, NULL); }SetUpTestSuite69,2472
TEST_F(SehExceptionInSetUpTestSuiteTest, ThrowsExceptionInSetUpTestSuite) {}TEST_F72,2543
class SehExceptionInTearDownTestSuiteTest : public Test {SehExceptionInTearDownTestSuiteTest74,2621
  static void TearDownTestSuite() { RaiseException(42, 0, 0, NULL); }TearDownTestSuite76,2688
TEST_F(SehExceptionInTearDownTestSuiteTest,TEST_F79,2762
class SehExceptionInSetUpTest : public Test {SehExceptionInSetUpTest82,2853
  virtual void SetUp() { RaiseException(42, 0, 0, NULL); }SetUp84,2911
TEST_F(SehExceptionInSetUpTest, ThrowsExceptionInSetUp) {}TEST_F87,2974
class SehExceptionInTearDownTest : public Test {SehExceptionInTearDownTest89,3034
  virtual void TearDown() { RaiseException(42, 0, 0, NULL); }TearDown91,3095
TEST_F(SehExceptionInTearDownTest, ThrowsExceptionInTearDown) {}TEST_F94,3161
TEST(SehExceptionTest, ThrowsSehException) { RaiseException(42, 0, 0, NULL); }TEST96,3227
class CxxExceptionInConstructorTest : public Test {CxxExceptionInConstructorTest102,3359
  CxxExceptionInConstructorTest() {CxxExceptionInConstructorTest104,3420
  static void TearDownTestSuite() {TearDownTestSuite111,3676
  ~CxxExceptionInConstructorTest() override {~CxxExceptionInConstructorTest118,3848
  void SetUp() override {SetUp123,4009
  void TearDown() override {TearDown128,4148
TEST_F(CxxExceptionInConstructorTest, ThrowsExceptionInConstructor) {TEST_F134,4296
class CxxExceptionInSetUpTestSuiteTest : public Test {CxxExceptionInSetUpTestSuiteTest139,4474
  CxxExceptionInSetUpTestSuiteTest() {CxxExceptionInSetUpTestSuiteTest141,4538
  static void SetUpTestSuite() {SetUpTestSuite147,4695
  static void TearDownTestSuite() {TearDownTestSuite151,4789
  ~CxxExceptionInSetUpTestSuiteTest() override {~CxxExceptionInSetUpTestSuiteTest158,4964
  void SetUp() override {SetUp164,5130
  void TearDown() override {TearDown170,5271
TEST_F(CxxExceptionInSetUpTestSuiteTest, ThrowsExceptionInSetUpTestSuite) {TEST_F177,5421
class CxxExceptionInTearDownTestSuiteTest : public Test {CxxExceptionInTearDownTestSuiteTest183,5605
  static void TearDownTestSuite() {TearDownTestSuite185,5672
TEST_F(CxxExceptionInTearDownTestSuiteTest,TEST_F190,5772
class CxxExceptionInSetUpTest : public Test {CxxExceptionInSetUpTest193,5863
  static void TearDownTestSuite() {TearDownTestSuite195,5918
  ~CxxExceptionInSetUpTest() override {~CxxExceptionInSetUpTest202,6084
  void SetUp() override { throw std::runtime_error("Standard C++ exception"); }SetUp208,6232
  void TearDown() override {TearDown210,6313
TEST_F(CxxExceptionInSetUpTest, ThrowsExceptionInSetUp) {TEST_F217,6454
class CxxExceptionInTearDownTest : public Test {CxxExceptionInTearDownTest222,6614
  static void TearDownTestSuite() {TearDownTestSuite224,6672
  ~CxxExceptionInTearDownTest() override {~CxxExceptionInTearDownTest231,6841
  void TearDown() override {TearDown237,6995
TEST_F(CxxExceptionInTearDownTest, ThrowsExceptionInTearDown) {}TEST_F242,7088
class CxxExceptionInTestBodyTest : public Test {CxxExceptionInTestBodyTest244,7154
  static void TearDownTestSuite() {TearDownTestSuite246,7212
  ~CxxExceptionInTestBodyTest() override {~CxxExceptionInTestBodyTest253,7381
  void TearDown() override {TearDown259,7535
TEST_F(CxxExceptionInTestBodyTest, ThrowsStdCxxException) {TEST_F266,7679
TEST(CxxExceptionTest, ThrowsNonStdCxxException) { throw "C-string"; }TEST270,7796
void TerminateHandler() {TerminateHandler275,8034
int main(int argc, char** argv) {main283,8205

build/_deps/googletest-src/googletest/test/googletest-throw-on-failure-test.py,683
THROW_ON_FAILURE = 'gtest_throw_on_failure'THROW_ON_FAILURE45,1918
EXE_PATH = gtest_test_utils.GetTestExecutablePath(EXE_PATH49,2057
def SetEnvVar(env_var, value):SetEnvVar56,2166
def Run(command):Run68,2442
class ThrowOnFailureTest(gtest_test_utils.TestCase):ThrowOnFailureTest77,2679
  def RunAndVerify(self, env_var_value, flag_value, should_fail):RunAndVerify80,2774
  def testDefaultBehavior(self):testDefaultBehavior125,4142
  def testThrowOnFailureEnvVar(self):testThrowOnFailureEnvVar130,4305
  def testThrowOnFailureFlag(self):testThrowOnFailureFlag140,4657
  def testThrowOnFailureFlagOverridesEnvVar(self):testThrowOnFailureFlagOverridesEnvVar150,4993

build/_deps/googletest-src/googletest/test/gtest_help_test_.cc,142
TEST(HelpFlagTest, ShouldNotBeRun) {TEST38,1860
TEST(DeathTest, UsedByPythonScriptToDetectSupportForDeathTestsInThisBinary) {}TEST43,2001

build/_deps/googletest-src/googletest/test/googletest-setuptestsuite-test.py,239
COMMAND = gtest_test_utils.GetTestExecutablePath(COMMAND36,1677
class GTestSetUpTestSuiteTest(gtest_test_utils.TestCase):GTestSetUpTestSuiteTest40,1768
  def testSetupErrorAndTearDownError(self):testSetupErrorAndTearDownError42,1827

build/_deps/googletest-src/googletest/test/gtest_xml_output_unittest_.cc,2571
class SuccessfulTest : public Test {};SuccessfulTest49,2107
TEST_F(SuccessfulTest, Succeeds) {TEST_F51,2147
class FailedTest : public Test {FailedTest56,2241
TEST_F(FailedTest, Fails) {TEST_F59,2278
class DisabledTest : public Test {DisabledTest63,2328
TEST_F(DisabledTest, DISABLED_test_not_run) {TEST_F66,2367
class SkippedTest : public Test {SkippedTest70,2483
TEST_F(SkippedTest, Skipped) {TEST_F73,2521
TEST_F(SkippedTest, SkippedWithMessage) {TEST_F77,2571
TEST_F(SkippedTest, SkippedAfterFailure) {TEST_F81,2686
TEST(MixedResultTest, Succeeds) {TEST86,2821
TEST(MixedResultTest, Fails) {TEST91,2896
TEST(MixedResultTest, DISABLED_test) {TEST96,2968
TEST(XmlQuotingTest, OutputsCData) {TEST100,3077
TEST(InvalidCharactersTest, InvalidCharactersInMessage) {TEST107,3318
class PropertyRecordingTest : public Test {PropertyRecordingTest111,3434
  static void SetUpTestSuite() { RecordProperty("SetUpTestSuite", "yes"); }SetUpTestSuite113,3487
  static void TearDownTestSuite() {TearDownTestSuite114,3563
TEST_F(PropertyRecordingTest, OneProperty) {TEST_F119,3655
TEST_F(PropertyRecordingTest, IntValuedProperty) {TEST_F123,3735
TEST_F(PropertyRecordingTest, ThreeProperties) {TEST_F127,3821
TEST_F(PropertyRecordingTest, TwoValuesForOneKeyUsesLastValue) {TEST_F133,3969
TEST(NoFixtureTest, RecordProperty) {TEST138,4101
void ExternalUtilityThatCallsRecordProperty(const std::string& key, int value) {ExternalUtilityThatCallsRecordProperty142,4172
void ExternalUtilityThatCallsRecordProperty(const std::string& key,ExternalUtilityThatCallsRecordProperty146,4301
TEST(NoFixtureTest, ExternalUtilityThatCallsRecordIntValuedProperty) {TEST151,4489
TEST(NoFixtureTest, ExternalUtilityThatCallsRecordStringValuedProperty) {TEST155,4631
class ValueParamTest : public TestWithParam<int> {};ValueParamTest161,4902
TEST_P(ValueParamTest, HasValueParamAttribute) {}TEST_P162,4955
TEST_P(ValueParamTest, AnotherTestThatHasValueParamAttribute) {}TEST_P163,5005
template <typename T> class TypedTest : public Test {};TypedTest168,5242
typedef testing::Types<int, long> TypedTestTypes;TypedTestTypes169,5298
TYPED_TEST(TypedTest, HasTypeParamAttribute) {}TYPED_TEST171,5393
class TypeParameterizedTestSuite : public Test {};TypeParameterizedTestSuite176,5582
TYPED_TEST_P(TypeParameterizedTestSuite, HasTypeParamAttribute) {}TYPED_TEST_P178,5681
typedef testing::Types<int, long> TypeParameterizedTestSuiteTypes;  // NOLINTTypeParameterizedTestSuiteTypes180,5828
int main(int argc, char** argv) {main184,6039

build/_deps/googletest-src/googletest/test/googletest-shuffle-test.py,2380
COMMAND = gtest_test_utils.GetTestExecutablePath('googletest-shuffle-test_')COMMAND37,1704
TOTAL_SHARDS_ENV_VAR = 'GTEST_TOTAL_SHARDS'TOTAL_SHARDS_ENV_VAR40,1829
SHARD_INDEX_ENV_VAR = 'GTEST_SHARD_INDEX'SHARD_INDEX_ENV_VAR41,1873
TEST_FILTER = 'A*.A:A*.B:C*'TEST_FILTER43,1916
ALL_TESTS = []ALL_TESTS45,1946
ACTIVE_TESTS = []ACTIVE_TESTS46,1961
FILTERED_TESTS = []FILTERED_TESTS47,1979
SHARDED_TESTS = []SHARDED_TESTS48,1999
SHUFFLED_ALL_TESTS = []SHUFFLED_ALL_TESTS50,2019
SHUFFLED_ACTIVE_TESTS = []SHUFFLED_ACTIVE_TESTS51,2043
SHUFFLED_FILTERED_TESTS = []SHUFFLED_FILTERED_TESTS52,2070
SHUFFLED_SHARDED_TESTS = []SHUFFLED_SHARDED_TESTS53,2099
def AlsoRunDisabledTestsFlag():AlsoRunDisabledTestsFlag56,2129
def FilterFlag(test_filter):FilterFlag60,2206
def RepeatFlag(n):RepeatFlag64,2283
def ShuffleFlag():ShuffleFlag68,2340
def RandomSeedFlag(n):RandomSeedFlag72,2388
def RunAndReturnOutput(extra_env, args):RunAndReturnOutput76,2454
def GetTestsForAllIterations(extra_env, args):GetTestsForAllIterations85,2701
def GetTestCases(tests):GetTestCases108,3339
def CalculateTestLists():CalculateTestLists128,3765
class GTestShuffleUnitTest(gtest_test_utils.TestCase):GTestShuffleUnitTest167,5138
  def setUp(self):setUp170,5224
  def testShufflePreservesNumberOfTests(self):testShufflePreservesNumberOfTests173,5269
  def testShuffleChangesTestOrder(self):testShuffleChangesTestOrder179,5589
  def testShuffleChangesTestCaseOrder(self):testShuffleChangesTestCaseOrder187,5981
  def testShuffleDoesNotRepeatTest(self):testShuffleDoesNotRepeatTest200,6579
  def testShuffleDoesNotCreateNewTest(self):testShuffleDoesNotCreateNewTest214,7270
  def testShuffleIncludesAllTests(self):testShuffleIncludesAllTests224,7776
  def testShuffleLeavesDeathTestsAtFront(self):testShuffleLeavesDeathTestsAtFront234,8246
  def _VerifyTestCasesDoNotInterleave(self, tests):_VerifyTestCasesDoNotInterleave243,8561
  def testShuffleDoesNotInterleaveTestCases(self):testShuffleDoesNotInterleaveTestCases253,8960
  def testShuffleRestoresOrderAfterEachIteration(self):testShuffleRestoresOrderAfterEachIteration259,9268
  def testShuffleGeneratesNewOrderInEachIteration(self):testShuffleGeneratesNewOrderInEachIteration291,10874
  def testShuffleShardedTestsPreservesPartition(self):testShuffleShardedTestsPreservesPartition303,11404

build/_deps/googletest-src/googletest/test/googletest-global-environment-unittest_.cc,386
namespace {__anon5844bbb7011137,1725
class FailingEnvironment final : public ::testing::Environment {FailingEnvironment40,1795
  void SetUp() override { FAIL() << "Canned environment setup error"; }SetUp42,1869
auto* const g_environment_ =g_environment_46,1974
TEST(SomeTest, DoesFoo) { FAIL() << "Unexpected call"; }TEST50,2106
int main(int argc, char** argv) {main54,2181

build/_deps/googletest-src/googletest/test/googletest-catch-exceptions-test.py,2231
FLAG_PREFIX = '--gtest_'FLAG_PREFIX41,1826
LIST_TESTS_FLAG = FLAG_PREFIX + 'list_tests'LIST_TESTS_FLAG42,1851
NO_CATCH_EXCEPTIONS_FLAG = FLAG_PREFIX + 'catch_exceptions=0'NO_CATCH_EXCEPTIONS_FLAG43,1896
FILTER_FLAG = FLAG_PREFIX + 'filter'FILTER_FLAG44,1958
EX_EXE_PATH = gtest_test_utils.GetTestExecutablePath(EX_EXE_PATH48,2091
EXE_PATH = gtest_test_utils.GetTestExecutablePath(EXE_PATH53,2283
environ = gtest_test_utils.environenviron56,2382
SetEnvVar = gtest_test_utils.SetEnvVarSetEnvVar57,2417
TEST_LIST = gtest_test_utils.Subprocess(TEST_LIST66,2790
SUPPORTS_SEH_EXCEPTIONS = 'ThrowsSehException' in TEST_LISTSUPPORTS_SEH_EXCEPTIONS69,2885
  BINARY_OUTPUT = gtest_test_utils.Subprocess([EXE_PATH], env=environ).outputBINARY_OUTPUT72,2974
EX_BINARY_OUTPUT = gtest_test_utils.Subprocess(EX_BINARY_OUTPUT74,3053
  class CatchSehExceptionsTest(gtest_test_utils.TestCase):CatchSehExceptionsTest81,3212
    def TestSehExceptions(self, test_output):TestSehExceptions85,3318
    def testCatchesSehExceptionsWithCxxExceptionsEnabled(self):testCatchesSehExceptionsWithCxxExceptionsEnabled103,4207
    def testCatchesSehExceptionsWithCxxExceptionsDisabled(self):testCatchesSehExceptionsWithCxxExceptionsDisabled106,4319
class CatchCxxExceptionsTest(gtest_test_utils.TestCase):CatchCxxExceptionsTest110,4430
  def testCatchesCxxExceptionsInFixtureConstructor(self):testCatchesCxxExceptionsInFixtureConstructor119,4751
    def testCatchesCxxExceptionsInFixtureDestructor(self):testCatchesCxxExceptionsInFixtureDestructor133,5359
  def testCatchesCxxExceptionsInSetUpTestCase(self):testCatchesCxxExceptionsInSetUpTestCase143,5783
  def testCatchesCxxExceptionsInTearDownTestCase(self):testCatchesCxxExceptionsInTearDownTestCase166,6882
  def testCatchesCxxExceptionsInSetUp(self):testCatchesCxxExceptionsInSetUp171,7106
  def testCatchesCxxExceptionsInTearDown(self):testCatchesCxxExceptionsInTearDown189,7977
  def testCatchesCxxExceptionsInTestBody(self):testCatchesCxxExceptionsInTestBody200,8472
  def testCatchesNonStdCxxExceptions(self):testCatchesNonStdCxxExceptions214,9110
  def testUnhandledCxxExceptionsAbortTheProgram(self):testUnhandledCxxExceptionsAbortTheProgram219,9279

build/_deps/googletest-src/googletest/test/gtest-typed-test_test.cc,4475
class CommonTest : public Test {CommonTest48,2009
  static void SetUpTestSuite() { shared_ = new T(5); }SetUpTestSuite52,2145
  static void TearDownTestSuite() {TearDownTestSuite54,2201
  typedef std::vector<T> Vector;Vector64,2539
  typedef std::set<int> IntSet;IntSet65,2572
  CommonTest() : value_(1) {}CommonTest67,2605
  ~CommonTest() override { EXPECT_EQ(3, value_); }~CommonTest69,2636
  void SetUp() override {SetUp71,2688
  void TearDown() override {TearDown76,2759
  T value_;value_81,2833
  static T* shared_;shared_82,2845
T* CommonTest<T>::shared_ = nullptr;shared_86,2892
typedef Types<char, int> TwoTypes;TwoTypes93,3081
TYPED_TEST(CommonTest, ValuesAreCorrect) {TYPED_TEST96,3157
TYPED_TEST(CommonTest, ValuesAreStillCorrect) {TYPED_TEST116,3816
class TypedTest1 : public Test {};TypedTest1130,4254
TYPED_TEST(TypedTest1, A) {}TYPED_TEST135,4407
class TypedTest2 : public Test {};TypedTest2138,4459
TYPED_TEST(TypedTest2, A) {}TYPED_TEST146,4722
namespace library1 {library1150,4816
class NumericTest : public Test {};NumericTest153,4860
typedef Types<int, long> NumericTypes;NumericTypes155,4897
TYPED_TEST(NumericTest, DefaultIsZero) { EXPECT_EQ(0, TypeParam()); }TYPED_TEST158,4982
class TypedTestWithNames : public Test {};TypedTestWithNames164,5134
class TypedTestNames {TypedTestNames166,5178
  static std::string GetName(int i) {GetName169,5234
TYPED_TEST(TypedTestWithNames, TestSuiteName) {TYPED_TEST181,5563
class TypedTestSuitePStateTest : public Test {TypedTestSuitePStateTest201,6180
  void SetUp() override {SetUp203,6239
  TypedTestSuitePState state_;state_209,6429
TEST_F(TypedTestSuitePStateTest, SucceedsForMatchingList) {TEST_F212,6464
TEST_F(TypedTestSuitePStateTest, IgnoresOrderAndSpaces) {TEST_F220,6742
using TypedTestSuitePStateDeathTest = TypedTestSuitePStateTest;TypedTestSuitePStateDeathTest226,6932
TEST_F(TypedTestSuitePStateDeathTest, DetectsDuplicates) {TEST_F228,6997
TEST_F(TypedTestSuitePStateDeathTest, DetectsExtraTest) {TEST_F234,7223
TEST_F(TypedTestSuitePStateDeathTest, DetectsMissedTest) {TEST_F240,7464
TEST_F(TypedTestSuitePStateDeathTest, DetectsTestAfterRegistration) {TEST_F248,7806
class DerivedTest : public CommonTest<T> {};DerivedTest260,8314
TYPED_TEST_P(DerivedTest, ValuesAreCorrect) {TYPED_TEST_P264,8394
TYPED_TEST_P(DerivedTest, ValuesAreStillCorrect) {TYPED_TEST_P276,8809
typedef Types<short, long> MyTwoTypes;MyTwoTypes287,9165
class TypeParametrizedTestWithNames : public Test {};TypeParametrizedTestWithNames293,9392
TYPED_TEST_P(TypeParametrizedTestWithNames, TestSuiteName) {TYPED_TEST_P297,9499
class TypeParametrizedTestNames {TypeParametrizedTestNames314,10153
  static std::string GetName(int i) {GetName317,10220
class TypedTestP1 : public Test {};TypedTestP1334,10749
using IntAfterTypedTestSuiteP = int;IntAfterTypedTestSuiteP340,10932
TYPED_TEST_P(TypedTestP1, A) {}TYPED_TEST_P342,10970
TYPED_TEST_P(TypedTestP1, B) {}TYPED_TEST_P343,11002
using IntBeforeRegisterTypedTestSuiteP = int;IntBeforeRegisterTypedTestSuiteP347,11156
class TypedTestP2 : public Test {};TypedTestP2352,11274
TYPED_TEST_P(TypedTestP2, A) {}TYPED_TEST_P358,11451
IntAfterTypedTestSuiteP after = 0;after364,11654
IntBeforeRegisterTypedTestSuiteP before = 0;before365,11689
typedef Types<std::vector<double>, std::set<char> > MyContainers;MyContainers379,12363
namespace library2 {library2385,12592
class NumericTest : public Test {};NumericTest388,12636
TYPED_TEST_P(NumericTest, DefaultIsZero) { EXPECT_EQ(0, TypeParam()); }TYPED_TEST_P392,12707
TYPED_TEST_P(NumericTest, ZeroIsLessThanOne) {TYPED_TEST_P394,12780
typedef Types<int, double> NumericTypes;NumericTypes399,12947
static const char* GetTestName() {GetTestName402,13052
class TrimmedTest : public Test {};TrimmedTest407,13230
TYPED_TEST_P(TrimmedTest, Test1) { EXPECT_STREQ("Test1", GetTestName()); }TYPED_TEST_P409,13299
TYPED_TEST_P(TrimmedTest, Test2) { EXPECT_STREQ("Test2", GetTestName()); }TYPED_TEST_P410,13374
TYPED_TEST_P(TrimmedTest, Test3) { EXPECT_STREQ("Test3", GetTestName()); }TYPED_TEST_P411,13449
TYPED_TEST_P(TrimmedTest, Test4) { EXPECT_STREQ("Test4", GetTestName()); }TYPED_TEST_P412,13524
TYPED_TEST_P(TrimmedTest, Test5) { EXPECT_STREQ("Test5", GetTestName()); }TYPED_TEST_P413,13599
struct MyPair {};MyPair417,13826
typedef Types<int, double, MyPair<int, int> > TrimTypes;TrimTypes419,13919

build/_deps/googletest-src/googletest/test/googletest-env-var-test_.cc,182
namespace testing {testing40,1757
TEST(GTestEnvVarTest, Dummy) {}TEST45,1956
void PrintFlag(const char* flag) {PrintFlag47,1989
int main(int argc, char** argv) {main120,3482

build/_deps/googletest-src/googletest/test/googletest-test-part-test.cc,1634
namespace {__anon736bf049011138,1730
class TestPartResultTest : public Test {TestPartResultTest43,1827
  TestPartResultTest()TestPartResultTest45,1880
  TestPartResult r1_, r2_, r3_, r4_;r1_51,2186
  TestPartResult r1_, r2_, r3_, r4_;r2_51,2186
  TestPartResult r1_, r2_, r3_, r4_;r3_51,2186
  TestPartResult r1_, r2_, r3_, r4_;r4_51,2186
TEST_F(TestPartResultTest, ConstructorWorks) {TEST_F54,2227
TEST_F(TestPartResultTest, ResultAccessorsWork) {TEST_F70,2889
TEST_F(TestPartResultTest, type) {TEST_F104,4258
TEST_F(TestPartResultTest, file_name) {TEST_F112,4548
TEST_F(TestPartResultTest, line_number) {TEST_F119,4767
TEST_F(TestPartResultTest, message) {TEST_F126,4955
TEST_F(TestPartResultTest, Passed) {TEST_F132,5117
TEST_F(TestPartResultTest, Failed) {TEST_F140,5311
TEST_F(TestPartResultTest, Skipped) {TEST_F148,5504
TEST_F(TestPartResultTest, FatallyFailed) {TEST_F156,5711
TEST_F(TestPartResultTest, NonfatallyFailed) {TEST_F164,5955
class TestPartResultArrayTest : public Test {TestPartResultArrayTest173,6209
  TestPartResultArrayTest()TestPartResultArrayTest175,6267
  const TestPartResult r1_, r2_;r1_179,6451
  const TestPartResult r1_, r2_;r2_179,6451
TEST_F(TestPartResultArrayTest, InitialSizeIsZero) {TEST_F183,6544
TEST_F(TestPartResultArrayTest, ContainsGivenResultAfterAppend) {TEST_F190,6764
TEST_F(TestPartResultArrayTest, ContainsGivenResultsAfterTwoAppends) {TEST_F199,7091
typedef TestPartResultArrayTest TestPartResultArrayDeathTest;TestPartResultArrayDeathTest208,7412
TEST_F(TestPartResultArrayDeathTest, DiesWhenIndexIsOutOfBound) {TEST_F212,7567

build/_deps/googletest-src/googletest/test/googletest-uninitialized-test.py,405
COMMAND = gtest_test_utils.GetTestExecutablePath('googletest-uninitialized-test_')COMMAND36,1678
def Assert(condition):Assert39,1763
def AssertEq(expected, actual):AssertEq44,1833
def TestExitCodeAndOutput(command):TestExitCodeAndOutput51,1995
class GTestUninitializedTest(gtest_test_utils.TestCase):GTestUninitializedTest61,2313
  def testExitCodeAndOutput(self):testExitCodeAndOutput62,2370

build/_deps/googletest-src/googletest/test/googletest-shuffle-test_.cc,998
namespace {__anonbdd1d831011134,1623
class A : public Test {};A47,1973
TEST_F(A, A) {}TEST_F48,1999
TEST_F(A, B) {}TEST_F49,2015
TEST(ADeathTest, A) {}TEST51,2032
TEST(ADeathTest, B) {}TEST52,2055
TEST(ADeathTest, C) {}TEST53,2078
TEST(B, A) {}TEST55,2102
TEST(B, B) {}TEST56,2116
TEST(B, C) {}TEST57,2130
TEST(B, DISABLED_D) {}TEST58,2144
TEST(B, DISABLED_E) {}TEST59,2167
TEST(BDeathTest, A) {}TEST61,2191
TEST(BDeathTest, B) {}TEST62,2214
TEST(C, A) {}TEST64,2238
TEST(C, B) {}TEST65,2252
TEST(C, C) {}TEST66,2266
TEST(C, DISABLED_D) {}TEST67,2280
TEST(CDeathTest, A) {}TEST69,2304
TEST(DISABLED_D, A) {}TEST71,2328
TEST(DISABLED_D, DISABLED_B) {}TEST72,2351
class TestNamePrinter : public EmptyTestEventListener {TestNamePrinter76,2487
  void OnTestIterationStart(const UnitTest& /* unit_test */,OnTestIterationStart78,2552
  void OnTestStart(const TestInfo& test_info) override {OnTestStart83,2700
int main(int argc, char** argv) {main90,2852

build/_deps/googletest-src/googletest/test/gtest_main_unittest.cc,90
namespace {__anon5fedbe78011135,1677
TEST(GTestMainTest, ShouldSucceed) {}TEST37,1690

build/_deps/googletest-src/googletest/test/googletest-death-test_ex_test.cc,419
TEST(CxxExceptionDeathTest, ExceptionIsFailure) {TEST50,2011
class TestException : public std::exception {TestException60,2365
  const char* what() const noexcept override { return "exceptional message"; }what62,2420
TEST(CxxExceptionDeathTest, PrintsMessageForStdExceptions) {TEST65,2503
TEST(SehExceptionDeasTest, CatchExceptionsDoesNotInterfere) {TEST78,3119
int main(int argc, char** argv) {main87,3381

build/_deps/googletest-src/googletest/test/gtest_all_test.cc,0

build/_deps/googletest-src/googletest/test/gtest_environment_test.cc,1367
namespace {__anon9b1ab0a8011139,1704
enum FailureType { NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE };FailureType41,1717
enum FailureType { NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE };NO_FAILURE41,1717
enum FailureType { NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE };NON_FATAL_FAILURE41,1717
enum FailureType { NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE };FATAL_FAILURE41,1717
class MyEnvironment : public testing::Environment {MyEnvironment44,1832
  MyEnvironment() { Reset(); }MyEnvironment46,1893
  void SetUp() override {SetUp51,2067
  void TearDown() override {TearDown67,2454
  void Reset() {Reset73,2655
  void set_failure_in_set_up(FailureType type) { failure_in_set_up_ = type; }set_failure_in_set_up81,2859
  bool set_up_was_run() const { return set_up_was_run_; }set_up_was_run84,2960
  bool tear_down_was_run() const { return tear_down_was_run_; }tear_down_was_run87,3044
  FailureType failure_in_set_up_;failure_in_set_up_90,3119
  bool set_up_was_run_;set_up_was_run_91,3153
  bool tear_down_was_run_;tear_down_was_run_92,3177
bool test_was_run;test_was_run96,3229
TEST(FooTest, Bar) { test_was_run = true; }TEST100,3330
void Check(bool condition, const char* msg) {Check103,3443
int RunAllTests(MyEnvironment* env, FailureType failure) {RunAllTests114,3757
int main(int argc, char** argv) {main124,4005

build/_deps/googletest-src/googletest/test/gtest_skip_environment_check_output_test.py,314
EXE_PATH = gtest_test_utils.GetTestExecutablePath(EXE_PATH39,1809
OUTPUT = gtest_test_utils.Subprocess([EXE_PATH]).outputOUTPUT42,1905
class SkipEntireEnvironmentTest(gtest_test_utils.TestCase):SkipEntireEnvironmentTest46,1971
  def testSkipEntireEnvironmentTest(self):testSkipEntireEnvironmentTest48,2032

build/_deps/googletest-src/googletest/test/googletest-failfast-unittest.py,2358
BAZEL_FAIL_FAST_ENV_VAR = 'TESTBRIDGE_TEST_RUNNER_FAIL_FAST'BAZEL_FAIL_FAST_ENV_VAR49,2185
FAIL_FAST_ENV_VAR = 'GTEST_FAIL_FAST'FAIL_FAST_ENV_VAR52,2300
FAIL_FAST_FLAG = 'gtest_fail_fast'FAIL_FAST_FLAG55,2389
RUN_DISABLED_FLAG = 'gtest_also_run_disabled_tests'RUN_DISABLED_FLAG58,2472
FILTER_FLAG = 'gtest_filter'FILTER_FLAG61,2574
COMMAND = gtest_test_utils.GetTestExecutablePath(COMMAND64,2664
LIST_TESTS_FLAG = '--gtest_list_tests'LIST_TESTS_FLAG69,2839
SUPPORTS_DEATH_TESTS = 'HasDeathTest' in gtest_test_utils.Subprocess(SUPPORTS_DEATH_TESTS72,2933
environ = os.environ.copy()environ77,3057
def SetEnvVar(env_var, value):SetEnvVar80,3087
def RunAndReturnOutput(test_suite=None, fail_fast=None, run_disabled=False):RunAndReturnOutput89,3300
class GTestFailFastUnitTest(gtest_test_utils.TestCase):GTestFailFastUnitTest113,4132
  def testDefaultBehavior(self):testDefaultBehavior116,4260
  def testGoogletestFlag(self):testGoogletestFlag122,4432
  def testGoogletestEnvVar(self):testGoogletestEnvVar131,4788
  def testBazelEnvVar(self):testBazelEnvVar147,5324
  def testFlagOverridesEnvVar(self):testFlagOverridesEnvVar163,5871
  def testGoogletestEnvVarOverridesBazelEnvVar(self):testGoogletestEnvVarOverridesBazelEnvVar174,6210
  def testEventListener(self):testEventListener187,6678
  def assertXmlResultCount(self, result, count, xml):assertXmlResultCount214,8003
  def assertXmlStatusCount(self, status, count, xml):assertXmlStatusCount220,8220
  def assertFailFastXmlAndTxtOutput(self,assertFailFastXmlAndTxtOutput226,8437
  def assertFailFastBehavior(self,assertFailFastBehavior250,9625
  def assertNotFailFastBehavior(self,assertNotFailFastBehavior264,10239
  def testFlag_HasFixtureTest(self):testFlag_HasFixtureTest278,10878
  def testFlag_HasSimpleTest(self):testFlag_HasSimpleTest293,11317
  def testFlag_HasParametersTest(self):testFlag_HasParametersTest308,11751
  def testFlag_HasDisabledTest(self):testFlag_HasDisabledTest323,12237
  def testFlag_HasDisabledRunDisabledTest(self):testFlag_HasDisabledRunDisabledTest340,12748
  def testFlag_HasDisabledSuiteTest(self):testFlag_HasDisabledSuiteTest357,13276
  def testFlag_HasDisabledSuiteRunDisabledTest(self):testFlag_HasDisabledSuiteRunDisabledTest374,13813
    def testFlag_HasDeathTest(self):testFlag_HasDeathTest393,14395

build/_deps/googletest-src/googletest/test/gtest_skip_test.cc,265
TEST(SkipTest, DoesSkip) {TEST37,1665
class Fixture : public Test {Fixture42,1756
  void SetUp() override {SetUp44,1798
TEST_F(Fixture, SkipsOneTest) { EXPECT_EQ(5, 7); }TEST_F49,1891
TEST_F(Fixture, SkipsAnotherTest) { EXPECT_EQ(99, 100); }TEST_F51,1943

build/_deps/googletest-src/googletest/test/googletest-filepath-test.cc,5360
namespace testing {testing48,2081
namespace internal {internal49,2101
namespace {__anon7d506912011150,2122
int remove(const char* path) {remove55,2214
int _rmdir(const char* path) {_rmdir62,2414
TEST(IsEmptyTest, ReturnsTrueForEmptyPath) {TEST97,3240
TEST(IsEmptyTest, ReturnsFalseForNonEmptyPath) {TEST101,3327
TEST(RemoveDirectoryNameTest, WhenEmptyName) {TEST109,3582
TEST(RemoveDirectoryNameTest, ButNoDirectory) {TEST114,3736
TEST(RemoveDirectoryNameTest, RootFileShouldGiveFileName) {TEST119,3902
TEST(RemoveDirectoryNameTest, WhereThereIsNoFileName) {TEST125,4102
TEST(RemoveDirectoryNameTest, ShouldGiveFileName) {TEST131,4302
TEST(RemoveDirectoryNameTest, ShouldAlsoGiveFileName) {TEST138,4519
TEST(RemoveDirectoryNameTest, RootFileShouldGiveFileNameForAlternateSeparator) {TEST151,4904
TEST(RemoveDirectoryNameTest, WhereThereIsNoFileNameForAlternateSeparator) {TEST156,5099
TEST(RemoveDirectoryNameTest, ShouldGiveFileNameForAlternateSeparator) {TEST161,5294
TEST(RemoveDirectoryNameTest, ShouldAlsoGiveFileNameForAlternateSeparator) {TEST166,5502
TEST(RemoveFileNameTest, EmptyName) {TEST174,5715
TEST(RemoveFileNameTest, ButNoFile) {TEST184,6040
TEST(RemoveFileNameTest, GivesDirName) {TEST190,6232
TEST(RemoveFileNameTest, GivesDirAndSubDirName) {TEST196,6449
TEST(RemoveFileNameTest, GivesRootDir) {TEST204,6737
TEST(RemoveFileNameTest, ButNoFileForAlternateSeparator) {TEST215,7033
TEST(RemoveFileNameTest, GivesDirNameForAlternateSeparator) {TEST221,7232
TEST(RemoveFileNameTest, GivesDirAndSubDirNameForAlternateSeparator) {TEST227,7453
TEST(RemoveFileNameTest, GivesRootDirForAlternateSeparator) {TEST233,7693
TEST(MakeFileNameTest, GenerateWhenNumberIsZero) {TEST239,7842
TEST(MakeFileNameTest, GenerateFileNameNumberGtZero) {TEST245,8053
TEST(MakeFileNameTest, GenerateFileNameWithSlashNumberIsZero) {TEST251,8272
TEST(MakeFileNameTest, GenerateFileNameWithSlashNumberGtZero) {TEST257,8549
TEST(MakeFileNameTest, GenerateWhenNumberIsZeroAndDirIsEmpty) {TEST263,8830
TEST(MakeFileNameTest, GenerateWhenNumberIsNotZeroAndDirIsEmpty) {TEST269,9029
TEST(ConcatPathsTest, WorksWhenDirDoesNotEndWithPathSep) {TEST275,9235
TEST(ConcatPathsTest, WorksWhenPath1EndsWithPathSep) {TEST280,9441
TEST(ConcatPathsTest, Path1BeingEmpty) {TEST286,9701
TEST(ConcatPathsTest, Path2BeingEmpty) {TEST291,9864
TEST(ConcatPathsTest, BothPathBeingEmpty) {TEST296,10035
TEST(ConcatPathsTest, Path1ContainsPathSep) {TEST301,10187
TEST(ConcatPathsTest, Path2ContainsPathSep) {TEST308,10484
TEST(ConcatPathsTest, Path2EndsWithPathSep) {TEST316,10783
TEST(RemoveTrailingPathSeparatorTest, EmptyString) {TEST323,11046
TEST(RemoveTrailingPathSeparatorTest, FileNoSlashString) {TEST328,11218
TEST(RemoveTrailingPathSeparatorTest, ShouldRemoveTrailingSeparator) {TEST333,11403
TEST(RemoveTrailingPathSeparatorTest, ShouldRemoveLastSeparator) {TEST343,11750
TEST(RemoveTrailingPathSeparatorTest, ShouldReturnUnmodified) {TEST351,12056
TEST(DirectoryTest, RootDirectoryExists) {TEST357,12335
TEST(DirectoryTest, RootOfWrongDriveDoesNotExists) {TEST371,12785
TEST(DirectoryTest, EmptyPathDirectoryDoesNotExist) {TEST390,13419
TEST(DirectoryTest, CurrentDirectoryExists) {TEST395,13560
TEST(NormalizeTest, MultipleConsecutiveSeparatorsInMidstring) {TEST410,14016
TEST(NormalizeTest, MultipleConsecutiveSeparatorsAtStringStart) {TEST422,14481
TEST(NormalizeTest, MultipleConsecutiveSeparatorsAtStringEnd) {TEST437,15045
TEST(NormalizeTest, MixAlternateSeparatorAtStringEnd) {TEST451,15588
TEST(AssignmentOperatorTest, DefaultAssignedToNonDefault) {TEST460,15892
TEST(AssignmentOperatorTest, NonDefaultAssignedToDefault) {TEST468,16162
TEST(AssignmentOperatorTest, ConstAssignedToNonConst) {TEST476,16440
class DirectoryCreationTest : public Test {DirectoryCreationTest483,16682
  void SetUp() override {SetUp485,16738
  void TearDown() override {TearDown502,17365
  void CreateTextFile(const char* filename) {CreateTextFile509,17547
  FilePath testdata_path_;  // "/tmp/directory_creation/test/"testdata_path_518,17892
  FilePath testdata_file_;  // "/tmp/directory_creation/test"testdata_file_519,17955
  FilePath unique_file0_;   // "/tmp/directory_creation/test/unique.txt"unique_file0_520,18017
  FilePath unique_file1_;   // "/tmp/directory_creation/test/unique_1.txt"unique_file1_521,18090
TEST_F(DirectoryCreationTest, CreateDirectoriesRecursively) {TEST_F524,18169
TEST_F(DirectoryCreationTest, CreateDirectoriesForAlreadyExistingPath) {TEST_F530,18422
TEST_F(DirectoryCreationTest, CreateDirectoriesAndUniqueFilename) {TEST_F537,18749
TEST_F(DirectoryCreationTest, CreateDirectoriesFail) {TEST_F556,19592
TEST(NoDirectoryCreationTest, CreateNoDirectoriesForDefaultXmlFile) {TEST564,19940
TEST(FilePathTest, DefaultConstructor) {TEST569,20130
TEST(FilePathTest, CharAndCopyConstructors) {TEST574,20219
TEST(FilePathTest, StringConstructor) {TEST582,20404
TEST(FilePathTest, Set) {TEST587,20525
TEST(FilePathTest, ToString) {TEST595,20764
TEST(FilePathTest, RemoveExtension) {TEST600,20867
TEST(FilePathTest, RemoveExtensionWhenThereIsNoExtension) {TEST606,21125
TEST(FilePathTest, IsDirectory) {TEST610,21257
TEST(FilePathTest, IsAbsolutePath) {TEST618,21490
TEST(FilePathTest, IsRootDirectory) {TEST638,22321

build/_deps/googletest-src/googletest/test/production.cc,58
PrivateCode::PrivateCode() : x_(0) {}PrivateCode35,1637

build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc,20335
struct Bool {Bool53,2405
  explicit Bool(int val) : value(val != 0) {}Bool54,2419
  bool operator>(int n) const { return value > Bool(n).value; }operator >56,2466
  Bool operator+(const Bool& rhs) const { return Bool(value + rhs.value); }operator +58,2531
  bool operator==(const Bool& rhs) const { return value == rhs.value; }operator ==60,2608
  bool value;value62,2681
std::ostream& operator<<(std::ostream& os, const Bool& x) {operator <<66,2741
bool PredFunction1(T1 v1) {PredFunction174,2973
bool PredFunction1Int(int v1) { return v1 > 0; }PredFunction1Int80,3166
bool PredFunction1Bool(Bool v1) { return v1 > 0; }PredFunction1Bool81,3215
struct PredFunctor1 {PredFunctor184,3297
  bool operator()(const T1& v1) {operator ()86,3344
testing::AssertionResult PredFormatFunction1(const char* e1, const T1& v1) {PredFormatFunction193,3469
struct PredFormatFunctor1 {PredFormatFunctor1101,3769
  testing::AssertionResult operator()(const char* e1, const T1& v1) const {operator ()103,3822
class Predicate1Test : public testing::Test {Predicate1Test110,3990
  void SetUp() override {SetUp112,4048
  void TearDown() override {TearDown118,4147
  static bool expected_to_finish_;expected_to_finish_134,4819
  static bool finished_;finished_137,4917
  static int n1_;n1_139,4943
bool Predicate1Test::expected_to_finish_;expected_to_finish_142,4965
bool Predicate1Test::finished_;finished_143,5007
int Predicate1Test::n1_;n1_144,5039
typedef Predicate1Test EXPECT_PRED_FORMAT1Test;EXPECT_PRED_FORMAT1Test146,5065
typedef Predicate1Test ASSERT_PRED_FORMAT1Test;ASSERT_PRED_FORMAT1Test147,5113
typedef Predicate1Test EXPECT_PRED1Test;EXPECT_PRED1Test148,5161
typedef Predicate1Test ASSERT_PRED1Test;ASSERT_PRED1Test149,5202
TEST_F(EXPECT_PRED1Test, FunctionOnBuiltInTypeSuccess) {TEST_F153,5352
TEST_F(EXPECT_PRED1Test, FunctionOnUserTypeSuccess) {TEST_F160,5586
TEST_F(EXPECT_PRED1Test, FunctorOnBuiltInTypeSuccess) {TEST_F167,5818
TEST_F(EXPECT_PRED1Test, FunctorOnUserTypeSuccess) {TEST_F174,6048
TEST_F(EXPECT_PRED1Test, FunctionOnBuiltInTypeFailure) {TEST_F181,6273
TEST_F(EXPECT_PRED1Test, FunctionOnUserTypeFailure) {TEST_F192,6581
TEST_F(EXPECT_PRED1Test, FunctorOnBuiltInTypeFailure) {TEST_F203,6887
TEST_F(EXPECT_PRED1Test, FunctorOnUserTypeFailure) {TEST_F214,7191
TEST_F(ASSERT_PRED1Test, FunctionOnBuiltInTypeSuccess) {TEST_F225,7498
TEST_F(ASSERT_PRED1Test, FunctionOnUserTypeSuccess) {TEST_F232,7732
TEST_F(ASSERT_PRED1Test, FunctorOnBuiltInTypeSuccess) {TEST_F239,7964
TEST_F(ASSERT_PRED1Test, FunctorOnUserTypeSuccess) {TEST_F246,8194
TEST_F(ASSERT_PRED1Test, FunctionOnBuiltInTypeFailure) {TEST_F253,8419
TEST_F(ASSERT_PRED1Test, FunctionOnUserTypeFailure) {TEST_F265,8755
TEST_F(ASSERT_PRED1Test, FunctorOnBuiltInTypeFailure) {TEST_F277,9089
TEST_F(ASSERT_PRED1Test, FunctorOnUserTypeFailure) {TEST_F289,9421
TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnBuiltInTypeSuccess) {TEST_F301,9763
TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnUserTypeSuccess) {TEST_F308,10021
TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnBuiltInTypeSuccess) {TEST_F315,10276
TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnUserTypeSuccess) {TEST_F322,10533
TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnBuiltInTypeFailure) {TEST_F329,10785
TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnUserTypeFailure) {TEST_F340,11117
TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnBuiltInTypeFailure) {TEST_F351,11446
TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnUserTypeFailure) {TEST_F362,11777
TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnBuiltInTypeSuccess) {TEST_F373,12111
TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnUserTypeSuccess) {TEST_F380,12369
TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnBuiltInTypeSuccess) {TEST_F387,12624
TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnUserTypeSuccess) {TEST_F394,12881
TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnBuiltInTypeFailure) {TEST_F401,13133
TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnUserTypeFailure) {TEST_F413,13493
TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnBuiltInTypeFailure) {TEST_F425,13850
TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnUserTypeFailure) {TEST_F437,14209
bool PredFunction2(T1 v1, T2 v2) {PredFunction2450,14594
bool PredFunction2Int(int v1, int v2) { return v1 + v2 > 0; }PredFunction2Int456,14799
bool PredFunction2Bool(Bool v1, Bool v2) { return v1 + v2 > 0; }PredFunction2Bool457,14861
struct PredFunctor2 {PredFunctor2460,14958
  bool operator()(const T1& v1, const T2& v2) {operator ()462,15018
testing::AssertionResult PredFormatFunction2(const char* e1, const char* e2,PredFormatFunction2469,15176
struct PredFormatFunctor2 {PredFormatFunctor2479,15585
  testing::AssertionResult operator()(const char* e1, const char* e2,operator ()481,15651
class Predicate2Test : public testing::Test {Predicate2Test489,15895
  void SetUp() override {SetUp491,15953
  void TearDown() override {TearDown497,16058
  static bool expected_to_finish_;expected_to_finish_515,16851
  static bool finished_;finished_518,16949
  static int n1_;n1_520,16975
  static int n2_;n2_521,16993
bool Predicate2Test::expected_to_finish_;expected_to_finish_524,17015
bool Predicate2Test::finished_;finished_525,17057
int Predicate2Test::n1_;n1_526,17089
int Predicate2Test::n2_;n2_527,17114
typedef Predicate2Test EXPECT_PRED_FORMAT2Test;EXPECT_PRED_FORMAT2Test529,17140
typedef Predicate2Test ASSERT_PRED_FORMAT2Test;ASSERT_PRED_FORMAT2Test530,17188
typedef Predicate2Test EXPECT_PRED2Test;EXPECT_PRED2Test531,17236
typedef Predicate2Test ASSERT_PRED2Test;ASSERT_PRED2Test532,17277
TEST_F(EXPECT_PRED2Test, FunctionOnBuiltInTypeSuccess) {TEST_F536,17427
TEST_F(EXPECT_PRED2Test, FunctionOnUserTypeSuccess) {TEST_F543,17668
TEST_F(EXPECT_PRED2Test, FunctorOnBuiltInTypeSuccess) {TEST_F550,17913
TEST_F(EXPECT_PRED2Test, FunctorOnUserTypeSuccess) {TEST_F557,18150
TEST_F(EXPECT_PRED2Test, FunctionOnBuiltInTypeFailure) {TEST_F564,18388
TEST_F(EXPECT_PRED2Test, FunctionOnUserTypeFailure) {TEST_F575,18703
TEST_F(EXPECT_PRED2Test, FunctorOnBuiltInTypeFailure) {TEST_F586,19022
TEST_F(EXPECT_PRED2Test, FunctorOnUserTypeFailure) {TEST_F597,19333
TEST_F(ASSERT_PRED2Test, FunctionOnBuiltInTypeSuccess) {TEST_F608,19653
TEST_F(ASSERT_PRED2Test, FunctionOnUserTypeSuccess) {TEST_F615,19894
TEST_F(ASSERT_PRED2Test, FunctorOnBuiltInTypeSuccess) {TEST_F622,20139
TEST_F(ASSERT_PRED2Test, FunctorOnUserTypeSuccess) {TEST_F629,20376
TEST_F(ASSERT_PRED2Test, FunctionOnBuiltInTypeFailure) {TEST_F636,20614
TEST_F(ASSERT_PRED2Test, FunctionOnUserTypeFailure) {TEST_F648,20957
TEST_F(ASSERT_PRED2Test, FunctorOnBuiltInTypeFailure) {TEST_F660,21304
TEST_F(ASSERT_PRED2Test, FunctorOnUserTypeFailure) {TEST_F672,21643
TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnBuiltInTypeSuccess) {TEST_F684,21998
TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnUserTypeSuccess) {TEST_F691,22263
TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnBuiltInTypeSuccess) {TEST_F698,22531
TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnUserTypeSuccess) {TEST_F705,22795
TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnBuiltInTypeFailure) {TEST_F712,23060
TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnUserTypeFailure) {TEST_F723,23399
TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnBuiltInTypeFailure) {TEST_F734,23741
TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnUserTypeFailure) {TEST_F745,24079
TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnBuiltInTypeSuccess) {TEST_F756,24426
TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnUserTypeSuccess) {TEST_F763,24691
TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnBuiltInTypeSuccess) {TEST_F770,24959
TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnUserTypeSuccess) {TEST_F777,25223
TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnBuiltInTypeFailure) {TEST_F784,25488
TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnUserTypeFailure) {TEST_F796,25855
TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnBuiltInTypeFailure) {TEST_F808,26225
TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnUserTypeFailure) {TEST_F820,26591
bool PredFunction3(T1 v1, T2 v2, T3 v3) {PredFunction3833,27004
bool PredFunction3Int(int v1, int v2, int v3) { return v1 + v2 + v3 > 0; }PredFunction3Int839,27221
bool PredFunction3Bool(Bool v1, Bool v2, Bool v3) { return v1 + v2 + v3 > 0; }PredFunction3Bool840,27296
struct PredFunctor3 {PredFunctor3843,27408
  bool operator()(const T1& v1, const T2& v2, const T3& v3) {operator ()845,27481
testing::AssertionResult PredFormatFunction3(const char* e1, const char* e2,PredFormatFunction3852,27672
struct PredFormatFunctor3 {PredFormatFunctor3864,28190
  testing::AssertionResult operator()(const char* e1, const char* e2,operator ()866,28269
class Predicate3Test : public testing::Test {Predicate3Test875,28589
  void SetUp() override {SetUp877,28647
  void TearDown() override {TearDown883,28758
  static bool expected_to_finish_;expected_to_finish_903,29672
  static bool finished_;finished_906,29770
  static int n1_;n1_908,29796
  static int n2_;n2_909,29814
  static int n3_;n3_910,29832
bool Predicate3Test::expected_to_finish_;expected_to_finish_913,29854
bool Predicate3Test::finished_;finished_914,29896
int Predicate3Test::n1_;n1_915,29928
int Predicate3Test::n2_;n2_916,29953
int Predicate3Test::n3_;n3_917,29978
typedef Predicate3Test EXPECT_PRED_FORMAT3Test;EXPECT_PRED_FORMAT3Test919,30004
typedef Predicate3Test ASSERT_PRED_FORMAT3Test;ASSERT_PRED_FORMAT3Test920,30052
typedef Predicate3Test EXPECT_PRED3Test;EXPECT_PRED3Test921,30100
typedef Predicate3Test ASSERT_PRED3Test;ASSERT_PRED3Test922,30141
TEST_F(EXPECT_PRED3Test, FunctionOnBuiltInTypeSuccess) {TEST_F926,30291
TEST_F(EXPECT_PRED3Test, FunctionOnUserTypeSuccess) {TEST_F933,30539
TEST_F(EXPECT_PRED3Test, FunctorOnBuiltInTypeSuccess) {TEST_F940,30797
TEST_F(EXPECT_PRED3Test, FunctorOnUserTypeSuccess) {TEST_F947,31041
TEST_F(EXPECT_PRED3Test, FunctionOnBuiltInTypeFailure) {TEST_F954,31292
TEST_F(EXPECT_PRED3Test, FunctionOnUserTypeFailure) {TEST_F965,31614
TEST_F(EXPECT_PRED3Test, FunctorOnBuiltInTypeFailure) {TEST_F976,31946
TEST_F(EXPECT_PRED3Test, FunctorOnUserTypeFailure) {TEST_F987,32264
TEST_F(ASSERT_PRED3Test, FunctionOnBuiltInTypeSuccess) {TEST_F998,32597
TEST_F(ASSERT_PRED3Test, FunctionOnUserTypeSuccess) {TEST_F1005,32845
TEST_F(ASSERT_PRED3Test, FunctorOnBuiltInTypeSuccess) {TEST_F1012,33103
TEST_F(ASSERT_PRED3Test, FunctorOnUserTypeSuccess) {TEST_F1019,33347
TEST_F(ASSERT_PRED3Test, FunctionOnBuiltInTypeFailure) {TEST_F1026,33598
TEST_F(ASSERT_PRED3Test, FunctionOnUserTypeFailure) {TEST_F1038,33948
TEST_F(ASSERT_PRED3Test, FunctorOnBuiltInTypeFailure) {TEST_F1050,34308
TEST_F(ASSERT_PRED3Test, FunctorOnUserTypeFailure) {TEST_F1062,34654
TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnBuiltInTypeSuccess) {TEST_F1074,35022
TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnUserTypeSuccess) {TEST_F1081,35294
TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnBuiltInTypeSuccess) {TEST_F1089,35597
TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnUserTypeSuccess) {TEST_F1096,35868
TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnBuiltInTypeFailure) {TEST_F1104,36168
TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnUserTypeFailure) {TEST_F1115,36514
TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnBuiltInTypeFailure) {TEST_F1127,36897
TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnUserTypeFailure) {TEST_F1138,37242
TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnBuiltInTypeSuccess) {TEST_F1150,37630
TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnUserTypeSuccess) {TEST_F1157,37902
TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnBuiltInTypeSuccess) {TEST_F1165,38205
TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnUserTypeSuccess) {TEST_F1172,38476
TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnBuiltInTypeFailure) {TEST_F1180,38776
TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnUserTypeFailure) {TEST_F1192,39150
TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnBuiltInTypeFailure) {TEST_F1205,39561
TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnUserTypeFailure) {TEST_F1217,39934
bool PredFunction4(T1 v1, T2 v2, T3 v3, T4 v4) {PredFunction41231,40397
bool PredFunction4Int(int v1, int v2, int v3, int v4) {PredFunction4Int1237,40626
bool PredFunction4Bool(Bool v1, Bool v2, Bool v3, Bool v4) {PredFunction4Bool1240,40716
struct PredFunctor4 {PredFunctor41245,40842
  bool operator()(const T1& v1, const T2& v2, const T3& v3, const T4& v4) {operator ()1247,40928
testing::AssertionResult PredFormatFunction4(const char* e1, const char* e2,PredFormatFunction41254,41149
struct PredFormatFunctor4 {PredFormatFunctor41267,41764
  testing::AssertionResult operator()(const char* e1, const char* e2,operator ()1269,41856
class Predicate4Test : public testing::Test {Predicate4Test1279,42252
  void SetUp() override {SetUp1281,42310
  void TearDown() override {TearDown1287,42427
  static bool expected_to_finish_;expected_to_finish_1309,43462
  static bool finished_;finished_1312,43560
  static int n1_;n1_1314,43586
  static int n2_;n2_1315,43604
  static int n3_;n3_1316,43622
  static int n4_;n4_1317,43640
bool Predicate4Test::expected_to_finish_;expected_to_finish_1320,43662
bool Predicate4Test::finished_;finished_1321,43704
int Predicate4Test::n1_;n1_1322,43736
int Predicate4Test::n2_;n2_1323,43761
int Predicate4Test::n3_;n3_1324,43786
int Predicate4Test::n4_;n4_1325,43811
typedef Predicate4Test EXPECT_PRED_FORMAT4Test;EXPECT_PRED_FORMAT4Test1327,43837
typedef Predicate4Test ASSERT_PRED_FORMAT4Test;ASSERT_PRED_FORMAT4Test1328,43885
typedef Predicate4Test EXPECT_PRED4Test;EXPECT_PRED4Test1329,43933
typedef Predicate4Test ASSERT_PRED4Test;ASSERT_PRED4Test1330,43974
TEST_F(EXPECT_PRED4Test, FunctionOnBuiltInTypeSuccess) {TEST_F1334,44124
TEST_F(EXPECT_PRED4Test, FunctionOnUserTypeSuccess) {TEST_F1341,44379
TEST_F(EXPECT_PRED4Test, FunctorOnBuiltInTypeSuccess) {TEST_F1349,44665
TEST_F(EXPECT_PRED4Test, FunctorOnUserTypeSuccess) {TEST_F1356,44916
TEST_F(EXPECT_PRED4Test, FunctionOnBuiltInTypeFailure) {TEST_F1364,45195
TEST_F(EXPECT_PRED4Test, FunctionOnUserTypeFailure) {TEST_F1375,45524
TEST_F(EXPECT_PRED4Test, FunctorOnBuiltInTypeFailure) {TEST_F1387,45890
TEST_F(EXPECT_PRED4Test, FunctorOnUserTypeFailure) {TEST_F1398,46215
TEST_F(ASSERT_PRED4Test, FunctionOnBuiltInTypeSuccess) {TEST_F1410,46582
TEST_F(ASSERT_PRED4Test, FunctionOnUserTypeSuccess) {TEST_F1417,46837
TEST_F(ASSERT_PRED4Test, FunctorOnBuiltInTypeSuccess) {TEST_F1425,47123
TEST_F(ASSERT_PRED4Test, FunctorOnUserTypeSuccess) {TEST_F1432,47374
TEST_F(ASSERT_PRED4Test, FunctionOnBuiltInTypeFailure) {TEST_F1440,47653
TEST_F(ASSERT_PRED4Test, FunctionOnUserTypeFailure) {TEST_F1452,48010
TEST_F(ASSERT_PRED4Test, FunctorOnBuiltInTypeFailure) {TEST_F1465,48404
TEST_F(ASSERT_PRED4Test, FunctorOnUserTypeFailure) {TEST_F1477,48757
TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnBuiltInTypeSuccess) {TEST_F1490,49159
TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnUserTypeSuccess) {TEST_F1497,49438
TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnBuiltInTypeSuccess) {TEST_F1505,49754
TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnUserTypeSuccess) {TEST_F1512,50032
TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnBuiltInTypeFailure) {TEST_F1520,50345
TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnUserTypeFailure) {TEST_F1531,50698
TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnBuiltInTypeFailure) {TEST_F1543,51094
TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnUserTypeFailure) {TEST_F1554,51446
TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnBuiltInTypeSuccess) {TEST_F1566,51847
TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnUserTypeSuccess) {TEST_F1573,52126
TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnBuiltInTypeSuccess) {TEST_F1581,52442
TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnUserTypeSuccess) {TEST_F1588,52720
TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnBuiltInTypeFailure) {TEST_F1596,53033
TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnUserTypeFailure) {TEST_F1608,53414
TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnBuiltInTypeFailure) {TEST_F1621,53838
TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnUserTypeFailure) {TEST_F1633,54218
bool PredFunction5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) {PredFunction51647,54707
bool PredFunction5Int(int v1, int v2, int v3, int v4, int v5) {PredFunction5Int1653,54948
bool PredFunction5Bool(Bool v1, Bool v2, Bool v3, Bool v4, Bool v5) {PredFunction5Bool1656,55051
struct PredFunctor5 {PredFunctor51661,55191
  bool operator()(const T1& v1, const T2& v2, const T3& v3, const T4& v4,operator ()1663,55290
testing::AssertionResult PredFormatFunction5(const char* e1, const char* e2,PredFormatFunction51671,55561
struct PredFormatFunctor5 {PredFormatFunctor51685,56275
  testing::AssertionResult operator()(const char* e1, const char* e2,operator ()1687,56380
class Predicate5Test : public testing::Test {Predicate5Test1698,56852
  void SetUp() override {SetUp1700,56910
  void TearDown() override {TearDown1706,57033
  static bool expected_to_finish_;expected_to_finish_1730,58189
  static bool finished_;finished_1733,58287
  static int n1_;n1_1735,58313
  static int n2_;n2_1736,58331
  static int n3_;n3_1737,58349
  static int n4_;n4_1738,58367
  static int n5_;n5_1739,58385
bool Predicate5Test::expected_to_finish_;expected_to_finish_1742,58407
bool Predicate5Test::finished_;finished_1743,58449
int Predicate5Test::n1_;n1_1744,58481
int Predicate5Test::n2_;n2_1745,58506
int Predicate5Test::n3_;n3_1746,58531
int Predicate5Test::n4_;n4_1747,58556
int Predicate5Test::n5_;n5_1748,58581
typedef Predicate5Test EXPECT_PRED_FORMAT5Test;EXPECT_PRED_FORMAT5Test1750,58607
typedef Predicate5Test ASSERT_PRED_FORMAT5Test;ASSERT_PRED_FORMAT5Test1751,58655
typedef Predicate5Test EXPECT_PRED5Test;EXPECT_PRED5Test1752,58703
typedef Predicate5Test ASSERT_PRED5Test;ASSERT_PRED5Test1753,58744
TEST_F(EXPECT_PRED5Test, FunctionOnBuiltInTypeSuccess) {TEST_F1757,58894
TEST_F(EXPECT_PRED5Test, FunctionOnUserTypeSuccess) {TEST_F1764,59156
TEST_F(EXPECT_PRED5Test, FunctorOnBuiltInTypeSuccess) {TEST_F1772,59455
TEST_F(EXPECT_PRED5Test, FunctorOnUserTypeSuccess) {TEST_F1779,59713
TEST_F(EXPECT_PRED5Test, FunctionOnBuiltInTypeFailure) {TEST_F1787,60005
TEST_F(EXPECT_PRED5Test, FunctionOnUserTypeFailure) {TEST_F1798,60341
TEST_F(EXPECT_PRED5Test, FunctorOnBuiltInTypeFailure) {TEST_F1810,60720
TEST_F(EXPECT_PRED5Test, FunctorOnUserTypeFailure) {TEST_F1821,61052
TEST_F(ASSERT_PRED5Test, FunctionOnBuiltInTypeSuccess) {TEST_F1833,61432
TEST_F(ASSERT_PRED5Test, FunctionOnUserTypeSuccess) {TEST_F1840,61694
TEST_F(ASSERT_PRED5Test, FunctorOnBuiltInTypeSuccess) {TEST_F1848,61993
TEST_F(ASSERT_PRED5Test, FunctorOnUserTypeSuccess) {TEST_F1855,62251
TEST_F(ASSERT_PRED5Test, FunctionOnBuiltInTypeFailure) {TEST_F1863,62543
TEST_F(ASSERT_PRED5Test, FunctionOnUserTypeFailure) {TEST_F1875,62907
TEST_F(ASSERT_PRED5Test, FunctorOnBuiltInTypeFailure) {TEST_F1888,63314
TEST_F(ASSERT_PRED5Test, FunctorOnUserTypeFailure) {TEST_F1900,63674
TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnBuiltInTypeSuccess) {TEST_F1913,64089
TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnUserTypeSuccess) {TEST_F1920,64375
TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnBuiltInTypeSuccess) {TEST_F1928,64704
TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnUserTypeSuccess) {TEST_F1935,64989
TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnBuiltInTypeFailure) {TEST_F1943,65315
TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnUserTypeFailure) {TEST_F1955,65703
TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnBuiltInTypeFailure) {TEST_F1967,66112
TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnUserTypeFailure) {TEST_F1979,66499
TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnBuiltInTypeSuccess) {TEST_F1991,66913
TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnUserTypeSuccess) {TEST_F1998,67199
TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnBuiltInTypeSuccess) {TEST_F2006,67528
TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnUserTypeSuccess) {TEST_F2013,67813
TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnBuiltInTypeFailure) {TEST_F2021,68139
TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnUserTypeFailure) {TEST_F2034,68555
TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnBuiltInTypeFailure) {TEST_F2047,68992
TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnUserTypeFailure) {TEST_F2060,69407

build/_deps/googletest-src/googletest/test/googletest-death-test-test.cc,11657
namespace testing {testing75,2613
namespace internal {internal76,2633
class ReplaceDeathTestFactory {ReplaceDeathTestFactory80,2774
  explicit ReplaceDeathTestFactory(DeathTestFactory* new_factory)ReplaceDeathTestFactory82,2815
  ~ReplaceDeathTestFactory() {~ReplaceDeathTestFactory88,3059
  UnitTestImpl* unit_test_impl_;unit_test_impl_98,3384
  DeathTestFactory* old_factory_;old_factory_99,3417
namespace {__anon085f2df80111105,3505
void DieWithMessage(const ::std::string& message) {DieWithMessage107,3518
void DieInside(const ::std::string& function) {DieInside122,4153
class TestForDeathTest : public testing::Test {TestForDeathTest128,4291
  TestForDeathTest() : original_dir_(FilePath::GetCurrentDir()) {}TestForDeathTest130,4351
  ~TestForDeathTest() override { posix::ChDir(original_dir_.c_str()); }~TestForDeathTest132,4419
  static void StaticMemberFunction() { DieInside("StaticMemberFunction"); }StaticMemberFunction135,4546
  void MemberFunction() {MemberFunction138,4671
  bool should_die_;should_die_143,4806
  const FilePath original_dir_;original_dir_144,4826
class MayDie {MayDie148,4910
  explicit MayDie(bool should_die) : should_die_(should_die) {}MayDie150,4934
  void MemberFunction() const {MemberFunction153,5036
  bool should_die_;should_die_159,5195
void GlobalFunction() { DieInside("GlobalFunction"); }GlobalFunction163,5264
int NonVoidFunction() {NonVoidFunction166,5367
void DieIf(bool should_die) {DieIf172,5472
bool DieIfLessThan(int x, int y) {DieIfLessThan177,5578
void DeathTestSubroutine() {DeathTestSubroutine185,5762
int DieInDebugElse12(int* sideeffect) {DieInDebugElse12191,5938
int DieInCRTDebugElse12(int* sideeffect) {DieInCRTDebugElse12206,6185
TEST(ExitStatusPredicateTest, ExitedWithCode) {TEST226,6648
static int NormalExitStatus(int exit_code) {NormalExitStatus241,7244
static int KilledExitStatus(int signum) {KilledExitStatus256,7726
TEST(ExitStatusPredicateTest, ExitedWithCode) {TEST268,7964
TEST(ExitStatusPredicateTest, KilledBySignal) {TEST284,8509
TEST_F(TestForDeathTest, SingleStatement) {TEST_F307,9417
void DieWithEmbeddedNul() {DieWithEmbeddedNul332,9999
TEST_F(TestForDeathTest, EmbeddedNulInMessage) {TEST_F340,10214
TEST_F(TestForDeathTest, SwitchStatement) {TEST_F349,10499
TEST_F(TestForDeathTest, StaticMemberFunctionFastStyle) {TEST_F367,11014
TEST_F(TestForDeathTest, MemberFunctionFastStyle) {TEST_F374,11270
void ChangeToRootDir() { posix::ChDir(GTEST_PATH_SEP_); }ChangeToRootDir380,11451
TEST_F(TestForDeathTest, FastDeathTestInChangedDir) {TEST_F384,11592
void SigprofAction(int, siginfo_t*, void*) { /* no op */SigprofAction395,11843
void SetSigprofActionAndTimer() {SetSigprofActionAndTimer399,11965
void DisableSigprofActionAndTimer(struct sigaction* old_signal_action) {DisableSigprofActionAndTimer416,12686
TEST_F(TestForDeathTest, FastSigprofActionSet) {TEST_F430,13253
TEST_F(TestForDeathTest, ThreadSafeSigprofActionSet) {TEST_F439,13563
TEST_F(TestForDeathTest, StaticMemberFunctionThreadsafeStyle) {TEST_F451,13989
TEST_F(TestForDeathTest, MemberFunctionThreadsafeStyle) {TEST_F456,14169
TEST_F(TestForDeathTest, ThreadsafeDeathTestInLoop) {TEST_F462,14362
TEST_F(TestForDeathTest, ThreadsafeDeathTestInChangedDir) {TEST_F469,14576
TEST_F(TestForDeathTest, MixedStyles) {TEST_F479,14820
bool pthread_flag;pthread_flag488,15059
void SetPthreadFlag() { pthread_flag = true; }SetPthreadFlag490,15079
TEST_F(TestForDeathTest, DoesNotExecuteAtforkHooks) {TEST_F492,15127
TEST_F(TestForDeathTest, MethodOfAnotherClass) {TEST_F505,15563
TEST_F(TestForDeathTest, GlobalFunction) {TEST_F511,15766
TEST_F(TestForDeathTest, AcceptsAnythingConvertibleToRE) {TEST_F517,15956
TEST_F(TestForDeathTest, NonVoidFunction) {TEST_F537,16634
TEST_F(TestForDeathTest, FunctionWithParameter) {TEST_F542,16811
TEST_F(TestForDeathTest, OutsideFixture) { DeathTestSubroutine(); }TEST_F548,17042
TEST_F(TestForDeathTest, InsideLoop) {TEST_F551,17164
TEST_F(TestForDeathTest, CompoundStatement) {TEST_F558,17385
TEST_F(TestForDeathTest, DoesNotDie) {TEST_F569,17650
TEST_F(TestForDeathTest, ErrorMessageMismatch) {TEST_F574,17845
void ExpectDeathTestHelper(bool* aborted) {ExpectDeathTestHelper585,18194
TEST_F(TestForDeathTest, EXPECT_DEATH) {TEST_F592,18413
TEST_F(TestForDeathTest, ASSERT_DEATH) {TEST_F599,18641
TEST_F(TestForDeathTest, SingleEvaluation) {TEST_F612,18999
TEST_F(TestForDeathTest, RunawayIsFailure) {TEST_F623,19313
TEST_F(TestForDeathTest, ReturnIsFailure) {TEST_F630,19559
TEST_F(TestForDeathTest, TestExpectDebugDeath) {TEST_F642,19959
TEST_F(TestForDeathTest, CRTDebugDeath) {TEST_F675,21042
TEST_F(TestForDeathTest, TestAssertDebugDeath) {TEST_F690,21490
void ExpectDebugDeathHelper(bool* aborted) {ExpectDebugDeathHelper711,21933
TEST(PopUpDeathTest, DoesNotShowPopUpOnAbort) {TEST718,22106
TEST_F(TestForDeathTest, ExpectDebugDeathDoesNotAbort) {TEST_F735,22495
void AssertDebugDeathHelper(bool* aborted) {AssertDebugDeathHelper741,22668
TEST_F(TestForDeathTest, AssertDebugDeathAborts) {TEST_F752,23054
TEST_F(TestForDeathTest, AssertDebugDeathAborts2) {TEST_F759,23236
TEST_F(TestForDeathTest, AssertDebugDeathAborts3) {TEST_F766,23419
TEST_F(TestForDeathTest, AssertDebugDeathAborts4) {TEST_F773,23602
TEST_F(TestForDeathTest, AssertDebugDeathAborts5) {TEST_F780,23785
TEST_F(TestForDeathTest, AssertDebugDeathAborts6) {TEST_F787,23968
TEST_F(TestForDeathTest, AssertDebugDeathAborts7) {TEST_F794,24151
TEST_F(TestForDeathTest, AssertDebugDeathAborts8) {TEST_F801,24334
TEST_F(TestForDeathTest, AssertDebugDeathAborts9) {TEST_F808,24517
TEST_F(TestForDeathTest, AssertDebugDeathAborts10) {TEST_F815,24700
static void TestExitMacros() {TestExitMacros825,24973
TEST_F(TestForDeathTest, ExitMacros) { TestExitMacros(); }TEST_F859,26050
TEST_F(TestForDeathTest, ExitMacrosUsingFork) {TEST_F861,26110
TEST_F(TestForDeathTest, InvalidStyle) {TEST_F866,26226
TEST_F(TestForDeathTest, DeathTestFailedOutput) {TEST_F875,26474
TEST_F(TestForDeathTest, DeathTestUnexpectedReturnOutput) {TEST_F883,26718
TEST_F(TestForDeathTest, DeathTestBadExitCodeOutput) {TEST_F897,27290
TEST_F(TestForDeathTest, DeathTestMultiLineMatchFail) {TEST_F908,27716
TEST_F(TestForDeathTest, DeathTestMultiLineMatchPass) {TEST_F919,28068
class MockDeathTestFactory : public DeathTestFactory {MockDeathTestFactory926,28325
  int AssumeRoleCalls() const { return assume_role_calls_; }AssumeRoleCalls938,28764
  int WaitCalls() const { return wait_calls_; }WaitCalls939,28825
  size_t PassedCalls() const { return passed_args_.size(); }PassedCalls940,28873
  bool PassedArgument(int n) const {PassedArgument941,28934
  size_t AbortCalls() const { return abort_args_.size(); }AbortCalls944,29024
  DeathTest::AbortReason AbortArgument(int n) const {AbortArgument945,29083
  bool TestDeleted() const { return test_deleted_; }TestDeleted948,29189
  bool create_;create_954,29365
  DeathTest::TestRole role_;role_956,29452
  int status_;status_958,29546
  bool passed_;passed_960,29628
  int assume_role_calls_;assume_role_calls_963,29689
  int wait_calls_;wait_calls_965,29753
  std::vector<bool> passed_args_;passed_args_968,29857
  std::vector<DeathTest::AbortReason> abort_args_;abort_args_971,29975
  bool test_deleted_;test_deleted_974,30104
class MockDeathTest : public DeathTest {MockDeathTest981,30351
  MockDeathTest(MockDeathTestFactory* parent, TestRole role, int status,MockDeathTest983,30401
  ~MockDeathTest() override { parent_->test_deleted_ = true; }~MockDeathTest986,30577
  TestRole AssumeRole() override {AssumeRole987,30640
  int Wait() override {Wait991,30732
  bool Passed(bool exit_status_ok) override {Passed995,30808
  void Abort(AbortReason reason) override {Abort999,30931
  MockDeathTestFactory* const parent_;parent_1004,31034
  const TestRole role_;role_1005,31073
  const int status_;status_1006,31097
  const bool passed_;passed_1007,31118
MockDeathTestFactory::MockDeathTestFactory()MockDeathTestFactory1011,31181
void MockDeathTestFactory::SetParameters(bool create, DeathTest::TestRole role,SetParameters1022,31476
bool MockDeathTestFactory::Create(Create1038,31995
class MacroLogicDeathTest : public testing::Test {MacroLogicDeathTest1053,32490
  static testing::internal::ReplaceDeathTestFactory* replacer_;replacer_1055,32553
  static MockDeathTestFactory* factory_;factory_1056,32617
  static void SetUpTestSuite() {SetUpTestSuite1058,32659
  static void TearDownTestSuite() {TearDownTestSuite1063,32812
  static void RunReturningDeathTest(bool* flag) {RunReturningDeathTest1073,33157
testing::internal::ReplaceDeathTestFactory* MacroLogicDeathTest::replacer_ =replacer_1083,33320
MockDeathTestFactory* MacroLogicDeathTest::factory_ = nullptr;factory_1085,33410
TEST_F(MacroLogicDeathTest, NothingHappens) {TEST_F1088,33548
TEST_F(MacroLogicDeathTest, ChildExitsSuccessfully) {TEST_F1103,34117
TEST_F(MacroLogicDeathTest, ChildExitsUnsuccessfully) {TEST_F1118,34690
TEST_F(MacroLogicDeathTest, ChildPerformsReturn) {TEST_F1134,35302
TEST_F(MacroLogicDeathTest, ChildDoesNotDie) {TEST_F1150,35910
TEST(SuccessRegistrationDeathTest, NoSuccessPart) {TEST1172,36865
TEST(StreamingAssertionsDeathTest, DeathTest) {TEST1177,37028
TEST(GetLastErrnoDescription, GetLastErrnoDescriptionWorks) {TEST1194,37596
TEST(AutoHandleTest, AutoHandleWorks) {TEST1202,37823
typedef unsigned __int64 BiggestParsable;BiggestParsable1229,38840
typedef signed __int64 BiggestSignedParsable;BiggestSignedParsable1230,38882
typedef unsigned long long BiggestParsable;BiggestParsable1232,38934
typedef signed long long BiggestSignedParsable;BiggestSignedParsable1233,38978
const BiggestParsable kBiggestParsableMax = ULLONG_MAX;kBiggestParsableMax1238,39164
const BiggestSignedParsable kBiggestSignedParsableMax = LLONG_MAX;kBiggestSignedParsableMax1239,39220
TEST(ParseNaturalNumberTest, RejectsInvalidFormat) {TEST1241,39288
TEST(ParseNaturalNumberTest, RejectsOverflownNumbers) {TEST1258,39766
TEST(ParseNaturalNumberTest, AcceptsValidNumbers) {TEST1268,40030
TEST(ParseNaturalNumberTest, AcceptsTypeLimits) {TEST1285,40420
TEST(ParseNaturalNumberTest, WorksForShorterIntegers) {TEST1315,41206
TEST(EnvironmentTest, HandleFitsIntoSizeT) {TEST1326,41520
TEST(ConditionalDeathMacrosDeathTest, ExpectsDeathWhenDeathTestsAvailable) {TEST1333,41777
TEST(InDeathTestChildDeathTest, ReportsDeathTestCorrectlyInFastStyle) {TEST1344,42326
TEST(InDeathTestChildDeathTest, ReportsDeathTestCorrectlyInThreadSafeStyle) {TEST1356,42641
void DieWithMessage(const char* message) {DieWithMessage1368,42968
TEST(MatcherDeathTest, DoesNotBreakBareRegexMatching) {TEST1374,43130
TEST(MatcherDeathTest, MonomorphicMatcherMatches) {TEST1384,43463
TEST(MatcherDeathTest, MonomorphicMatcherDoesNotMatch) {TEST1389,43648
TEST(MatcherDeathTest, PolymorphicMatcherMatches) {TEST1397,43946
TEST(MatcherDeathTest, PolymorphicMatcherDoesNotMatch) {TEST1402,44106
namespace {__anon085f2df802111413,44432
TEST(ConditionalDeathMacrosTest, WarnsWhenDeathTestsNotAvailable) {TEST1421,44698
void FuncWithAssert(int* n) {FuncWithAssert1450,45881
TEST(ConditionalDeathMacrosTest, AssertDeatDoesNotReturnhIfUnsupported) {TEST1457,46108
namespace {__anon085f2df803111467,46290
TEST(ConditionalDeathMacrosSyntaxDeathTest, SingleStatement) {TEST1481,46812
TEST(ConditionalDeathMacrosSyntaxDeathTest, SwitchStatement) {TEST1506,47573
TEST(NotADeathTest, Test) { SUCCEED(); }TEST1524,48134

build/_deps/googletest-src/googletest/test/gtest-typed-test2_test.cc,0

build/_deps/googletest-src/googletest/test/gtest_xml_outfile1_test_.cc,277
class PropertyOne : public testing::Test {PropertyOne35,1685
  void SetUp() override { RecordProperty("SetUpProp", 1); }SetUp37,1740
  void TearDown() override { RecordProperty("TearDownProp", 1); }TearDown38,1800
TEST_F(PropertyOne, TestSomeProperties) {TEST_F41,1870

build/_deps/googletest-src/googletest/test/gtest_xml_outfiles_test.py,777
GTEST_OUTPUT_SUBDIR = "xml_outfiles"GTEST_OUTPUT_SUBDIR39,1742
GTEST_OUTPUT_1_TEST = "gtest_xml_outfile1_test_"GTEST_OUTPUT_1_TEST40,1779
GTEST_OUTPUT_2_TEST = "gtest_xml_outfile2_test_"GTEST_OUTPUT_2_TEST41,1828
EXPECTED_XML_1 = """<?xml version="1.0" encoding="UTF-8"?>EXPECTED_XML_143,1878
EXPECTED_XML_2 = """<?xml version="1.0" encoding="UTF-8"?>EXPECTED_XML_257,2556
class GTestXMLOutFilesTest(gtest_xml_test_utils.GTestXMLTestCase):GTestXMLOutFilesTest72,3235
  def setUp(self):setUp75,3365
  def tearDown(self):tearDown83,3723
  def DeleteFilesAndDir(self):DeleteFilesAndDir86,3775
  def testOutfile1(self):testOutfile1100,4119
  def testOutfile2(self):testOutfile2103,4205
  def _TestOutFile(self, test_name, expected_xml):_TestOutFile106,4291

build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc,12263
::std::string PrintValue(const T& value) {PrintValue72,2748
void VerifyGenerator(const ParamGenerator<T>& generator,VerifyGenerator80,3019
void VerifyGeneratorIsEmpty(const ParamGenerator<T>& generator) {VerifyGeneratorIsEmpty120,4817
TEST(IteratorTest, ParamIteratorConformsToForwardIteratorConcept) {TEST137,5541
TEST(RangeTest, IntRangeWithDefaultStep) {TEST172,6911
TEST(RangeTest, IntRangeSingleValue) {TEST180,7222
TEST(RangeTest, IntRangeEmpty) {TEST188,7490
TEST(RangeTest, IntRangeWithCustomStep) {TEST195,7698
TEST(RangeTest, IntRangeWithCustomStepOverUpperBound) {TEST205,8117
class DogAdder {DogAdder213,8436
  explicit DogAdder(const char* a_value) : value_(a_value) {}DogAdder215,8462
  DogAdder(const DogAdder& other) : value_(other.value_.c_str()) {}DogAdder216,8524
  DogAdder operator=(const DogAdder& other) {operator =218,8593
  DogAdder operator+(const DogAdder& other) const {operator +222,8708
  bool operator<(const DogAdder& other) const { return value_ < other.value_; }operator <227,8878
  const std::string& value() const { return value_; }value228,8958
  std::string value_;value_231,9023
TEST(RangeTest, WorksWithACustomType) {TEST234,9049
class IntWrapper {IntWrapper248,9452
  explicit IntWrapper(int a_value) : value_(a_value) {}IntWrapper250,9480
  IntWrapper(const IntWrapper& other) : value_(other.value_) {}IntWrapper251,9536
  IntWrapper operator=(const IntWrapper& other) {operator =253,9601
  IntWrapper operator+(int other) const { return IntWrapper(value_ + other); }operator +258,9740
  bool operator<(const IntWrapper& other) const {operator <259,9819
  int value() const { return value_; }value262,9907
  int value_;value_265,9957
TEST(RangeTest, WorksWithACustomTypeWithDifferentIncrementType) {TEST268,9975
TEST(ValuesInTest, ValuesInArray) {TEST283,10427
TEST(ValuesInTest, ValuesInConstArray) {TEST291,10665
TEST(ValuesInTest, ValuesInSingleElementArray) {TEST299,10954
TEST(ValuesInTest, ValuesInVector) {TEST307,11201
  typedef ::std::vector<int> ContainerType;ContainerType308,11238
TEST(ValuesInTest, ValuesInIteratorRange) {TEST320,11573
  typedef ::std::vector<int> ContainerType;ContainerType321,11617
TEST(ValuesInTest, ValuesInSingleElementIteratorRange) {TEST334,12050
  typedef ::std::vector<int> ContainerType;ContainerType335,12107
TEST(ValuesInTest, ValuesInEmptyIteratorRange) {TEST346,12462
  typedef ::std::vector<int> ContainerType;ContainerType347,12511
TEST(ValuesTest, ValuesWorks) {TEST355,12748
TEST(ValuesTest, ValuesWorksForValuesOfCompatibleTypes) {TEST364,13059
TEST(ValuesTest, ValuesWorksForMaxLengthList) {TEST371,13273
TEST(ValuesTest, ValuesWithSingleParameter) {TEST388,14108
TEST(BoolTest, BoolWorks) {TEST396,14338
TEST(CombineTest, CombineWithTwoParameters) {TEST404,14579
TEST(CombineTest, CombineWithThreeParameters) {TEST417,15075
TEST(CombineTest, CombineWithFirstParameterSingleValue) {TEST431,15789
TEST(CombineTest, CombineWithSecondParameterSingleValue) {TEST443,16347
TEST(CombineTest, CombineWithFirstParameterEmptyRange) {TEST454,16793
TEST(CombineTest, CombineWithSecondParameterEmptyRange) {TEST462,17091
TEST(CombineTest, CombineWithMaxNumberOfParameters) {TEST470,17397
class NonDefaultConstructAssignString {NonDefaultConstructAssignString485,18040
  NonDefaultConstructAssignString(const std::string& s) : str_(s) {}NonDefaultConstructAssignString487,18089
  const std::string& str() const { return str_; }str495,18446
  std::string str_;str_498,18507
TEST(CombineTest, NonDefaultConstructAssign) {TEST501,18531
class ConstructFromT {ConstructFromT529,19305
  explicit ConstructFromT(const T& t) : t_(t) {}ConstructFromT531,19337
  ConstructFromT(Args&&... args) : t_(std::forward<Args>(args)...) {}ConstructFromT534,19490
  bool operator==(const ConstructFromT& other) const { return other.t_ == t_; }operator ==536,19561
  const T& get() const { return t_; }get538,19642
  T t_;t_541,19691
TEST(ConvertTest, CombineWithTwoParameters) {TEST544,19703
TEST(ConvertTest, NonDefaultConstructAssign) {TEST556,20145
TEST(ParamGeneratorTest, AssignmentWorks) {TEST588,21175
class TestGenerationEnvironment : public ::testing::Environment {TestGenerationEnvironment607,21967
  static TestGenerationEnvironment* Instance() {Instance609,22042
  void FixtureConstructorExecuted() { fixture_constructor_count_++; }FixtureConstructorExecuted614,22197
  void SetUpExecuted() { set_up_count_++; }SetUpExecuted615,22267
  void TearDownExecuted() { tear_down_count_++; }TearDownExecuted616,22311
  void TestBodyExecuted() { test_body_count_++; }TestBodyExecuted617,22361
  void TearDown() override {TearDown619,22412
  TestGenerationEnvironment()TestGenerationEnvironment650,23629
  int fixture_constructor_count_;fixture_constructor_count_656,23785
  int set_up_count_;set_up_count_657,23819
  int tear_down_count_;tear_down_count_658,23840
  int test_body_count_;test_body_count_659,23864
const int test_generation_params[] = {36, 42, 72};test_generation_params666,24054
class TestGenerationTest : public TestWithParam<int> {TestGenerationTest668,24106
  enum {__anonbf7cbe430103670,24170
    PARAMETER_COUNT =PARAMETER_COUNT671,24179
  typedef TestGenerationEnvironment<PARAMETER_COUNT> Environment;Environment675,24282
  TestGenerationTest() {TestGenerationTest677,24349
  void SetUp() override {SetUp681,24474
  void TearDown() override {TearDown685,24597
  static void SetUpTestSuite() {SetUpTestSuite690,24727
  static void TearDownTestSuite() {TearDownTestSuite711,25533
  int current_parameter_;current_parameter_724,26078
  static vector<int> collected_parameters_;collected_parameters_725,26104
vector<int> TestGenerationTest::collected_parameters_;collected_parameters_731,26289
TEST_P(TestGenerationTest, TestsExpandedAndRun) {TEST_P733,26345
class GeneratorEvaluationTest : public TestWithParam<int> {GeneratorEvaluationTest751,27311
  static int param_value() { return param_value_; }param_value753,27380
  static void set_param_value(int param_value) { param_value_ = param_value; }set_param_value754,27432
  static int param_value_;param_value_757,27522
int GeneratorEvaluationTest::param_value_ = 0;param_value_759,27552
TEST_P(GeneratorEvaluationTest, GeneratorsEvaluatedInMain) {TEST_P761,27600
class ExternalGeneratorTest : public TestWithParam<int> {};ExternalGeneratorTest770,28016
TEST_P(ExternalGeneratorTest, ExternalGenerator) {TEST_P771,28076
TEST_P(ExternalInstantiationTest, IsMultipleOf33) {TEST_P783,28620
class MultipleInstantiationTest : public TestWithParam<int> {};MultipleInstantiationTest789,28797
TEST_P(MultipleInstantiationTest, AllowsMultipleInstances) {}TEST_P790,28861
TEST_P(InstantiationInMultipleTranslationUnitsTest, IsMultipleOf42) {TEST_P799,29349
class SeparateInstanceTest : public TestWithParam<int> {SeparateInstanceTest807,29668
  SeparateInstanceTest() : count_(0) {}SeparateInstanceTest809,29734
  static void TearDownTestSuite() {TearDownTestSuite811,29775
  int count_;count_820,30109
  static int global_count_;global_count_821,30123
int SeparateInstanceTest::global_count_ = 0;global_count_823,30154
TEST_P(SeparateInstanceTest, TestsRunInSeparateInstances) {TEST_P825,30200
class NamingTest : public TestWithParam<int> {};NamingTest836,30741
TEST_P(NamingTest, TestsReportCorrectNamesAndParameters) {TEST_P838,30791
class MacroNamingTest : public TestWithParam<int> {};MacroNamingTest854,31419
#define PREFIX_WITH_FOO(PREFIX_WITH_FOO856,31474
#define PREFIX_WITH_MACRO(PREFIX_WITH_MACRO857,31524
TEST_P(PREFIX_WITH_MACRO(NamingTest), PREFIX_WITH_FOO(SomeTestName)) {TEST_P859,31579
class MacroNamingTestNonParametrized : public ::testing::Test {};MacroNamingTestNonParametrized870,32012
TEST_F(PREFIX_WITH_MACRO(NamingTestNonParametrized),TEST_F872,32079
TEST(MacroNameing, LookupNames) {TEST881,32420
class CustomFunctorNamingTest : public TestWithParam<std::string> {};CustomFunctorNamingTest914,33715
TEST_P(CustomFunctorNamingTest, CustomTestNames) {}TEST_P915,33785
struct CustomParamNameFunctor {CustomParamNameFunctor917,33838
  std::string operator()(const ::testing::TestParamInfo<std::string>& inf) {operator ()918,33870
inline std::string CustomParamNameFunction(CustomParamNameFunction932,34431
class CustomFunctionNamingTest : public TestWithParam<std::string> {};CustomFunctionNamingTest937,34554
TEST_P(CustomFunctionNamingTest, CustomTestNames) {}TEST_P938,34625
class CustomLambdaNamingTest : public TestWithParam<std::string> {};CustomLambdaNamingTest950,35099
TEST_P(CustomLambdaNamingTest, CustomTestNames) {}TEST_P951,35168
                         [](const ::testing::TestParamInfo<std::string>& inf) {__anonbf7cbe430202955,35352
TEST(CustomNamingTest, CheckNameRegistry) {TEST959,35507
class CustomIntegerNamingTest : public TestWithParam<int> {};CustomIntegerNamingTest979,36410
TEST_P(CustomIntegerNamingTest, TestsReportCorrectNames) {TEST_P981,36473
struct CustomStruct {CustomStruct994,36997
  explicit CustomStruct(int value) : x(value) {}CustomStruct995,37019
  int x;x996,37068
std::ostream& operator<<(std::ostream& stream, const CustomStruct& val) {operator <<999,37081
class CustomStructNamingTest : public TestWithParam<CustomStruct> {};CustomStructNamingTest1004,37194
TEST_P(CustomStructNamingTest, TestsReportCorrectNames) {TEST_P1006,37265
struct StatefulNamingFunctor {StatefulNamingFunctor1020,37872
  StatefulNamingFunctor() : sum(0) {}StatefulNamingFunctor1021,37903
  std::string operator()(const ::testing::TestParamInfo<int>& info) {operator ()1022,37941
  int sum;sum1027,38116
class StatefulNamingTest : public ::testing::TestWithParam<int> {StatefulNamingTest1030,38131
  StatefulNamingTest() : sum_(0) {}StatefulNamingTest1032,38209
  int sum_;sum_1033,38245
TEST_P(StatefulNamingTest, TestsReportCorrectNames) {TEST_P1036,38261
class Unstreamable {Unstreamable1052,38983
  explicit Unstreamable(int value) : value_(value) {}Unstreamable1054,39013
  const int& dummy_value() const { return value_; }dummy_value1056,39125
  int value_;value_1059,39188
class CommentTest : public TestWithParam<Unstreamable> {};CommentTest1062,39206
TEST_P(CommentTest, TestsCorrectlyReportUnstreamableParams) {TEST_P1064,39266
class NonParameterizedBaseTest : public ::testing::Test {NonParameterizedBaseTest1078,39892
  NonParameterizedBaseTest() : n_(17) {}NonParameterizedBaseTest1080,39959
  int n_;n_1083,40013
class ParameterizedDerivedTest : public NonParameterizedBaseTest,ParameterizedDerivedTest1086,40027
  ParameterizedDerivedTest() : count_(0) {}ParameterizedDerivedTest1089,40182
  int count_;count_1090,40226
  static int global_count_;global_count_1091,40240
int ParameterizedDerivedTest::global_count_ = 0;global_count_1094,40272
TEST_F(NonParameterizedBaseTest, FixtureIsInitialized) { EXPECT_EQ(17, n_); }TEST_F1096,40322
TEST_P(ParameterizedDerivedTest, SeesSequence) {TEST_P1098,40401
class ParameterizedDeathTest : public ::testing::TestWithParam<int> {};ParameterizedDeathTest1104,40542
TEST_F(ParameterizedDeathTest, GetParamDiesFromTestF) {TEST_F1106,40615
enum MyEnums {MyEnums1114,40901
  ENUM1 = 1,ENUM11115,40916
  ENUM2 = 3,ENUM21116,40929
  ENUM3 = 8,ENUM31117,40942
class MyEnumTest : public testing::TestWithParam<MyEnums> {};MyEnumTest1120,40959
TEST_P(MyEnumTest, ChecksParamMoreThanZero) { EXPECT_GE(10, GetParam()); }TEST_P1122,41022
namespace works_here {works_here1126,41210
class NotUsedTest : public testing::TestWithParam<int> {};NotUsedTest1128,41283
class NotUsedTypeTest : public testing::Test {};NotUsedTypeTest1133,41423
class NotInstantiatedTest : public testing::TestWithParam<int> {};NotInstantiatedTest1137,41564
TEST_P(NotInstantiatedTest, Used) {}TEST_P1141,41730
using OtherName = NotInstantiatedTest;OtherName1143,41768
TEST_P(OtherName, Used) {}TEST_P1145,41865
class NotInstantiatedTypeTest : public testing::Test {};NotInstantiatedTypeTest1149,41969
TYPED_TEST_P(NotInstantiatedTypeTest, Used) {}TYPED_TEST_P1154,42174
int main(int argc, char** argv) {main1158,42309

build/_deps/googletest-src/googletest/test/googletest-printers-test.cc,20738
enum AnonymousEnum { kAE1 = -1, kAE2 = 1 };AnonymousEnum59,2174
enum AnonymousEnum { kAE1 = -1, kAE2 = 1 };kAE159,2174
enum AnonymousEnum { kAE1 = -1, kAE2 = 1 };kAE259,2174
enum EnumWithoutPrinter { kEWP1 = -2, kEWP2 = 42 };EnumWithoutPrinter62,2262
enum EnumWithoutPrinter { kEWP1 = -2, kEWP2 = 42 };kEWP162,2262
enum EnumWithoutPrinter { kEWP1 = -2, kEWP2 = 42 };kEWP262,2262
enum EnumWithStreaming { kEWS1 = 10 };EnumWithStreaming65,2346
enum EnumWithStreaming { kEWS1 = 10 };kEWS165,2346
std::ostream& operator<<(std::ostream& os, EnumWithStreaming e) {operator <<67,2386
enum EnumWithPrintTo { kEWPT1 = 1 };EnumWithPrintTo72,2544
enum EnumWithPrintTo { kEWPT1 = 1 };kEWPT172,2544
void PrintTo(EnumWithPrintTo e, std::ostream* os) {PrintTo74,2582
class BiggestIntConvertible {BiggestIntConvertible79,2733
  operator ::testing::internal::BiggestInt() const { return 42; }operator ::testing::internal::BiggestInt81,2772
class ParentClass {};ParentClass86,2941
class ChildClassWithStreamOperator : public ParentClass {};ChildClassWithStreamOperator87,2963
class ChildClassWithoutStreamOperator : public ParentClass {};ChildClassWithoutStreamOperator88,3023
static void operator<<(std::ostream& os, const ParentClass&) {operator <<89,3086
static void operator<<(std::ostream& os, const ChildClassWithStreamOperator&) {operator <<92,3174
class UnprintableTemplateInGlobal {UnprintableTemplateInGlobal98,3389
  UnprintableTemplateInGlobal() : value_() {}UnprintableTemplateInGlobal100,3434
  T value_;value_103,3491
class StreamableInGlobal {StreamableInGlobal107,3566
  virtual ~StreamableInGlobal() {}~StreamableInGlobal109,3602
inline void operator<<(::std::ostream& os, const StreamableInGlobal& /* x */) {operator <<112,3641
void operator<<(::std::ostream& os, const StreamableInGlobal* /* x */) {operator <<116,3754
namespace foo {foo120,3861
class UnprintableInFoo {UnprintableInFoo123,3934
  UnprintableInFoo() : z_(0) { memcpy(xy_, "\xEF\x12\x0\x0\x34\xAB\x0\x0", 8); }UnprintableInFoo125,3968
  double z() const { return z_; }z126,4049
  char xy_[8];xy_129,4094
  double z_;z_130,4109
struct PrintableViaPrintTo {PrintableViaPrintTo134,4187
  PrintableViaPrintTo() : value() {}PrintableViaPrintTo135,4216
  int value;value136,4253
void PrintTo(const PrintableViaPrintTo& x, ::std::ostream* os) {PrintTo139,4270
struct PointerPrintable {};PointerPrintable144,4442
::std::ostream& operator<<(::std::ostream& os,operator <<146,4471
class PrintableViaPrintToTemplate {PrintableViaPrintToTemplate153,4712
  explicit PrintableViaPrintToTemplate(const T& a_value) : value_(a_value) {}PrintableViaPrintToTemplate155,4757
  const T& value() const { return value_; }value157,4836
  T value_;value_160,4891
void PrintTo(const PrintableViaPrintToTemplate<T>& x, ::std::ostream* os) {PrintTo164,4929
class StreamableTemplateInFoo {StreamableTemplateInFoo170,5150
  StreamableTemplateInFoo() : value_() {}StreamableTemplateInFoo172,5191
  const T& value() const { return value_; }value174,5234
  T value_;value_177,5289
inline ::std::ostream& operator<<(::std::ostream& os,operator <<181,5327
struct TemplatedStreamableInFoo {};TemplatedStreamableInFoo188,5635
OutputStream& operator<<(OutputStream& os,operator <<191,5705
struct StreamableInLocal {};StreamableInLocal197,5867
void operator<<(::std::ostream& os, const StreamableInLocal& /* x */) {operator <<198,5896
class PathLike {PathLike205,6165
  struct iterator {iterator207,6191
    typedef PathLike value_type;value_type208,6211
  using value_type = char;value_type214,6306
  using const_iterator = iterator;const_iterator215,6333
  PathLike() {}PathLike217,6369
  iterator begin() const { return iterator(); }begin219,6386
  iterator end() const { return iterator(); }end220,6434
  friend ::std::ostream& operator<<(::std::ostream& os, const PathLike&) {operator <<222,6481
namespace testing {testing229,6625
namespace {__anona0016b9c0111230,6645
class Wrapper {Wrapper232,6679
  explicit Wrapper(T&& value) : value_(std::forward<T>(value)) {}Wrapper234,6704
  const T& value() const { return value_; }value236,6771
  T value_;value_239,6826
namespace internal {internal244,6859
class UniversalPrinter<Wrapper<T>> {UniversalPrinter246,6902
  static void Print(const Wrapper<T>& w, ::std::ostream* os) {Print248,6948
namespace gtest_printers_test {gtest_printers_test256,7118
std::string Print(const T& value) {Print281,7975
std::string PrintByRef(const T& value) {PrintByRef291,8294
TEST(PrintEnumTest, AnonymousEnum) {TEST299,8465
TEST(PrintEnumTest, EnumWithoutPrinter) {TEST304,8568
TEST(PrintEnumTest, EnumWithStreaming) {TEST309,8679
TEST(PrintEnumTest, EnumWithPrintTo) {TEST314,8825
TEST(PrintClassTest, BiggestIntConvertible) {TEST321,9034
TEST(PrintCharTest, PlainChar) {TEST328,9182
TEST(PrintCharTest, SignedChar) {TEST348,9922
TEST(PrintCharTest, UnsignedChar) {TEST354,10106
TEST(PrintCharTest, Char16) { EXPECT_EQ("U+0041", Print(u'A')); }TEST359,10279
TEST(PrintCharTest, Char32) { EXPECT_EQ("U+0041", Print(U'A')); }TEST361,10346
TEST(PrintCharTest, Char8) { EXPECT_EQ("U+0041", Print(u8'A')); }TEST364,10434
TEST(PrintBuiltInTypeTest, Bool) {TEST370,10566
TEST(PrintBuiltInTypeTest, Wchar_t) {TEST376,10686
TEST(PrintTypeSizeTest, Wchar_t) {TEST398,11645
TEST(PrintBuiltInTypeTest, Integer) {TEST403,11756
TEST(PrintBuiltInTypeTest, Size_t) {TEST433,13115
TEST(PrintBuiltInTypeTest, Int128) {TEST443,13467
TEST(PrintBuiltInTypeTest, FloatingPoints) {TEST460,14110
TEST(PrintBuiltInTypeTest, TypeInfo) {TEST466,14266
  struct MyStruct {};MyStruct467,14305
static std::string PrintPointer(const void* p) {PrintPointer478,14766
TEST(PrintCStringTest, Const) {TEST487,14980
TEST(PrintCStringTest, NonConst) {TEST493,15119
TEST(PrintCStringTest, Null) {TEST500,15290
TEST(PrintCStringTest, EscapesProperly) {TEST506,15428
TEST(PrintU8StringTest, Const) {TEST516,15717
TEST(PrintU8StringTest, NonConst) {TEST522,15875
TEST(PrintU8StringTest, Null) {TEST529,16072
TEST(PrintU8StringTest, EscapesProperly) {TEST535,16215
TEST(PrintU16StringTest, Const) {TEST545,16545
TEST(PrintU16StringTest, NonConst) {TEST551,16696
TEST(PrintU16StringTest, Null) {TEST558,16887
TEST(PrintU16StringTest, EscapesProperly) {TEST564,17033
TEST(PrintU32StringTest, Const) {TEST573,17340
TEST(PrintU32StringTest, NonConst) {TEST579,17503
TEST(PrintU32StringTest, Null) {TEST586,17696
TEST(PrintU32StringTest, EscapesProperly) {TEST592,17842
TEST(PrintWideCStringTest, Const) {TEST609,18602
TEST(PrintWideCStringTest, NonConst) {TEST615,18753
TEST(PrintWideCStringTest, Null) {TEST622,18941
TEST(PrintWideCStringTest, EscapesProperly) {TEST628,19091
TEST(PrintCharPointerTest, SignedChar) {TEST642,19618
TEST(PrintCharPointerTest, ConstSignedChar) {TEST650,19830
TEST(PrintCharPointerTest, UnsignedChar) {TEST658,20043
TEST(PrintCharPointerTest, ConstUnsignedChar) {TEST666,20263
TEST(PrintPointerToBuiltInTypeTest, Bool) {TEST676,20540
TEST(PrintPointerToBuiltInTypeTest, Void) {TEST684,20728
TEST(PrintPointerToBuiltInTypeTest, ConstVoid) {TEST692,20922
TEST(PrintPointerToPointerTest, IntPointerPointer) {TEST700,21157
void MyFunction(int /* n */) {}MyFunction709,21395
TEST(PrintPointerTest, NonMemberFunctionPointer) {TEST711,21428
AssertionResult HasPrefix(const StringType& str, const StringType& prefix) {HasPrefix726,22051
struct Foo {Foo741,22694
  virtual ~Foo() {}~Foo743,22716
  int MyMethod(char x) { return x + 1; }MyMethod744,22736
  virtual char MyVirtualMethod(int /* n */) { return 'a'; }MyVirtualMethod745,22777
  int value;value747,22838
TEST(PrintPointerTest, MemberVariablePointer) {TEST750,22855
TEST(PrintPointerTest, MemberFunctionPointer) {TEST761,23358
std::string PrintArrayHelper(T (&a)[N]) {PrintArrayHelper776,23953
TEST(PrintArrayTest, OneDimensionalArray) {TEST781,24043
TEST(PrintArrayTest, TwoDimensionalArray) {TEST787,24201
TEST(PrintArrayTest, ConstArray) {TEST793,24406
TEST(PrintArrayTest, CharArrayWithNoTerminatingNul) {TEST799,24559
TEST(PrintArrayTest, CharArrayWithTerminatingNul) {TEST806,24819
TEST(PrintArrayTest, Char8ArrayWithNoTerminatingNul) {TEST813,25010
class AllowsGenericStreaming {};AllowsGenericStreaming957,30424
class AllowsGenericStreamingTemplate {};AllowsGenericStreamingTemplate974,30918
class AllowsGenericStreamingAndImplicitConversionTemplate {AllowsGenericStreamingAndImplicitConversionTemplate992,31521
  operator bool() const { return false; }operator bool994,31590
struct iterator {iterator1186,37403
  char x;x1187,37421
struct const_iterator {const_iterator1197,37618
  char x;x1198,37642
struct Big {Big1277,40115
  Big() { memset(array, 0, sizeof(array)); }Big1278,40128
  char array[257];array1279,40173
#define EXPECT_PRINT_TO_STRING_(EXPECT_PRINT_TO_STRING_1555,50659
                std::unique_ptr<void, void (*)(void*)>(p.get(), [](void*) {})));__anona0016b9c02021823,60544
            PrintToString(std::shared_ptr<void>(p.get(), [](void*) {})));__anona0016b9c03021826,60738
class PrintAnyTest : public ::testing::Test {PrintAnyTest1859,61840
  static std::string ExpectedTypeName() {ExpectedTypeName1862,61922
struct NonPrintable {NonPrintable1903,63035
  unsigned char contents = 17;contents1904,63057
  using Type = internal::Variant<int, StreamableInGlobal, NonPrintable>;Type1908,63122
namespace {__anona0016b9c04111918,63605
class string_ptr {string_ptr1924,63699
  string_ptr(const char* data, size_t size) : data_(data), size_(size) {}string_ptr1926,63727
  string_ptr& operator++() noexcept {operator ++1928,63802
  const char* data_;data_1936,63935
  size_t size_;size_1937,63956
class string_ref {string_ref1943,64041
  string_ref(const char* data, size_t size) : data_(data), size_(size) {}string_ref1945,64069
  string_ptr operator&() const noexcept { return {data_, size_}; }  // NOLINToperator &1947,64144
  bool operator==(const char* s) const noexcept {operator ==1949,64223
  const char* data_;data_1958,64462
  size_t size_;size_1959,64483
string_ref string_ptr::operator*() const noexcept { return {data_, size_}; }operator *1962,64503
TEST(string_ref, compare) {TEST1964,64581
enum AnonymousEnum { kAE1 = -1, kAE2 = 1 };AnonymousEnum59,2174
enum AnonymousEnum { kAE1 = -1, kAE2 = 1 };kAE159,2174
enum AnonymousEnum { kAE1 = -1, kAE2 = 1 };kAE259,2174
enum EnumWithoutPrinter { kEWP1 = -2, kEWP2 = 42 };EnumWithoutPrinter62,2262
enum EnumWithoutPrinter { kEWP1 = -2, kEWP2 = 42 };kEWP162,2262
enum EnumWithoutPrinter { kEWP1 = -2, kEWP2 = 42 };kEWP262,2262
enum EnumWithStreaming { kEWS1 = 10 };EnumWithStreaming65,2346
enum EnumWithStreaming { kEWS1 = 10 };kEWS165,2346
std::ostream& operator<<(std::ostream& os, EnumWithStreaming e) {operator <<67,2386
enum EnumWithPrintTo { kEWPT1 = 1 };EnumWithPrintTo72,2544
enum EnumWithPrintTo { kEWPT1 = 1 };kEWPT172,2544
void PrintTo(EnumWithPrintTo e, std::ostream* os) {PrintTo74,2582
class BiggestIntConvertible {BiggestIntConvertible79,2733
  operator ::testing::internal::BiggestInt() const { return 42; }operator ::testing::internal::BiggestInt81,2772
class ParentClass {};ParentClass86,2941
class ChildClassWithStreamOperator : public ParentClass {};ChildClassWithStreamOperator87,2963
class ChildClassWithoutStreamOperator : public ParentClass {};ChildClassWithoutStreamOperator88,3023
static void operator<<(std::ostream& os, const ParentClass&) {operator <<89,3086
static void operator<<(std::ostream& os, const ChildClassWithStreamOperator&) {operator <<92,3174
class UnprintableTemplateInGlobal {UnprintableTemplateInGlobal98,3389
  UnprintableTemplateInGlobal() : value_() {}UnprintableTemplateInGlobal100,3434
  T value_;value_103,3491
class StreamableInGlobal {StreamableInGlobal107,3566
  virtual ~StreamableInGlobal() {}~StreamableInGlobal109,3602
inline void operator<<(::std::ostream& os, const StreamableInGlobal& /* x */) {operator <<112,3641
void operator<<(::std::ostream& os, const StreamableInGlobal* /* x */) {operator <<116,3754
namespace foo {foo120,3861
class UnprintableInFoo {UnprintableInFoo123,3934
  UnprintableInFoo() : z_(0) { memcpy(xy_, "\xEF\x12\x0\x0\x34\xAB\x0\x0", 8); }UnprintableInFoo125,3968
  double z() const { return z_; }z126,4049
  char xy_[8];xy_129,4094
  double z_;z_130,4109
struct PrintableViaPrintTo {PrintableViaPrintTo134,4187
  PrintableViaPrintTo() : value() {}PrintableViaPrintTo135,4216
  int value;value136,4253
void PrintTo(const PrintableViaPrintTo& x, ::std::ostream* os) {PrintTo139,4270
struct PointerPrintable {};PointerPrintable144,4442
::std::ostream& operator<<(::std::ostream& os,operator <<146,4471
class PrintableViaPrintToTemplate {PrintableViaPrintToTemplate153,4712
  explicit PrintableViaPrintToTemplate(const T& a_value) : value_(a_value) {}PrintableViaPrintToTemplate155,4757
  const T& value() const { return value_; }value157,4836
  T value_;value_160,4891
void PrintTo(const PrintableViaPrintToTemplate<T>& x, ::std::ostream* os) {PrintTo164,4929
class StreamableTemplateInFoo {StreamableTemplateInFoo170,5150
  StreamableTemplateInFoo() : value_() {}StreamableTemplateInFoo172,5191
  const T& value() const { return value_; }value174,5234
  T value_;value_177,5289
inline ::std::ostream& operator<<(::std::ostream& os,operator <<181,5327
struct TemplatedStreamableInFoo {};TemplatedStreamableInFoo188,5635
OutputStream& operator<<(OutputStream& os,operator <<191,5705
struct StreamableInLocal {};StreamableInLocal197,5867
void operator<<(::std::ostream& os, const StreamableInLocal& /* x */) {operator <<198,5896
class PathLike {PathLike205,6165
  struct iterator {iterator207,6191
    typedef PathLike value_type;value_type208,6211
  using value_type = char;value_type214,6306
  using const_iterator = iterator;const_iterator215,6333
  PathLike() {}PathLike217,6369
  iterator begin() const { return iterator(); }begin219,6386
  iterator end() const { return iterator(); }end220,6434
  friend ::std::ostream& operator<<(::std::ostream& os, const PathLike&) {operator <<222,6481
namespace testing {testing229,6625
namespace {__anona0016b9c0511230,6645
class Wrapper {Wrapper232,6679
  explicit Wrapper(T&& value) : value_(std::forward<T>(value)) {}Wrapper234,6704
  const T& value() const { return value_; }value236,6771
  T value_;value_239,6826
namespace internal {internal244,6859
class UniversalPrinter<Wrapper<T>> {UniversalPrinter246,6902
  static void Print(const Wrapper<T>& w, ::std::ostream* os) {Print248,6948
namespace gtest_printers_test {gtest_printers_test256,7118
std::string Print(const T& value) {Print281,7975
std::string PrintByRef(const T& value) {PrintByRef291,8294
TEST(PrintEnumTest, AnonymousEnum) {TEST299,8465
TEST(PrintEnumTest, EnumWithoutPrinter) {TEST304,8568
TEST(PrintEnumTest, EnumWithStreaming) {TEST309,8679
TEST(PrintEnumTest, EnumWithPrintTo) {TEST314,8825
TEST(PrintClassTest, BiggestIntConvertible) {TEST321,9034
TEST(PrintCharTest, PlainChar) {TEST328,9182
TEST(PrintCharTest, SignedChar) {TEST348,9922
TEST(PrintCharTest, UnsignedChar) {TEST354,10106
TEST(PrintCharTest, Char16) { EXPECT_EQ("U+0041", Print(u'A')); }TEST359,10279
TEST(PrintCharTest, Char32) { EXPECT_EQ("U+0041", Print(U'A')); }TEST361,10346
TEST(PrintCharTest, Char8) { EXPECT_EQ("U+0041", Print(u8'A')); }TEST364,10434
TEST(PrintBuiltInTypeTest, Bool) {TEST370,10566
TEST(PrintBuiltInTypeTest, Wchar_t) {TEST376,10686
TEST(PrintTypeSizeTest, Wchar_t) {TEST398,11645
TEST(PrintBuiltInTypeTest, Integer) {TEST403,11756
TEST(PrintBuiltInTypeTest, Size_t) {TEST433,13115
TEST(PrintBuiltInTypeTest, Int128) {TEST443,13467
TEST(PrintBuiltInTypeTest, FloatingPoints) {TEST460,14110
TEST(PrintBuiltInTypeTest, TypeInfo) {TEST466,14266
  struct MyStruct {};MyStruct467,14305
static std::string PrintPointer(const void* p) {PrintPointer478,14766
TEST(PrintCStringTest, Const) {TEST487,14980
TEST(PrintCStringTest, NonConst) {TEST493,15119
TEST(PrintCStringTest, Null) {TEST500,15290
TEST(PrintCStringTest, EscapesProperly) {TEST506,15428
TEST(PrintU8StringTest, Const) {TEST516,15717
TEST(PrintU8StringTest, NonConst) {TEST522,15875
TEST(PrintU8StringTest, Null) {TEST529,16072
TEST(PrintU8StringTest, EscapesProperly) {TEST535,16215
TEST(PrintU16StringTest, Const) {TEST545,16545
TEST(PrintU16StringTest, NonConst) {TEST551,16696
TEST(PrintU16StringTest, Null) {TEST558,16887
TEST(PrintU16StringTest, EscapesProperly) {TEST564,17033
TEST(PrintU32StringTest, Const) {TEST573,17340
TEST(PrintU32StringTest, NonConst) {TEST579,17503
TEST(PrintU32StringTest, Null) {TEST586,17696
TEST(PrintU32StringTest, EscapesProperly) {TEST592,17842
TEST(PrintWideCStringTest, Const) {TEST609,18602
TEST(PrintWideCStringTest, NonConst) {TEST615,18753
TEST(PrintWideCStringTest, Null) {TEST622,18941
TEST(PrintWideCStringTest, EscapesProperly) {TEST628,19091
TEST(PrintCharPointerTest, SignedChar) {TEST642,19618
TEST(PrintCharPointerTest, ConstSignedChar) {TEST650,19830
TEST(PrintCharPointerTest, UnsignedChar) {TEST658,20043
TEST(PrintCharPointerTest, ConstUnsignedChar) {TEST666,20263
TEST(PrintPointerToBuiltInTypeTest, Bool) {TEST676,20540
TEST(PrintPointerToBuiltInTypeTest, Void) {TEST684,20728
TEST(PrintPointerToBuiltInTypeTest, ConstVoid) {TEST692,20922
TEST(PrintPointerToPointerTest, IntPointerPointer) {TEST700,21157
void MyFunction(int /* n */) {}MyFunction709,21395
TEST(PrintPointerTest, NonMemberFunctionPointer) {TEST711,21428
AssertionResult HasPrefix(const StringType& str, const StringType& prefix) {HasPrefix726,22051
struct Foo {Foo741,22694
  virtual ~Foo() {}~Foo743,22716
  int MyMethod(char x) { return x + 1; }MyMethod744,22736
  virtual char MyVirtualMethod(int /* n */) { return 'a'; }MyVirtualMethod745,22777
  int value;value747,22838
TEST(PrintPointerTest, MemberVariablePointer) {TEST750,22855
TEST(PrintPointerTest, MemberFunctionPointer) {TEST761,23358
std::string PrintArrayHelper(T (&a)[N]) {PrintArrayHelper776,23953
TEST(PrintArrayTest, OneDimensionalArray) {TEST781,24043
TEST(PrintArrayTest, TwoDimensionalArray) {TEST787,24201
TEST(PrintArrayTest, ConstArray) {TEST793,24406
TEST(PrintArrayTest, CharArrayWithNoTerminatingNul) {TEST799,24559
TEST(PrintArrayTest, CharArrayWithTerminatingNul) {TEST806,24819
TEST(PrintArrayTest, Char8ArrayWithNoTerminatingNul) {TEST813,25010
class AllowsGenericStreaming {};AllowsGenericStreaming957,30424
class AllowsGenericStreamingTemplate {};AllowsGenericStreamingTemplate974,30918
class AllowsGenericStreamingAndImplicitConversionTemplate {AllowsGenericStreamingAndImplicitConversionTemplate992,31521
  operator bool() const { return false; }operator bool994,31590
struct iterator {iterator1186,37403
  char x;x1187,37421
struct const_iterator {const_iterator1197,37618
  char x;x1198,37642
struct Big {Big1277,40115
  Big() { memset(array, 0, sizeof(array)); }Big1278,40128
  char array[257];array1279,40173
#define EXPECT_PRINT_TO_STRING_(EXPECT_PRINT_TO_STRING_1555,50659
                std::unique_ptr<void, void (*)(void*)>(p.get(), [](void*) {})));__anona0016b9c06021823,60544
            PrintToString(std::shared_ptr<void>(p.get(), [](void*) {})));__anona0016b9c07021826,60738
class PrintAnyTest : public ::testing::Test {PrintAnyTest1859,61840
  static std::string ExpectedTypeName() {ExpectedTypeName1862,61922
struct NonPrintable {NonPrintable1903,63035
  unsigned char contents = 17;contents1904,63057
  using Type = internal::Variant<int, StreamableInGlobal, NonPrintable>;Type1908,63122
namespace {__anona0016b9c08111918,63605
class string_ptr {string_ptr1924,63699
  string_ptr(const char* data, size_t size) : data_(data), size_(size) {}string_ptr1926,63727
  string_ptr& operator++() noexcept {operator ++1928,63802
  const char* data_;data_1936,63935
  size_t size_;size_1937,63956
class string_ref {string_ref1943,64041
  string_ref(const char* data, size_t size) : data_(data), size_(size) {}string_ref1945,64069
  string_ptr operator&() const noexcept { return {data_, size_}; }  // NOLINToperator &1947,64144
  bool operator==(const char* s) const noexcept {operator ==1949,64223
  const char* data_;data_1958,64462
  size_t size_;size_1959,64483
string_ref string_ptr::operator*() const noexcept { return {data_, size_}; }operator *1962,64503
TEST(string_ref, compare) {TEST1964,64581

build/_deps/googletest-src/googletest/test/gtest_help_test.py,1852
IS_LINUX = os.name == 'posix' and os.uname()[0] == 'Linux'IS_LINUX46,1859
IS_GNUHURD = os.name == 'posix' and os.uname()[0] == 'GNU'IS_GNUHURD47,1918
IS_GNUKFREEBSD = os.name == 'posix' and os.uname()[0] == 'GNU/kFreeBSD'IS_GNUKFREEBSD48,1977
IS_OPENBSD = os.name == 'posix' and os.uname()[0] == 'OpenBSD'IS_OPENBSD49,2049
IS_WINDOWS = os.name == 'nt'IS_WINDOWS50,2112
PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_help_test_')PROGRAM_PATH52,2142
FLAG_PREFIX = '--gtest_'FLAG_PREFIX53,2216
DEATH_TEST_STYLE_FLAG = FLAG_PREFIX + 'death_test_style'DEATH_TEST_STYLE_FLAG54,2241
STREAM_RESULT_TO_FLAG = FLAG_PREFIX + 'stream_result_to'STREAM_RESULT_TO_FLAG55,2298
UNKNOWN_GTEST_PREFIXED_FLAG = FLAG_PREFIX + 'unknown_flag_for_testing'UNKNOWN_GTEST_PREFIXED_FLAG56,2355
LIST_TESTS_FLAG = FLAG_PREFIX + 'list_tests'LIST_TESTS_FLAG57,2426
INTERNAL_FLAG_FOR_TESTING = FLAG_PREFIX + 'internal_flag_for_testing'INTERNAL_FLAG_FOR_TESTING58,2471
SUPPORTS_DEATH_TESTS = "DeathTest" in gtest_test_utils.Subprocess(SUPPORTS_DEATH_TESTS60,2542
HAS_ABSL_FLAGS = '--has_absl_flags' in sys.argvHAS_ABSL_FLAGS63,2654
HELP_REGEX = re.compile(HELP_REGEX66,2745
def RunWithFlag(flag):RunWithFlag83,3268
class GTestHelpTest(gtest_test_utils.TestCase):GTestHelpTest100,3665
  def TestHelpFlag(self, flag):TestHelpFlag103,3770
  def TestUnknownFlagWithAbseil(self, flag):TestUnknownFlagWithAbseil133,4689
  def TestNonHelpFlag(self, flag):TestNonHelpFlag146,5116
  def testPrintsHelpWithFullFlag(self):testPrintsHelpWithFullFlag160,5534
  def testPrintsHelpWithUnrecognizedGoogleTestFlag(self):testPrintsHelpWithUnrecognizedGoogleTestFlag163,5607
  def testRunsTestsWithoutHelpFlag(self):testRunsTestsWithoutHelpFlag173,6064
  def testRunsTestsWithGtestInternalFlag(self):testRunsTestsWithGtestInternalFlag179,6254

build/_deps/googletest-src/googletest/test/googletest-output-test-golden-lin.txt,0

build/_deps/googletest-src/googletest/test/googletest-color-test_.cc,91
TEST(GTestColorTest, Dummy) {}TEST45,2129
int main(int argc, char** argv) {main47,2161

build/_deps/googletest-src/googletest/test/gtest_list_output_unittest.py,572
GTEST_LIST_TESTS_FLAG = '--gtest_list_tests'GTEST_LIST_TESTS_FLAG45,2043
GTEST_OUTPUT_FLAG = '--gtest_output'GTEST_OUTPUT_FLAG46,2088
EXPECTED_XML = """<\?xml version="1.0" encoding="UTF-8"\?>EXPECTED_XML48,2126
EXPECTED_JSON = """{EXPECTED_JSON83,4209
class GTestListTestsOutputUnitTest(gtest_test_utils.TestCase):GTestListTestsOutputUnitTest226,7387
  def testXml(self):testXml230,7536
  def testJSON(self):testJSON238,7786
  def _GetOutput(self, out_format):_GetOutput246,8039
  def _TestOutput(self, test_format, expected_output):_TestOutput268,8776

build/_deps/googletest-src/googletest/test/gtest-unittest-api_test.cc,1246
namespace testing {testing43,1843
namespace internal {internal44,1863
struct LessByName {LessByName47,1907
  bool operator()(const T* a, const T* b) {operator ()48,1927
class UnitTestHelper {UnitTestHelper53,2024
  static TestSuite const** GetSortedTestSuites() {GetSortedTestSuites57,2197
  static const TestSuite* FindTestSuite(const char* name) {FindTestSuite72,2780
  static TestInfo const** GetSortedTests(const TestSuite* test_suite) {GetSortedTests84,3282
class TestSuiteWithCommentTest : public Test {};TestSuiteWithCommentTest98,3728
TYPED_TEST(TestSuiteWithCommentTest, Dummy) {}TYPED_TEST100,3833
const int kTypedTestSuites = 1;kTypedTestSuites102,3881
const int kTypedTests = 1;kTypedTests103,3913
TEST(ApiTest, UnitTestImmutableAccessorsWork) {TEST108,4161
AssertionResult IsNull(const char* str) {IsNull132,5079
TEST(ApiTest, TestSuiteImmutableAccessorsWork) {TEST139,5246
TEST(ApiTest, TestSuiteDisabledAccessorsWork) {TEST200,7632
TEST(ApiTest, DISABLED_Dummy1) {}TEST221,8536
TEST(DISABLED_Test, Dummy2) {}TEST222,8570
class FinalSuccessChecker : public Environment {FinalSuccessChecker224,8602
  void TearDown() override {TearDown226,8663
int main(int argc, char** argv) {main322,12878

build/_deps/googletest-src/googletest/test/production.h,230
#define GOOGLETEST_TEST_PRODUCTION_H_GOOGLETEST_TEST_PRODUCTION_H_34,1650
class PrivateCode {PrivateCode38,1720
  int x() const { return x_; }x48,1996
  void set_x(int an_x) { x_ = an_x; }set_x51,2038
  int x_;x_52,2076

build/_deps/googletest-src/googletest/test/gtest_sole_header_test.cc,223
namespace {__anone247de8e011136,1694
void Subroutine() { EXPECT_EQ(42, 42); }Subroutine38,1707
TEST(NoFatalFailureTest, ExpectNoFatalFailure) {TEST40,1749
TEST(NoFatalFailureTest, AssertNoFatalFailure) {TEST47,1953

build/_deps/googletest-src/googletest/test/googletest-param-test-invalid-name2-test.py,429
binary_name = 'googletest-param-test-invalid-name2-test_'binary_name35,1675
COMMAND = gtest_test_utils.GetTestExecutablePath(binary_name)COMMAND36,1733
def Assert(condition):Assert39,1797
def TestExitCodeAndOutput(command):TestExitCodeAndOutput44,1867
class GTestParamTestInvalidName2Test(gtest_test_utils.TestCase):GTestParamTestInvalidName2Test56,2165
  def testExitCodeAndOutput(self):testExitCodeAndOutput58,2231

build/_deps/googletest-src/googletest/test/googletest-uninitialized-test_.cc,90
TEST(DummyTest, Dummy) {TEST32,1583
int main() { return RUN_ALL_TESTS(); }main39,1836

build/_deps/googletest-src/googletest/test/googletest-throw-on-failure-test_.cc,98
void TerminateHandler() {TerminateHandler46,2166
int main(int argc, char** argv) {main52,2304

build/_deps/googletest-src/googletest/test/googletest-global-environment-unittest.py,444
def RunAndReturnOutput(args=None):RunAndReturnOutput42,1947
class GTestGlobalEnvironmentUnitTest(gtest_test_utils.TestCase):GTestGlobalEnvironmentUnitTest51,2204
  def testEnvironmentSetUpFails(self):testEnvironmentSetUpFails54,2318
  def testEnvironmentSetUpAndTornDownForEachRepeat(self):testEnvironmentSetUpAndTornDownForEachRepeat71,2874
  def testEnvironmentSetUpAndTornDownOnce(self):testEnvironmentSetUpAndTornDownOnce100,4079

build/_deps/googletest-src/googletest/cmake/gtest_main.pc.in,0

build/_deps/googletest-src/googletest/cmake/internal_utils.cmake,4190
macro(fix_default_compiler_settings_)fix_default_compiler_settings_23,774
macro(config_compiler_and_linker)config_compiler_and_linker64,2968
      set(GTEST_HAS_PTHREAD ON)GTEST_HAS_PTHREAD72,3315
    set(cxx_base_flags "-GS -W4 -WX -wd4251 -wd4275 -nologo -J")cxx_base_flags80,3553
    set(cxx_base_flags "${cxx_base_flags} -D_UNICODE -DUNICODE -DWIN32 -D_WIN32")cxx_base_flags81,3618
    set(cxx_base_flags "${cxx_base_flags} -DSTRICT -DWIN32_LEAN_AND_MEAN")cxx_base_flags82,3700
    set(cxx_exception_flags "-EHsc -D_HAS_EXCEPTIONS=1")cxx_exception_flags83,3775
    set(cxx_no_exception_flags "-EHs-c- -D_HAS_EXCEPTIONS=0")cxx_no_exception_flags84,3832
    set(cxx_no_rtti_flags "-GR-")cxx_no_rtti_flags85,3894
    set(cxx_base_flags "${cxx_base_flags} -wd4702")cxx_base_flags88,4039
      set(cxx_base_flags "${cxx_base_flags} -utf-8")cxx_base_flags91,4193
    set(cxx_base_flags "-Wall -Wshadow -Wconversion")cxx_base_flags94,4308
    set(cxx_exception_flags "-fexceptions")cxx_exception_flags95,4362
    set(cxx_no_exception_flags "-fno-exceptions")cxx_no_exception_flags96,4406
    set(cxx_strict_flags "-W -Wpointer-arith -Wreturn-type -Wcast-qual -Wwrite-strings -Wswitch cxx_strict_flags97,4456
    set(cxx_no_rtti_flags "-fno-rtti")cxx_no_rtti_flags98,4631
    set(cxx_base_flags "-Wall -Wshadow")cxx_base_flags100,4706
      set(cxx_base_flags "${cxx_base_flags} -Wno-error=dangling-else")cxx_base_flags102,4805
    set(cxx_exception_flags "-fexceptions")cxx_exception_flags104,4888
    set(cxx_no_exception_flags "-fno-exceptions")cxx_no_exception_flags105,4932
    set(cxx_no_rtti_flags "-fno-rtti -DGTEST_HAS_RTTI=0")cxx_no_rtti_flags109,5133
    set(cxx_strict_flagscxx_strict_flags110,5191
    set(cxx_exception_flags "-features=except")cxx_exception_flags113,5338
    set(cxx_no_exception_flags "-features=no%except -DGTEST_HAS_EXCEPTIONS=0")cxx_no_exception_flags116,5519
    set(cxx_no_rtti_flags "-features=no%rtti -DGTEST_HAS_RTTI=0")cxx_no_rtti_flags117,5598
    set(cxx_exception_flags "-qeh")cxx_exception_flags121,5821
    set(cxx_no_exception_flags "-qnoeh")cxx_no_exception_flags122,5857
    set(cxx_no_rtti_flags "-qnortti -DGTEST_HAS_RTTI=0")cxx_no_rtti_flags126,6054
    set(cxx_base_flags "-AA -mt")cxx_base_flags128,6158
    set(cxx_exception_flags "-DGTEST_HAS_EXCEPTIONS=1")cxx_exception_flags129,6192
    set(cxx_no_exception_flags "+noeh -DGTEST_HAS_EXCEPTIONS=0")cxx_no_exception_flags130,6248
    set(cxx_no_rtti_flags "")cxx_no_rtti_flags132,6364
    set(GTEST_HAS_PTHREAD_MACRO "-DGTEST_HAS_PTHREAD=1")GTEST_HAS_PTHREAD_MACRO137,6489
    set(GTEST_HAS_PTHREAD_MACRO "-DGTEST_HAS_PTHREAD=0")GTEST_HAS_PTHREAD_MACRO139,6555
  set(cxx_base_flags "${cxx_base_flags} ${GTEST_HAS_PTHREAD_MACRO}")cxx_base_flags141,6622
  set(cxx_exception "${cxx_base_flags} ${cxx_exception_flags}")cxx_exception144,6740
  set(cxx_no_exceptioncxx_no_exception145,6804
  set(cxx_default "${cxx_exception}")cxx_default147,6897
  set(cxx_no_rtti "${cxx_default} ${cxx_no_rtti_flags}")cxx_no_rtti148,6935
  set(cxx_strict "${cxx_default} ${cxx_strict_flags}")cxx_strict151,7031
function(cxx_library_with_type name type cxx_flags)cxx_library_with_type156,7186
      set(threads_spec ${CMAKE_THREAD_LIBS_INIT})threads_spec192,8665
      set(threads_spec Threads::Threads)threads_spec194,8726
function(cxx_shared_library name cxx_flags)cxx_shared_library208,9100
function(cxx_library name cxx_flags)cxx_library212,9222
function(cxx_executable_with_flags name cxx_flags libs)cxx_executable_with_flags220,9535
    set(cxx_flags "${cxx_flags} -bigobj")cxx_flags224,9670
function(cxx_executable name dir libs)cxx_executable248,10419
  set(PYTHONINTERP_FOUND ${Python_Interpreter_FOUND})PYTHONINTERP_FOUND264,10933
  set(PYTHON_EXECUTABLE ${Python_EXECUTABLE})PYTHON_EXECUTABLE265,10987
function(cxx_test_with_flags name cxx_flags libs)cxx_test_with_flags272,11227
function(cxx_test name libs)cxx_test282,11659
function(py_test name)py_test291,11940
function(install_project)install_project325,13698
      set(configured_pc "${generated_dir}/${t}.pc")configured_pc349,14746

build/_deps/googletest-src/googletest/cmake/Config.cmake.in,98
  set(THREADS_PREFER_PTHREAD_FLAG @THREADS_PREFER_PTHREAD_FLAG@)THREADS_PREFER_PTHREAD_FLAG4,74

build/_deps/googletest-src/googletest/cmake/libgtest.la.in,0

build/_deps/googletest-src/googletest/cmake/gtest.pc.in,0

build/_deps/googletest-src/googletest/CMakeLists.txt,1381
  gtest_force_shared_crtgtest_force_shared_crt14,499
option(gtest_build_tests "Build all of gtest's own tests." OFF)gtest_build_tests18,612
option(gtest_build_samples "Build gtest's sample programs." OFF)gtest_build_samples20,677
option(gtest_disable_pthreads "Disable uses of pthreads in gtest." OFF)gtest_disable_pthreads22,743
  gtest_hide_internal_symbolsgtest_hide_internal_symbols25,824
project(gtest VERSION ${GOOGLETEST_VERSION} LANGUAGES CXX C)gtest51,1562
  option(BUILD_SHARED_LIBS "Build shared libraries (DLLs)." OFF)BUILD_SHARED_LIBS66,2047
  set(CMAKE_CXX_VISIBILITY_PRESET hidden)CMAKE_CXX_VISIBILITY_PRESET81,2318
  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)CMAKE_VISIBILITY_INLINES_HIDDEN82,2360
set(cmake_package_name GTest CACHE INTERNAL "")cmake_package_name92,2655
  set(targets_export_name ${cmake_package_name}Targets CACHE INTERNAL "")targets_export_name97,2805
  set(generated_dir "${CMAKE_CURRENT_BINARY_DIR}/generated" CACHE INTERNAL "")generated_dir98,2879
  set(cmake_files_install_dir "${CMAKE_INSTALL_LIBDIR}/cmake/${cmake_package_name}")cmake_files_install_dir99,2958
  set(version_file "${generated_dir}/${cmake_package_name}ConfigVersion.cmake")version_file100,3043
  set(config_file "${generated_dir}/${cmake_package_name}Config.cmake")config_file105,3357
set(gtest_build_include_dirsgtest_build_include_dirs113,3719

build/_deps/googletest-src/googletest/README.md,688
### Generic Build InstructionsGeneric Build Instructions1,0
#### SetupSetup3,32
### Build with CMakeBuild with CMake9,266
#### Standalone CMake ProjectStandalone CMake Project22,851
#### Incorporating Into An Existing CMake ProjectIncorporating Into An Existing CMake Project57,1944
##### Visual Studio Dynamic vs Static RuntimesVisual Studio Dynamic vs Static Runtimes112,4572
#### C++ Standard VersionC++ Standard Version125,5150
### Tweaking GoogleTestTweaking GoogleTest134,5590
### Multi-threaded TestsMulti-threaded Tests145,6201
### As a Shared Library (DLL)As a Shared Library (DLL)167,6965
### Avoiding Macro Name ClashesAvoiding Macro Name Clashes193,7976

build/_deps/googletest-src/googletest/include/gtest/gtest_pred_impl.h,2223
#define GOOGLETEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_GOOGLETEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_37,1788
namespace testing {testing43,1966
#define GTEST_ASSERT_(GTEST_ASSERT_77,3070
AssertionResult AssertPred1Helper(const char* pred_text, const char* e1,AssertPred1Helper87,3574
#define GTEST_PRED_FORMAT1_(GTEST_PRED_FORMAT1_99,4033
#define GTEST_PRED1_(GTEST_PRED1_104,4234
#define EXPECT_PRED_FORMAT1(EXPECT_PRED_FORMAT1108,4397
#define EXPECT_PRED1(EXPECT_PRED1110,4508
#define ASSERT_PRED_FORMAT1(ASSERT_PRED_FORMAT1111,4587
#define ASSERT_PRED1(ASSERT_PRED1113,4695
AssertionResult AssertPred2Helper(const char* pred_text, const char* e1,AssertPred2Helper118,4915
#define GTEST_PRED_FORMAT2_(GTEST_PRED_FORMAT2_133,5540
#define GTEST_PRED2_(GTEST_PRED2_138,5754
#define EXPECT_PRED_FORMAT2(EXPECT_PRED_FORMAT2143,5979
#define EXPECT_PRED2(EXPECT_PRED2145,6098
#define ASSERT_PRED_FORMAT2(ASSERT_PRED_FORMAT2147,6189
#define ASSERT_PRED2(ASSERT_PRED2149,6305
AssertionResult AssertPred3Helper(const char* pred_text, const char* e1,AssertPred3Helper155,6550
#define GTEST_PRED_FORMAT3_(GTEST_PRED_FORMAT3_171,7298
#define GTEST_PRED3_(GTEST_PRED3_176,7525
#define EXPECT_PRED_FORMAT3(EXPECT_PRED_FORMAT3182,7817
#define EXPECT_PRED3(EXPECT_PRED3184,7944
#define ASSERT_PRED_FORMAT3(ASSERT_PRED_FORMAT3186,8043
#define ASSERT_PRED3(ASSERT_PRED3188,8167
AssertionResult AssertPred4Helper(const char* pred_text, const char* e1,AssertPred4Helper194,8433
#define GTEST_PRED_FORMAT4_(GTEST_PRED_FORMAT4_212,9338
#define GTEST_PRED4_(GTEST_PRED4_217,9578
#define EXPECT_PRED_FORMAT4(EXPECT_PRED_FORMAT4223,9884
#define EXPECT_PRED4(EXPECT_PRED4225,10019
#define ASSERT_PRED_FORMAT4(ASSERT_PRED_FORMAT4227,10126
#define ASSERT_PRED4(ASSERT_PRED4229,10258
AssertionResult AssertPred5Helper(const char* pred_text, const char* e1,AssertPred5Helper236,10555
#define GTEST_PRED_FORMAT5_(GTEST_PRED_FORMAT5_256,11617
#define GTEST_PRED5_(GTEST_PRED5_262,11889
#define EXPECT_PRED_FORMAT5(EXPECT_PRED_FORMAT5268,12192
#define EXPECT_PRED5(EXPECT_PRED5270,12335
#define ASSERT_PRED_FORMAT5(ASSERT_PRED_FORMAT5272,12450
#define ASSERT_PRED5(ASSERT_PRED5274,12590

build/_deps/googletest-src/googletest/include/gtest/gtest-matchers.h,12593
#define GOOGLETEST_INCLUDE_GTEST_GTEST_MATCHERS_H_GOOGLETEST_INCLUDE_GTEST_GTEST_MATCHERS_H_40,1916
#define GTEST_MAYBE_5046_ GTEST_MAYBE_5046_54,2280
#define GTEST_MAYBE_5046_GTEST_MAYBE_5046_56,2317
namespace testing {testing64,2585
class MatchResultListener {MatchResultListener77,3079
  explicit MatchResultListener(::std::ostream* os) : stream_(os) {}MatchResultListener82,3294
  MatchResultListener& operator<<(const T& x) {operator <<88,3540
  ::std::ostream* stream() { return stream_; }stream94,3691
  bool IsInterested() const { return stream_ != nullptr; }IsInterested100,3984
inline MatchResultListener::~MatchResultListener() {}~MatchResultListener109,4223
class GTEST_API_ MatcherDescriberInterface {MatcherDescriberInterface113,4361
  virtual ~MatcherDescriberInterface() {}~MatcherDescriberInterface115,4415
  virtual void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo130,5206
class MatcherInterface : public MatcherDescriberInterface {MatcherInterface139,5390
namespace internal {internal179,7492
struct AnyEq {AnyEq181,7514
  bool operator()(const A& a, const B& b) const {operator ()183,7565
struct AnyNe {AnyNe187,7641
  bool operator()(const A& a, const B& b) const {operator ()189,7692
struct AnyLt {AnyLt193,7768
  bool operator()(const A& a, const B& b) const {operator ()195,7819
struct AnyGt {AnyGt199,7894
  bool operator()(const A& a, const B& b) const {operator ()201,7945
struct AnyLe {AnyLe205,8020
  bool operator()(const A& a, const B& b) const {operator ()207,8071
struct AnyGe {AnyGe211,8147
  bool operator()(const A& a, const B& b) const {operator ()213,8198
class DummyMatchResultListener : public MatchResultListener {DummyMatchResultListener219,8332
  DummyMatchResultListener() : MatchResultListener(nullptr) {}DummyMatchResultListener221,8403
class StreamMatchResultListener : public MatchResultListener {StreamMatchResultListener231,8800
  explicit StreamMatchResultListener(::std::ostream* os)StreamMatchResultListener233,8872
struct SharedPayloadBase {SharedPayloadBase242,9140
  std::atomic<int> ref{1};ref243,9167
  void Ref() { ref.fetch_add(1, std::memory_order_relaxed); }Ref244,9194
  bool Unref() { return ref.fetch_sub(1, std::memory_order_acq_rel) == 1; }Unref245,9256
struct SharedPayload : SharedPayloadBase {SharedPayload249,9358
  explicit SharedPayload(const T& v) : value(v) {}SharedPayload250,9401
  explicit SharedPayload(T&& v) : value(std::move(v)) {}SharedPayload251,9452
  static void Destroy(SharedPayloadBase* shared) {Destroy253,9510
  T value;value257,9614
class MatcherBase : private MatcherDescriberInterface {MatcherBase264,9831
  bool MatchAndExplain(const T& x, MatchResultListener* listener) const {MatchAndExplain268,10003
  bool Matches(const T& x) const {Matches274,10236
  void DescribeTo(::std::ostream* os) const final {DescribeTo280,10394
  void DescribeNegationTo(::std::ostream* os) const final {DescribeNegationTo286,10589
  void ExplainMatchResultTo(const T& x, ::std::ostream* os) const {ExplainMatchResultTo292,10792
  const MatcherDescriberInterface* GetDescriber() const {GetDescriber300,11114
  MatcherBase() : vtable_(nullptr), buffer_() {}MatcherBase306,11275
  explicit MatcherBase(const MatcherInterface<U>* impl)MatcherBase310,11400
  MatcherBase(M&& m) : vtable_(nullptr), buffer_() {  // NOLINTMatcherBase317,11638
  MatcherBase(const MatcherBase& other)MatcherBase321,11737
  MatcherBase& operator=(const MatcherBase& other) {operator =326,11882
  MatcherBase(MatcherBase&& other)MatcherBase335,12112
  MatcherBase& operator=(MatcherBase&& other) {operator =340,12238
  ~MatcherBase() override { Destroy(); }~MatcherBase349,12449
  struct VTable {VTable352,12501
    bool (*match_and_explain)(const MatcherBase&, const T&,match_and_explain353,12519
    void (*describe)(const MatcherBase&, std::ostream*, bool negation);describe355,12632
    const MatcherDescriberInterface* (*get_describer)(const MatcherBase&);get_describer358,12820
    void (*shared_destroy)(SharedPayloadBase*);shared_destroy360,12965
  bool IsShared() const {IsShared363,13019
  static auto MatchAndExplainImpl(const MatcherBase& m, const T& value,MatchAndExplainImpl369,13198
  static auto MatchAndExplainImpl(const MatcherBase& m, const T& value,MatchAndExplainImpl376,13503
  static void DescribeImpl(const MatcherBase& m, std::ostream* os,DescribeImpl383,13788
  static const MatcherDescriberInterface* GetDescriberImpl(GetDescriberImpl393,14039
  const VTable* GetVTable() {GetVTable409,14744
  union Buffer {Buffer416,15002
    void* ptr;ptr418,15094
    double d;d419,15109
    int64_t i;i420,15123
    SharedPayloadBase* shared;shared422,15184
  void Destroy() {Destroy425,15221
  static constexpr bool IsInlined() {IsInlined432,15371
  struct ValuePolicy {ValuePolicy439,15663
    static const M& Get(const MatcherBase& m) {Get440,15686
    static void Init(MatcherBase& m, M impl) {Init447,15961
    static constexpr auto shared_destroy = nullptr;shared_destroy450,16068
  struct ValuePolicy<M, false> {ValuePolicy454,16150
    using Shared = SharedPayload<M>;Shared455,16183
    static const M& Get(const MatcherBase& m) {Get456,16220
    static void Init(MatcherBase& m, Arg&& arg) {Init460,16362
    static constexpr auto shared_destroy = &Shared::Destroy;shared_destroy463,16479
  struct ValuePolicy<const MatcherInterface<U>*, B> {ValuePolicy467,16578
    using M = const MatcherInterface<U>;M468,16632
    using Shared = SharedPayload<std::unique_ptr<M>>;Shared469,16673
    static const M& Get(const MatcherBase& m) {Get470,16727
    static void Init(MatcherBase& m, M* impl) {Init473,16842
    static constexpr auto shared_destroy = &Shared::Destroy;shared_destroy477,16960
  void Init(M&& m) {Init481,17051
    using MM = typename std::decay<M>::type;MM482,17072
    using Policy = ValuePolicy<MM>;Policy483,17117
  const VTable* vtable_;vtable_488,17238
  Buffer buffer_;buffer_489,17263
class Matcher : public internal::MatcherBase<T> {Matcher499,17585
  explicit Matcher() {}  // NOLINTMatcher504,17860
  explicit Matcher(const MatcherInterface<const T&>* impl)Matcher507,17947
  explicit Matcher(Matcher511,18073
  Matcher(M&& m) : internal::MatcherBase<T>(std::forward<M>(m)) {}  // NOLINTMatcher519,18391
class GTEST_API_ Matcher<const std::string&>Matcher530,18812
  Matcher() {}Matcher533,18923
  explicit Matcher(const MatcherInterface<const std::string&>* impl)Matcher535,18939
  Matcher(M&& m)  // NOLINTMatcher540,19191
class GTEST_API_ Matcher<std::string>Matcher552,19563
  Matcher() {}Matcher555,19660
  explicit Matcher(const MatcherInterface<const std::string&>* impl)Matcher557,19676
  explicit Matcher(const MatcherInterface<std::string>* impl)Matcher559,19797
  Matcher(M&& m)  // NOLINTMatcher564,20035
class GTEST_API_ Matcher<const internal::StringView&>Matcher580,20597
  Matcher() {}Matcher583,20726
  explicit Matcher(const MatcherInterface<const internal::StringView&>* impl)Matcher585,20742
  Matcher(M&& m)  // NOLINTMatcher590,21012
class GTEST_API_ Matcher<internal::StringView>Matcher606,21522
  Matcher() {}Matcher609,21637
  explicit Matcher(const MatcherInterface<const internal::StringView&>* impl)Matcher611,21653
  explicit Matcher(const MatcherInterface<internal::StringView>* impl)Matcher613,21792
  Matcher(M&& m)  // NOLINTMatcher618,22048
std::ostream& operator<<(std::ostream& os, const Matcher<T>& matcher) {operator <<635,22648
class PolymorphicMatcher {PolymorphicMatcher653,23350
  explicit PolymorphicMatcher(const Impl& an_impl) : impl_(an_impl) {}PolymorphicMatcher655,23386
  Impl& mutable_impl() { return impl_; }mutable_impl659,23545
  const Impl& impl() const { return impl_; }impl663,23677
  operator Matcher<T>() const {operator Matcher<T>666,23747
  class MonomorphicImpl : public MatcherInterface<T> {MonomorphicImpl672,23879
    explicit MonomorphicImpl(const Impl& impl) : impl_(impl) {}MonomorphicImpl674,23945
    void DescribeTo(::std::ostream* os) const override { impl_.DescribeTo(os); }DescribeTo676,24010
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo678,24092
    bool MatchAndExplain(T x, MatchResultListener* listener) const override {MatchAndExplain682,24200
    const Impl impl_;impl_687,24346
  Impl impl_;impl_690,24374
inline Matcher<T> MakeMatcher(const MatcherInterface<T>* impl) {MakeMatcher700,24720
inline PolymorphicMatcher<Impl> MakePolymorphicMatcher(const Impl& impl) {MakePolymorphicMatcher712,25128
namespace internal {internal716,25247
class ComparisonBase {ComparisonBase728,25839
  explicit ComparisonBase(const Rhs& rhs) : rhs_(rhs) {}ComparisonBase730,25871
  using is_gtest_matcher = void;is_gtest_matcher732,25929
  bool MatchAndExplain(const Lhs& lhs, std::ostream*) const {MatchAndExplain735,25989
  void DescribeTo(std::ostream* os) const {DescribeTo738,26091
  void DescribeNegationTo(std::ostream* os) const {DescribeNegationTo742,26206
  static const T& Unwrap(const T& v) {Unwrap749,26371
  static const T& Unwrap(std::reference_wrapper<T> v) {Unwrap753,26452
  Rhs rhs_;rhs_757,26527
class EqMatcher : public ComparisonBase<EqMatcher<Rhs>, Rhs, AnyEq> {EqMatcher761,26567
  explicit EqMatcher(const Rhs& rhs)EqMatcher763,26646
  static const char* Desc() { return "is equal to"; }Desc765,26742
  static const char* NegatedDesc() { return "isn't equal to"; }NegatedDesc766,26796
class NeMatcher : public ComparisonBase<NeMatcher<Rhs>, Rhs, AnyNe> {NeMatcher769,26887
  explicit NeMatcher(const Rhs& rhs)NeMatcher771,26966
  static const char* Desc() { return "isn't equal to"; }Desc773,27062
  static const char* NegatedDesc() { return "is equal to"; }NegatedDesc774,27119
class LtMatcher : public ComparisonBase<LtMatcher<Rhs>, Rhs, AnyLt> {LtMatcher777,27207
  explicit LtMatcher(const Rhs& rhs)LtMatcher779,27286
  static const char* Desc() { return "is <"; }Desc781,27382
  static const char* NegatedDesc() { return "isn't <"; }NegatedDesc782,27429
class GtMatcher : public ComparisonBase<GtMatcher<Rhs>, Rhs, AnyGt> {GtMatcher785,27513
  explicit GtMatcher(const Rhs& rhs)GtMatcher787,27592
  static const char* Desc() { return "is >"; }Desc789,27688
  static const char* NegatedDesc() { return "isn't >"; }NegatedDesc790,27735
class LeMatcher : public ComparisonBase<LeMatcher<Rhs>, Rhs, AnyLe> {LeMatcher793,27819
  explicit LeMatcher(const Rhs& rhs)LeMatcher795,27898
  static const char* Desc() { return "is <="; }Desc797,27994
  static const char* NegatedDesc() { return "isn't <="; }NegatedDesc798,28042
class GeMatcher : public ComparisonBase<GeMatcher<Rhs>, Rhs, AnyGe> {GeMatcher801,28127
  explicit GeMatcher(const Rhs& rhs)GeMatcher803,28206
  static const char* Desc() { return "is >="; }Desc805,28302
  static const char* NegatedDesc() { return "isn't >="; }NegatedDesc806,28350
using StringLike = T;StringLike811,28549
class MatchesRegexMatcher {MatchesRegexMatcher816,28736
  MatchesRegexMatcher(const RE* regex, bool full_match)MatchesRegexMatcher818,28773
  bool MatchAndExplain(const internal::StringView& s,MatchAndExplain822,28915
  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {MatchAndExplain834,29275
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain843,29677
  void DescribeTo(::std::ostream* os) const {DescribeTo850,29938
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo855,30131
  const std::shared_ptr<const RE> regex_;regex_862,30361
  const bool full_match_;full_match_863,30403
inline PolymorphicMatcher<internal::MatchesRegexMatcher> MatchesRegex(MatchesRegex869,30568
PolymorphicMatcher<internal::MatchesRegexMatcher> MatchesRegex(MatchesRegex874,30787
inline PolymorphicMatcher<internal::MatchesRegexMatcher> ContainsRegex(ContainsRegex881,31064
PolymorphicMatcher<internal::MatchesRegexMatcher> ContainsRegex(ContainsRegex886,31285
inline internal::EqMatcher<T> Eq(T x) {Eq895,31640
Matcher<T>::Matcher(T value) {Matcher902,31865
inline Matcher<Lhs> TypedEq(const Rhs& rhs) {TypedEq919,32571
inline internal::GeMatcher<Rhs> Ge(Rhs x) {Ge925,32723
inline internal::GtMatcher<Rhs> Gt(Rhs x) {Gt931,32892
inline internal::LeMatcher<Rhs> Le(Rhs x) {Le937,33062
inline internal::LtMatcher<Rhs> Lt(Rhs x) {Lt943,33231
inline internal::NeMatcher<Rhs> Ne(Rhs x) {Ne949,33401

build/_deps/googletest-src/googletest/include/gtest/gtest-spi.h,1245
#define GOOGLETEST_INCLUDE_GTEST_GTEST_SPI_H_GOOGLETEST_INCLUDE_GTEST_GTEST_SPI_H_34,1729
namespace testing {testing41,1919
class GTEST_API_ ScopedFakeTestPartResultReporterScopedFakeTestPartResultReporter52,2518
  enum InterceptMode {InterceptMode56,2676
    INTERCEPT_ONLY_CURRENT_THREAD,  // Intercepts only thread local failures.INTERCEPT_ONLY_CURRENT_THREAD57,2699
    INTERCEPT_ALL_THREADS           // Intercepts all failures.INTERCEPT_ALL_THREADS58,2777
  const InterceptMode intercept_mode_;intercept_mode_84,3768
  TestPartResultReporterInterface* old_reporter_;old_reporter_85,3807
  TestPartResultArray* const result_;result_86,3857
namespace internal {internal94,4096
class GTEST_API_ SingleFailureChecker {SingleFailureChecker101,4430
  const TestPartResultArray* const results_;results_109,4700
  const TestPartResult::Type type_;type_110,4745
  const std::string substr_;substr_111,4781
#define EXPECT_FATAL_FAILURE(EXPECT_FATAL_FAILURE147,6319
#define EXPECT_FATAL_FAILURE_ON_ALL_THREADS(EXPECT_FATAL_FAILURE_ON_ALL_THREADS165,7647
#define EXPECT_NONFATAL_FAILURE(EXPECT_NONFATAL_FAILURE215,10479
#define EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS(EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS232,11607

build/_deps/googletest-src/googletest/include/gtest/gtest-death-test.h,1139
#define GOOGLETEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_GOOGLETEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_41,1933
namespace testing {testing52,2397
namespace internal {internal56,2444
#define ASSERT_EXIT(ASSERT_EXIT173,7495
#define EXPECT_EXIT(EXPECT_EXIT178,7712
#define ASSERT_DEATH(ASSERT_DEATH184,8045
#define EXPECT_DEATH(EXPECT_DEATH189,8257
class GTEST_API_ ExitedWithCode {ExitedWithCode195,8522
  const int exit_code_;exit_code_203,8767
class GTEST_API_ KilledBySignal {KilledBySignal209,8924
  const int signum_;signum_215,9059
#define EXPECT_DEBUG_DEATH(EXPECT_DEBUG_DEATH264,10564
#define ASSERT_DEBUG_DEATH(ASSERT_DEBUG_DEATH267,10657
#define EXPECT_DEBUG_DEATH(EXPECT_DEBUG_DEATH272,10757
#define ASSERT_DEBUG_DEATH(ASSERT_DEBUG_DEATH274,10834
#define GTEST_UNSUPPORTED_DEATH_TEST(GTEST_UNSUPPORTED_DEATH_TEST314,13237
#define EXPECT_DEATH_IF_SUPPORTED(EXPECT_DEATH_IF_SUPPORTED332,14401
#define ASSERT_DEATH_IF_SUPPORTED(ASSERT_DEATH_IF_SUPPORTED334,14488
#define EXPECT_DEATH_IF_SUPPORTED(EXPECT_DEATH_IF_SUPPORTED337,14581
#define ASSERT_DEATH_IF_SUPPORTED(ASSERT_DEATH_IF_SUPPORTED339,14686

build/_deps/googletest-src/googletest/include/gtest/gtest-typed-test.h,1057
#define GOOGLETEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_GOOGLETEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_35,1723
#define GTEST_TYPE_PARAMS_(GTEST_TYPE_PARAMS_184,7175
#define GTEST_NAME_GENERATOR_(GTEST_NAME_GENERATOR_188,7370
#define TYPED_TEST_SUITE(TYPED_TEST_SUITE191,7470
#define TYPED_TEST(TYPED_TEST197,7801
#define TYPED_TEST_CASE TYPED_TEST_CASE228,10122
#define GTEST_SUITE_NAMESPACE_(GTEST_SUITE_NAMESPACE_240,10634
#define GTEST_TYPED_TEST_SUITE_P_STATE_(GTEST_TYPED_TEST_SUITE_P_STATE_246,10884
#define GTEST_REGISTERED_TEST_NAMES_(GTEST_REGISTERED_TEST_NAMES_253,11178
#define TYPED_TEST_SUITE_P(TYPED_TEST_SUITE_P259,11479
#define TYPED_TEST_CASE_P TYPED_TEST_CASE_P265,11721
#define TYPED_TEST_P(TYPED_TEST_P270,11940
#define REGISTER_TYPED_TEST_SUITE_P(REGISTER_TYPED_TEST_SUITE_P289,13223
#define REGISTER_TYPED_TEST_CASE_P REGISTER_TYPED_TEST_CASE_P300,13933
#define INSTANTIATE_TYPED_TEST_SUITE_P(INSTANTIATE_TYPED_TEST_SUITE_P306,14246
#define INSTANTIATE_TYPED_TEST_CASE_P INSTANTIATE_TYPED_TEST_CASE_P325,15555

build/_deps/googletest-src/googletest/include/gtest/internal/gtest-internal.h,15262
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_40,1926
#define GTEST_CONCAT_TOKEN_(foo, bar) GTEST_CONCAT_TOKEN_IGTEST_CONCAT_TOKEN_82,2957
#define GTEST_CONCAT_TOKEN_IMPL_(GTEST_CONCAT_TOKEN_IMPL_83,3030
#define GTEST_STRINGIFY_HELPER_(GTEST_STRINGIFY_HELPER_94,3409
#define GTEST_STRINGIFY_(...) GTEST_STRINGIFY_HGTEST_STRINGIFY_95,3458
namespace proto2 {proto297,3528
namespace testing {testing101,3569
namespace internal {internal115,3998
class IgnoredValue {IgnoredValue126,4399
  struct Sink {};Sink127,4420
  IgnoredValue(const T& /* ignored */) {}  // NOLINT(runtime/explicit)IgnoredValue140,5001
class GTEST_API_ GoogleTestFailureException : public ::std::runtime_error {GoogleTestFailureException158,5826
namespace edit_distance {edit_distance167,6063
enum EditType { kMatch, kAdd, kRemove, kReplace };EditType173,6350
enum EditType { kMatch, kAdd, kRemove, kReplace };kMatch173,6350
enum EditType { kMatch, kAdd, kRemove, kReplace };kAdd173,6350
enum EditType { kMatch, kAdd, kRemove, kReplace };kRemove173,6350
enum EditType { kMatch, kAdd, kRemove, kReplace };kReplace173,6350
class FloatingPoint {FloatingPoint245,9303
  typedef typename TypeWithSize<sizeof(RawType)>::UInt Bits;Bits249,9431
  static const size_t kBitCount = 8 * sizeof(RawType);kBitCount254,9538
  static const size_t kFractionBitCount =kFractionBitCount257,9631
  static const size_t kExponentBitCount = kBitCount - 1 - kFractionBitCount;kExponentBitCount261,9759
  static const Bits kSignBitMask = static_cast<Bits>(1) << (kBitCount - 1);kSignBitMask264,9869
  static const Bits kFractionBitMask = ~static_cast<Bits>(0) >>kFractionBitMask267,9983
  static const Bits kExponentBitMask = ~(kSignBitMask | kFractionBitMask);kExponentBitMask271,10149
  static const uint32_t kMaxUlps = 4;kMaxUlps285,10890
  explicit FloatingPoint(const RawType& x) { u_.value_ = x; }FloatingPoint293,11249
  static RawType ReinterpretBits(const Bits bits) {ReinterpretBits300,11462
  static RawType Infinity() { return ReinterpretBits(kExponentBitMask); }Infinity307,11666
  const Bits& bits() const { return u_.bits_; }bits315,11911
  Bits exponent_bits() const { return kExponentBitMask & u_.bits_; }exponent_bits318,12007
  Bits fraction_bits() const { return kFractionBitMask & u_.bits_; }fraction_bits321,12124
  Bits sign_bit() const { return kSignBitMask & u_.bits_; }sign_bit324,12236
  bool is_nan() const {is_nan327,12358
  bool AlmostEquals(const FloatingPoint& rhs) const {AlmostEquals339,12872
  union FloatingPointUnion {FloatingPointUnion350,13257
    RawType value_;  // The raw floating-point number.value_351,13286
    Bits bits_;      // The bits that represent the number.bits_352,13341
  static Bits SignAndMagnitudeToBiased(const Bits& sam) {SignAndMagnitudeToBiased370,14066
  static Bits DistanceBetweenSignAndMagnitudeNumbers(const Bits& sam1,DistanceBetweenSignAndMagnitudeNumbers382,14447
  FloatingPointUnion u_;u_389,14787
inline float FloatingPoint<float>::Max() {Max395,14937
inline double FloatingPoint<double>::Max() {Max399,15012
typedef FloatingPoint<float> Float;Float405,15164
typedef FloatingPoint<double> Double;Double406,15200
typedef const void* TypeId;TypeId414,15625
class TypeIdHelper {TypeIdHelper417,15676
  static bool dummy_;dummy_422,15894
bool TypeIdHelper<T>::dummy_ = false;dummy_426,15942
TypeId GetTypeId() {GetTypeId432,16202
class TestFactoryBase {TestFactoryBase449,16869
  virtual ~TestFactoryBase() {}~TestFactoryBase451,16902
  TestFactoryBase() {}TestFactoryBase458,17094
class TestFactoryImpl : public TestFactoryBase {TestFactoryImpl468,17383
  Test* CreateTest() override { return new TestClass; }CreateTest470,17441
using SetUpTestSuiteFunc = void (*)();SetUpTestSuiteFunc487,18087
using TearDownTestSuiteFunc = void (*)();TearDownTestSuiteFunc488,18126
struct CodeLocation {CodeLocation490,18169
  CodeLocation(const std::string& a_file, int a_line)CodeLocation491,18191
  std::string file;file494,18284
  int line;line495,18304
using SetUpTearDownSuiteFuncType = void (*)();SetUpTearDownSuiteFuncType502,18521
inline SetUpTearDownSuiteFuncType GetNotDefaultOrNull(GetNotDefaultOrNull504,18569
struct SuiteApiResolver : T {SuiteApiResolver513,18913
  using Test =Test516,19074
  static SetUpTearDownSuiteFuncType GetSetUpCaseOrSuite(const char* filename,GetSetUpCaseOrSuite519,19168
  static SetUpTearDownSuiteFuncType GetTearDownCaseOrSuite(const char* filename,GetTearDownCaseOrSuite540,19981
class GTEST_API_ TypedTestSuitePState {TypedTestSuitePState595,22550
  TypedTestSuitePState() : registered_(false) {}TypedTestSuitePState597,22599
  bool AddTestName(const char* file, int line, const char* case_name,AddTestName602,22800
  bool TestExists(const std::string& test_name) const {TestExists617,23310
  const CodeLocation& GetCodeLocation(const std::string& test_name) const {GetCodeLocation621,23422
  typedef ::std::map<std::string, CodeLocation, std::less<>> RegisteredTestsMap;RegisteredTestsMap635,24037
  bool registered_;registered_637,24119
  RegisteredTestsMap registered_tests_;registered_tests_638,24139
using TypedTestCasePState = TypedTestSuitePState;TypedTestCasePState643,24274
GTEST_DISABLE_MSC_WARNINGS_POP_()  //  4251GTEST_DISABLE_MSC_WARNINGS_POP_646,24371
inline std::string GetPrefixUntilComma(const char* str) {GetPrefixUntilComma662,24840
struct DefaultNameGenerator {DefaultNameGenerator674,25318
  static std::string GetName(int i) {GetName676,25372
struct NameGeneratorSelector {NameGeneratorSelector682,25504
  typedef Provided type;type683,25535
void GenerateNamesRecursively(internal::None, std::vector<std::string>*, int) {}GenerateNamesRecursively687,25598
void GenerateNamesRecursively(Types, std::vector<std::string>* result, int i) {GenerateNamesRecursively690,25730
std::vector<std::string> GenerateNames() {GenerateNames697,26066
class TypeParameterizedTest {TypeParameterizedTest711,26688
    typedef typename Types::Head Type;Type721,27251
    typedef Fixture<Type> FixtureClass;FixtureClass722,27290
    typedef typename GTEST_BIND_(TestSel, Type) TestClass;TestClass723,27330
class TypeParameterizedTest<Fixture, TestSel, internal::None> {TypeParameterizedTest754,28826
  static bool Register(const char* /*prefix*/, const CodeLocation&,Register756,28899
class TypeParameterizedTestSuite {TypeParameterizedTestSuite775,29830
    std::string test_name =test_name783,30280
    const CodeLocation& test_location = state->GetCodeLocation(test_name);test_location793,30690
    typedef typename Tests::Head Head;Head795,30766
class TypeParameterizedTestSuite<Fixture, internal::None, Types> {TypeParameterizedTestSuite812,31556
  static bool Register(const char* /*prefix*/, const CodeLocation&,Register814,31632
inline bool AlwaysFalse() { return !AlwaysTrue(); }AlwaysFalse842,32742
struct GTEST_API_ ConstCharPtr {ConstCharPtr847,32953
  ConstCharPtr(const char* str) : value(str) {}ConstCharPtr848,32986
  operator bool() const { return true; }operator bool849,33034
  const char* value;value850,33075
struct TrueWithString {TrueWithString855,33193
  explicit TrueWithString(const char* str) : value(str) {}TrueWithString857,33247
  explicit TrueWithString(const std::string& str) : value(str) {}TrueWithString858,33306
  explicit operator bool() const { return true; }operator bool859,33372
  std::string value;value860,33422
class GTEST_API_ Random {Random868,33763
  static const uint32_t kMaxRange = 1u << 31;kMaxRange870,33798
  explicit Random(uint32_t seed) : state_(seed) {}Random872,33845
  void Reseed(uint32_t seed) { state_ = seed; }Reseed874,33897
  uint32_t state_;state_881,34099
#define GTEST_REMOVE_REFERENCE_AND_CONST_(GTEST_REMOVE_REFERENCE_AND_CONST_887,34251
class HasDebugStringAndShortDebugString {HasDebugStringAndShortDebugString894,34585
  using HasDebugStringType = decltype(CheckDebugString<T>(nullptr));HasDebugStringType908,35114
  using HasShortDebugStringType = decltype(CheckShortDebugString<T>(nullptr));HasShortDebugStringType909,35183
  static constexpr bool value =value912,35272
constexpr bool HasDebugStringAndShortDebugString<T>::value;value917,35397
typedef int IsContainer;IsContainer943,36823
IsContainer IsContainerTest(int /* dummy */) {IsContainerTest950,37164
typedef char IsNotContainer;IsNotContainer954,37226
IsNotContainer IsContainerTest(long /* dummy */) {IsContainerTest956,37274
struct IsHashTable {IsHashTable965,37625
  static const bool value = sizeof(test<T>(nullptr, nullptr)) == sizeof(int);value975,37880
const bool IsHashTable<T>::value;value979,37984
struct IsRecursiveContainerImpl<C, false> : public std::false_type {};IsRecursiveContainerImpl986,38168
struct IsRecursiveContainerImpl<C, true> {IsRecursiveContainerImpl993,38550
  using value_type = decltype(*std::declval<typename C::const_iterator>());value_type994,38593
  using type =type995,38669
struct IsRecursiveContainer : public IsRecursiveContainerImpl<C>::type {};IsRecursiveContainer1008,39242
inline bool ArrayEq(const T& lhs, const U& rhs) {ArrayEq1021,39722
inline bool ArrayEq(const T (&lhs)[N], const U (&rhs)[N]) {ArrayEq1027,39878
bool ArrayEq(const T* lhs, size_t size, const U* rhs) {ArrayEq1035,40207
Iter ArrayAwareFind(Iter begin, Iter end, const Element& elem) {ArrayAwareFind1045,40552
inline void CopyArray(const T& from, U* to) {CopyArray1061,41084
inline void CopyArray(const T (&from)[N], U (*to)[N]) {CopyArray1067,41229
void CopyArray(const T* from, size_t size, U* to) {CopyArray1075,41552
struct RelationToSourceReference {};RelationToSourceReference1085,41912
struct RelationToSourceCopy {};RelationToSourceCopy1086,41949
class NativeArray {NativeArray1097,42540
  typedef Element value_type;value_type1100,42604
  typedef Element* iterator;iterator1101,42634
  typedef const Element* const_iterator;const_iterator1102,42663
  NativeArray(const Element* array, size_t count, RelationToSourceReference) {NativeArray1105,42765
  NativeArray(const Element* array, size_t count, RelationToSourceCopy) {NativeArray1110,42932
  NativeArray(const NativeArray& rhs) {NativeArray1115,43062
  ~NativeArray() {~NativeArray1119,43155
  size_t size() const { return size_; }size1124,43271
  const_iterator begin() const { return array_; }begin1125,43311
  const_iterator end() const { return array_ + size_; }end1126,43361
  bool operator==(const NativeArray& rhs) const {operator ==1127,43417
  void InitCopy(const Element* array, size_t a_size) {InitCopy1137,43788
  void InitRef(const Element* array, size_t a_size) {InitRef1146,44067
  const Element* array_;array_1152,44202
  size_t size_;size_1153,44227
  void (NativeArray::*clone_)(const Element*, size_t);clone_1154,44243
struct IndexSequence {IndexSequence1159,44362
  using type = IndexSequence;type1160,44385
struct DoubleSequence<true, IndexSequence<I...>, sizeofT> {DoubleSequence1167,44592
  using type = IndexSequence<I..., (sizeofT + I)..., 2 * sizeofT>;type1168,44652
struct DoubleSequence<false, IndexSequence<I...>, sizeofT> {DoubleSequence1171,44761
  using type = IndexSequence<I..., (sizeofT + I)...>;type1172,44822
struct MakeIndexSequenceImplMakeIndexSequenceImpl1178,44982
struct MakeIndexSequenceImpl<0> : IndexSequence<> {};MakeIndexSequenceImpl1183,45140
using MakeIndexSequence = typename MakeIndexSequenceImpl<N>::type;MakeIndexSequence1186,45215
using IndexSequenceFor = typename MakeIndexSequence<sizeof...(T)>::type;IndexSequenceFor1189,45308
struct Ignore {Ignore1192,45400
struct ElemFromListImpl<IndexSequence<I...>> {ElemFromListImpl1199,45514
struct ElemFromList {ElemFromList1209,45939
  using type =type1210,45961
struct FlatTupleConstructTag {};FlatTupleConstructTag1215,46103
struct FlatTupleElemBase<FlatTuple<T...>, I> {FlatTupleElemBase1224,46280
  using value_type = typename ElemFromList<I, T...>::type;value_type1225,46327
  explicit FlatTupleElemBase(FlatTupleConstructTag, Arg&& t)FlatTupleElemBase1228,46445
  value_type value;value1230,46545
struct FlatTupleBase<FlatTuple<T...>, IndexSequence<Idx...>>FlatTupleBase1237,46674
  using Indices = IndexSequence<Idx...>;Indices1239,46786
  explicit FlatTupleBase(FlatTupleConstructTag, Args&&... args)FlatTupleBase1242,46886
  const typename ElemFromList<I, T...>::type& Get() const {Get1247,47126
  typename ElemFromList<I, T...>::type& Get() {Get1252,47270
  auto Apply(F&& f) -> decltype(std::forward<F>(f)(this->Get<Idx>()...)) {Apply1257,47404
  auto Apply(F&& f) const -> decltype(std::forward<F>(f)(this->Get<Idx>()...)) {Apply1262,47554
class FlatTupleFlatTuple1277,48208
  using Indices = typename FlatTupleBase<Indices1280,48347
  explicit FlatTuple(FlatTupleConstructTag tag, Args&&... args)FlatTuple1286,48535
constexpr bool InstantiateTestCase_P_IsDeprecated() { return true; }InstantiateTestCase_P_IsDeprecated1298,48958
constexpr bool TypedTestCase_P_IsDeprecated() { return true; }TypedTestCase_P_IsDeprecated1303,49132
constexpr bool TypedTestCaseIsDeprecated() { return true; }TypedTestCaseIsDeprecated1308,49296
constexpr bool RegisterTypedTestCase_P_IsDeprecated() { return true; }RegisterTypedTestCase_P_IsDeprecated1313,49479
constexpr bool InstantiateTypedTestCase_P_IsDeprecated() { return true; }InstantiateTypedTestCase_P_IsDeprecated1318,49679
namespace std {std1323,49804
struct tuple_size<testing::internal::FlatTuple<Ts...>>tuple_size1332,50121
#define GTEST_MESSAGE_AT_(GTEST_MESSAGE_AT_1339,50306
#define GTEST_MESSAGE_(GTEST_MESSAGE_1343,50482
#define GTEST_FATAL_FAILURE_(GTEST_FATAL_FAILURE_1346,50592
#define GTEST_NONFATAL_FAILURE_(GTEST_NONFATAL_FAILURE_1349,50708
#define GTEST_SUCCESS_(GTEST_SUCCESS_1352,50823
#define GTEST_SKIP_(GTEST_SKIP_1355,50921
#define GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_1363,51298
namespace testing {testing1371,51673
namespace internal {internal1372,51693
class NeverThrown {NeverThrown1374,51715
  const char* what() const noexcept {what1376,51744
#define GTEST_EXCEPTION_TYPE_(GTEST_EXCEPTION_TYPE_1386,51912
#define GTEST_EXCEPTION_TYPE_(GTEST_EXCEPTION_TYPE_1390,52016
#define GTEST_TEST_THROW_CATCH_STD_EXCEPTION_(GTEST_TEST_THROW_CATCH_STD_EXCEPTION_1395,52131
#define GTEST_TEST_THROW_CATCH_STD_EXCEPTION_(GTEST_TEST_THROW_CATCH_STD_EXCEPTION_1414,53383
#define GTEST_TEST_THROW_(GTEST_TEST_THROW_1418,53494
#define GTEST_TEST_NO_THROW_CATCH_STD_EXCEPTION_(GTEST_TEST_NO_THROW_CATCH_STD_EXCEPTION_1446,55433
#define GTEST_TEST_NO_THROW_CATCH_STD_EXCEPTION_(GTEST_TEST_NO_THROW_CATCH_STD_EXCEPTION_1458,56014
#define GTEST_TEST_NO_THROW_(GTEST_TEST_NO_THROW_1462,56099
#define GTEST_TEST_ANY_THROW_(GTEST_TEST_ANY_THROW_1480,57329
#define GTEST_TEST_BOOLEAN_(GTEST_TEST_BOOLEAN_1501,58726
#define GTEST_TEST_NO_FATAL_FAILURE_(GTEST_TEST_NO_FATAL_FAILURE_1511,59326
#define GTEST_TEST_CLASS_NAME_(GTEST_TEST_CLASS_NAME_1527,60485
#define GTEST_TEST_(GTEST_TEST_1531,60622

build/_deps/googletest-src/googletest/include/gtest/internal/gtest-port.h,26411
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_46,2278
#define GTEST_DEV_EMAIL_ GTEST_DEV_EMAIL_297,13189
#define GTEST_FLAG_PREFIX_ GTEST_FLAG_PREFIX_298,13254
#define GTEST_FLAG_PREFIX_DASH_ GTEST_FLAG_PREFIX_DASH_299,13290
#define GTEST_FLAG_PREFIX_UPPER_ GTEST_FLAG_PREFIX_UPPER_300,13331
#define GTEST_NAME_ GTEST_NAME_301,13373
#define GTEST_PROJECT_URL_ GTEST_PROJECT_URL_302,13407
#define GTEST_INIT_GOOGLE_TEST_NAME_ GTEST_INIT_GOOGLE_TEST_NAME_306,13556
#define GTEST_GCC_VER_ GTEST_GCC_VER_312,13779
#define GTEST_DISABLE_MSC_WARNINGS_PUSH_(GTEST_DISABLE_MSC_WARNINGS_PUSH_322,14114
#define GTEST_DISABLE_MSC_WARNINGS_POP_(GTEST_DISABLE_MSC_WARNINGS_POP_324,14231
#define GTEST_DISABLE_MSC_WARNINGS_PUSH_(GTEST_DISABLE_MSC_WARNINGS_PUSH_327,14332
#define GTEST_DISABLE_MSC_WARNINGS_POP_(GTEST_DISABLE_MSC_WARNINGS_POP_328,14383
#define GTEST_DISABLE_MSC_DEPRECATED_PUSH_(GTEST_DISABLE_MSC_DEPRECATED_PUSH_334,14584
#define GTEST_DISABLE_MSC_DEPRECATED_POP_(GTEST_DISABLE_MSC_DEPRECATED_POP_338,14885
#define GTEST_DISABLE_MSC_DEPRECATED_PUSH_(GTEST_DISABLE_MSC_DEPRECATED_PUSH_340,14967
#define GTEST_DISABLE_MSC_DEPRECATED_POP_(GTEST_DISABLE_MSC_DEPRECATED_POP_342,15055
typedef struct _CRITICAL_SECTION GTEST_CRITICAL_SECTION;GTEST_CRITICAL_SECTION357,15684
typedef struct _RTL_CRITICAL_SECTION GTEST_CRITICAL_SECTION;GTEST_CRITICAL_SECTION362,15908
#define GTEST_HAS_POSIX_RE GTEST_HAS_POSIX_RE386,16740
#define GTEST_HAS_POSIX_RE GTEST_HAS_POSIX_RE388,16796
#define GTEST_USES_RE2 GTEST_USES_RE2398,17064
#define GTEST_USES_POSIX_RE GTEST_USES_POSIX_RE401,17144
#define GTEST_USES_SIMPLE_RE GTEST_USES_SIMPLE_RE404,17224
#define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS412,17499
#define _HAS_EXCEPTIONS _HAS_EXCEPTIONS418,17753
#define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS420,17806
#define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS430,18424
#define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS433,18613
#define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS438,18877
#define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS441,19022
#define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS445,19206
#define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS449,19324
#define GTEST_HAS_STD_WSTRING GTEST_HAS_STD_WSTRING459,19739
#define GTEST_HAS_RTTI GTEST_HAS_RTTI474,20272
#define GTEST_HAS_RTTI GTEST_HAS_RTTI476,20303
#define GTEST_HAS_RTTI GTEST_HAS_RTTI489,20787
#define GTEST_HAS_RTTI GTEST_HAS_RTTI491,20818
#define GTEST_HAS_RTTI GTEST_HAS_RTTI494,20919
#define GTEST_HAS_RTTI GTEST_HAS_RTTI502,21189
#define GTEST_HAS_RTTI GTEST_HAS_RTTI509,21438
#define GTEST_HAS_RTTI GTEST_HAS_RTTI511,21469
#define GTEST_HAS_RTTI GTEST_HAS_RTTI517,21564
#define GTEST_HAS_PTHREAD GTEST_HAS_PTHREAD536,22085
#define GTEST_HAS_CLONE GTEST_HAS_CLONE566,23328
#define GTEST_HAS_CLONE GTEST_HAS_CLONE568,23360
#define GTEST_HAS_CLONE GTEST_HAS_CLONE571,23399
#define GTEST_HAS_CLONE GTEST_HAS_CLONE574,23438
#define GTEST_HAS_STREAM_REDIRECTION GTEST_HAS_STREAM_REDIRECTION587,23977
#define GTEST_HAS_STREAM_REDIRECTION GTEST_HAS_STREAM_REDIRECTION589,24022
#define GTEST_HAS_DEATH_TEST GTEST_HAS_DEATH_TEST602,24735
#define GTEST_HAS_TYPED_TEST GTEST_HAS_TYPED_TEST611,25068
#define GTEST_HAS_TYPED_TEST_P GTEST_HAS_TYPED_TEST_P612,25099
#define GTEST_WIDE_STRING_USES_UTF16_ GTEST_WIDE_STRING_USES_UTF16_616,25221
#define GTEST_CAN_STREAM_RESULTS_ GTEST_CAN_STREAM_RESULTS_623,25562
#define GTEST_AMBIGUOUS_ELSE_BLOCKER_GTEST_AMBIGUOUS_ELSE_BLOCKER_637,26005
#define GTEST_AMBIGUOUS_ELSE_BLOCKER_ GTEST_AMBIGUOUS_ELSE_BLOCKER_639,26049
#define GTEST_HAVE_ATTRIBUTE_(GTEST_HAVE_ATTRIBUTE_656,26658
#define GTEST_HAVE_ATTRIBUTE_(GTEST_HAVE_ATTRIBUTE_658,26716
#define GTEST_HAVE_FEATURE_(GTEST_HAVE_FEATURE_666,26893
#define GTEST_HAVE_FEATURE_(GTEST_HAVE_FEATURE_668,26947
#define GTEST_ATTRIBUTE_UNUSED_ GTEST_ATTRIBUTE_UNUSED_683,27471
#define GTEST_ATTRIBUTE_UNUSED_GTEST_ATTRIBUTE_UNUSED_685,27533
#define GTEST_ATTRIBUTE_PRINTF_(GTEST_ATTRIBUTE_PRINTF_693,27896
#define GTEST_ATTRIBUTE_PRINTF_(GTEST_ATTRIBUTE_PRINTF_696,28075
#define GTEST_ATTRIBUTE_PRINTF_(GTEST_ATTRIBUTE_PRINTF_699,28211
#define GTEST_MUST_USE_RESULT_ GTEST_MUST_USE_RESULT_708,28570
#define GTEST_MUST_USE_RESULT_GTEST_MUST_USE_RESULT_710,28643
#define GTEST_INTENTIONAL_CONST_COND_PUSH_(GTEST_INTENTIONAL_CONST_COND_PUSH_721,29002
#define GTEST_INTENTIONAL_CONST_COND_POP_(GTEST_INTENTIONAL_CONST_COND_POP_723,29090
#define GTEST_HAS_SEH GTEST_HAS_SEH733,29535
#define GTEST_HAS_SEH GTEST_HAS_SEH736,29583
#define GTEST_IS_THREADSAFE GTEST_IS_THREADSAFE743,29670
#define GTEST_API_ GTEST_API_763,30462
#define GTEST_API_ GTEST_API_765,30537
#define GTEST_API_ GTEST_API_768,30625
#define GTEST_API_GTEST_API_774,30746
#define GTEST_DEFAULT_DEATH_TEST_STYLE GTEST_DEFAULT_DEATH_TEST_STYLE778,30827
#define GTEST_NO_INLINE_ GTEST_NO_INLINE_783,31006
#define GTEST_NO_INLINE_GTEST_NO_INLINE_785,31063
#define GTEST_NO_TAIL_CALL_ GTEST_NO_TAIL_CALL_791,31231
#define GTEST_NO_TAIL_CALL_ GTEST_NO_TAIL_CALL_793,31310
#define GTEST_NO_TAIL_CALL_GTEST_NO_TAIL_CALL_796,31403
#define GTEST_HAS_CXXABI_H_ GTEST_HAS_CXXABI_H_802,31625
#define GTEST_HAS_CXXABI_H_ GTEST_HAS_CXXABI_H_804,31661
#define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_811,31870
#define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_813,31956
#define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_818,32130
#define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_821,32222
#define GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_827,32441
#define GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_830,32540
#define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_835,32715
#define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_837,32799
namespace testing {testing840,32851
namespace internal {internal852,33087
class GTEST_API_ RE {RE870,33647
  RE(absl::string_view regex) : regex_(regex) {}                  // NOLINTRE872,33678
  RE(const char* regex) : RE(absl::string_view(regex)) {}         // NOLINTRE873,33754
  RE(const std::string& regex) : RE(absl::string_view(regex)) {}  // NOLINTRE874,33830
  RE(const RE& other) : RE(other.pattern()) {}RE875,33906
  const std::string& pattern() const { return regex_.pattern(); }pattern877,33954
  static bool FullMatch(absl::string_view str, const RE& re) {FullMatch879,34021
  static bool PartialMatch(absl::string_view str, const RE& re) {PartialMatch882,34131
  RE2 regex_;regex_887,34258
class GTEST_API_ RE {RE894,34424
  RE(const RE& other) { Init(other.pattern()); }RE898,34559
  RE(const ::std::string& regex) { Init(regex.c_str()); }  // NOLINTRE901,34646
  RE(const char* regex) { Init(regex); }  // NOLINTRE903,34716
  const char* pattern() const { return pattern_; }pattern907,34831
  static bool FullMatch(const ::std::string& str, const RE& re) {FullMatch913,35119
  static bool PartialMatch(const ::std::string& str, const RE& re) {PartialMatch916,35228
  const char* pattern_;pattern_925,35502
  bool is_valid_;is_valid_926,35526
  regex_t full_regex_;     // For FullMatch().full_regex_930,35570
  regex_t partial_regex_;  // For PartialMatch().partial_regex_931,35617
  const char* full_pattern_;  // For FullMatch();full_pattern_935,35700
enum GTestLogSeverity { GTEST_INFO, GTEST_WARNING, GTEST_ERROR, GTEST_FATAL };GTestLogSeverity958,36674
enum GTestLogSeverity { GTEST_INFO, GTEST_WARNING, GTEST_ERROR, GTEST_FATAL };GTEST_INFO958,36674
enum GTestLogSeverity { GTEST_INFO, GTEST_WARNING, GTEST_ERROR, GTEST_FATAL };GTEST_WARNING958,36674
enum GTestLogSeverity { GTEST_INFO, GTEST_WARNING, GTEST_ERROR, GTEST_FATAL };GTEST_ERROR958,36674
enum GTestLogSeverity { GTEST_INFO, GTEST_WARNING, GTEST_ERROR, GTEST_FATAL };GTEST_FATAL958,36674
class GTEST_API_ GTestLog {GTestLog963,36914
  ::std::ostream& GetStream() { return ::std::cerr; }GetStream970,37113
  const GTestLogSeverity severity_;severity_973,37178
#define GTEST_LOG_(GTEST_LOG_981,37332
inline void LogToStderr() {}LogToStderr986,37571
inline void FlushInfoLog() { fflush(nullptr); }FlushInfoLog987,37600
#define GTEST_CHECK_(GTEST_CHECK_1006,38322
#define GTEST_CHECK_POSIX_SUCCESS_(GTEST_CHECK_POSIX_SUCCESS_1019,38934
struct ConstRef {ConstRef1035,39625
  typedef const T& type;type1036,39643
struct ConstRef<T&> {ConstRef1039,39693
  typedef T& type;type1040,39715
#define GTEST_REFERENCE_TO_CONST_(GTEST_REFERENCE_TO_CONST_1044,39797
inline To ImplicitCast_(To x) {ImplicitCast_1068,40887
inline To DownCast_(From* f) {         // so we only accept pointersDownCast_1094,42300
Derived* CheckedDowncastToActualType(Base* base) {CheckedDowncastToActualType1119,43200
class GTEST_API_ AutoHandle {AutoHandle1172,44850
  typedef void* Handle;Handle1179,45229
  Handle handle_;handle_1194,45527
class GTEST_API_ Notification {Notification1216,46267
  Notification() : notified_(false) {}Notification1218,46308
  void Notify() {Notify1224,46566
  void WaitForNotification() {WaitForNotification1232,46766
    cv_.wait(lock, [this]() { return notified_; });__anon7ec8cc6f01021234,46841
  std::mutex mu_;mu_1238,46908
  std::condition_variable cv_;cv_1239,46926
  bool notified_;notified_1240,46957
class ThreadWithParamBase {ThreadWithParamBase1255,47623
  virtual ~ThreadWithParamBase() {}~ThreadWithParamBase1257,47660
extern "C" inline void* ThreadFuncWithCLinkage(void* thread) {ThreadFuncWithCLinkage1267,48137
class ThreadWithParam : public ThreadWithParamBase {ThreadWithParam1285,48807
  typedef void UserThreadFunc(T);UserThreadFunc1287,48869
  ThreadWithParam(UserThreadFunc* func, T param, Notification* thread_can_start)ThreadWithParam1289,48904
  ~ThreadWithParam() override { Join(); }~ThreadWithParam1300,49356
  void Join() {Join1302,49399
  void Run() override {Run1309,49538
  UserThreadFunc* const func_;  // User-supplied thread function.func_1315,49676
  const T param_;  // User-supplied parameter to the thread function.param_1316,49742
  Notification* const thread_can_start_;thread_can_start_1319,49899
  bool finished_;  // true if and only if we know that the thread function hasfinished_1320,49940
  pthread_t thread_;  // The native thread object.thread_1322,50051
class GTEST_API_ Mutex {Mutex1350,51042
  enum MutexType { kStatic = 0, kDynamic = 1 };MutexType1352,51076
  enum MutexType { kStatic = 0, kDynamic = 1 };kStatic1352,51076
  enum MutexType { kStatic = 0, kDynamic = 1 };kDynamic1352,51076
  enum StaticConstructorSelector { kStaticMutex = 0 };StaticConstructorSelector1356,51307
  enum StaticConstructorSelector { kStaticMutex = 0 };kStaticMutex1356,51307
  explicit Mutex(StaticConstructorSelector /*dummy*/) {}Mutex1361,51587
  unsigned int owner_thread_id_;owner_thread_id_1380,52078
  MutexType type_;type_1384,52209
  long critical_section_init_phase_;  // NOLINTcritical_section_init_phase_1385,52228
  GTEST_CRITICAL_SECTION* critical_section_;critical_section_1386,52276
#define GTEST_DECLARE_STATIC_MUTEX_(GTEST_DECLARE_STATIC_MUTEX_1392,52401
#define GTEST_DEFINE_STATIC_MUTEX_(GTEST_DEFINE_STATIC_MUTEX_1395,52489
class GTestMutexLock {GTestMutexLock1403,52952
  explicit GTestMutexLock(Mutex* mutex) : mutex_(mutex) { mutex_->Lock(); }GTestMutexLock1405,52984
  ~GTestMutexLock() { mutex_->Unlock(); }~GTestMutexLock1407,53061
  Mutex* const mutex_;mutex_1410,53114
typedef GTestMutexLock MutexLock;MutexLock1416,53253
class ThreadLocalValueHolderBase {ThreadLocalValueHolderBase1420,53395
  virtual ~ThreadLocalValueHolderBase() {}~ThreadLocalValueHolderBase1422,53439
class ThreadLocalBase {ThreadLocalBase1427,53593
  ThreadLocalBase() {}ThreadLocalBase1436,53983
  virtual ~ThreadLocalBase() {}~ThreadLocalBase1437,54006
class GTEST_API_ ThreadLocalRegistry {ThreadLocalRegistry1447,54401
class GTEST_API_ ThreadWithParamBase {ThreadWithParamBase1459,54872
  class Runnable {Runnable1464,54948
    virtual ~Runnable() {}~Runnable1466,54978
  AutoHandle thread_;thread_1474,55159
class ThreadWithParam : public ThreadWithParamBase {ThreadWithParam1479,55277
  typedef void UserThreadFunc(T);UserThreadFunc1481,55339
  ThreadWithParam(UserThreadFunc* func, T param, Notification* thread_can_start)ThreadWithParam1483,55374
  virtual ~ThreadWithParam() {}~ThreadWithParam1485,55535
  class RunnableImpl : public Runnable {RunnableImpl1488,55578
    RunnableImpl(UserThreadFunc* func, T param) : func_(func), param_(param) {}RunnableImpl1490,55630
    virtual ~RunnableImpl() {}~RunnableImpl1491,55710
    virtual void Run() { func_(param_); }Run1492,55741
    UserThreadFunc* const func_;func_1495,55796
    const T param_;param_1496,55829
class ThreadLocal : public ThreadLocalBase {ThreadLocal1534,57253
  ThreadLocal() : default_factory_(new DefaultValueHolderFactory()) {}ThreadLocal1536,57307
  explicit ThreadLocal(const T& value)ThreadLocal1537,57378
  ~ThreadLocal() override { ThreadLocalRegistry::OnThreadLocalDestroyed(this); }~ThreadLocal1540,57485
  T* pointer() { return GetOrCreateValue(); }pointer1542,57567
  const T* pointer() const { return GetOrCreateValue(); }pointer1543,57613
  const T& get() const { return *pointer(); }get1544,57671
  void set(const T& value) { *pointer() = value; }set1545,57717
  class ValueHolder : public ThreadLocalValueHolderBase {ValueHolder1550,57886
    ValueHolder() : value_() {}ValueHolder1552,57955
    explicit ValueHolder(const T& value) : value_(value) {}ValueHolder1553,57987
    T* pointer() { return &value_; }pointer1555,58048
    T value_;value_1558,58098
  T* GetOrCreateValue() const {GetOrCreateValue1563,58221
  ThreadLocalValueHolderBase* NewValueForCurrentThread() const override {NewValueForCurrentThread1569,58384
  class ValueHolderFactory {ValueHolderFactory1573,58509
    ValueHolderFactory() {}ValueHolderFactory1575,58549
    virtual ~ValueHolderFactory() {}~ValueHolderFactory1576,58577
  class DefaultValueHolderFactory : public ValueHolderFactory {DefaultValueHolderFactory1584,58816
    DefaultValueHolderFactory() {}DefaultValueHolderFactory1586,58891
    ValueHolder* MakeNewHolder() const override { return new ValueHolder(); }MakeNewHolder1587,58926
  class InstanceValueHolderFactory : public ValueHolderFactory {InstanceValueHolderFactory1595,59190
    explicit InstanceValueHolderFactory(const T& value) : value_(value) {}InstanceValueHolderFactory1597,59266
    ValueHolder* MakeNewHolder() const override {MakeNewHolder1598,59341
    const T value_;  // The value for each thread.value_1603,59448
  std::unique_ptr<ValueHolderFactory> default_factory_;default_factory_1610,59677
class MutexBase {MutexBase1619,59930
  void Lock() {Lock1622,59983
  void Unlock() {Unlock1629,60143
  void AssertHeld() const {AssertHeld1640,60625
  pthread_mutex_t mutex_;  // The underlying pthread mutex.mutex_1651,61103
  bool has_owner_;has_owner_1658,61587
  pthread_t owner_;  // The thread holding the mutex.owner_1659,61606
#define GTEST_DECLARE_STATIC_MUTEX_(GTEST_DECLARE_STATIC_MUTEX_1663,61700
#define GTEST_DEFINE_STATIC_MUTEX_(GTEST_DEFINE_STATIC_MUTEX_1672,62254
class Mutex : public MutexBase {Mutex1677,62493
  Mutex() {Mutex1679,62535
  ~Mutex() { GTEST_CHECK_POSIX_SUCCESS_(pthread_mutex_destroy(&mutex_)); }~Mutex1683,62645
class GTestMutexLock {GTestMutexLock1695,63151
  explicit GTestMutexLock(MutexBase* mutex) : mutex_(mutex) { mutex_->Lock(); }GTestMutexLock1697,63183
  ~GTestMutexLock() { mutex_->Unlock(); }~GTestMutexLock1699,63264
  MutexBase* const mutex_;mutex_1702,63317
typedef GTestMutexLock MutexLock;MutexLock1708,63460
class GTEST_API_ ThreadLocalValueHolderBase {ThreadLocalValueHolderBase1716,63726
  virtual ~ThreadLocalValueHolderBase() {}~ThreadLocalValueHolderBase1718,63781
extern "C" inline void DeleteThreadLocalValue(void* value_holder) {DeleteThreadLocalValue1723,63913
class GTEST_API_ ThreadLocal {ThreadLocal1729,64133
  ThreadLocal()ThreadLocal1731,64173
  explicit ThreadLocal(const T& value)ThreadLocal1733,64269
  ~ThreadLocal() {~ThreadLocal1737,64403
  T* pointer() { return GetOrCreateValue(); }pointer1746,64725
  const T* pointer() const { return GetOrCreateValue(); }pointer1747,64771
  const T& get() const { return *pointer(); }get1748,64829
  void set(const T& value) { *pointer() = value; }set1749,64875
  class ValueHolder : public ThreadLocalValueHolderBase {ValueHolder1753,64967
    ValueHolder() : value_() {}ValueHolder1755,65036
    explicit ValueHolder(const T& value) : value_(value) {}ValueHolder1756,65068
    T* pointer() { return &value_; }pointer1758,65129
    T value_;value_1761,65179
  static pthread_key_t CreateKey() {CreateKey1766,65302
  T* GetOrCreateValue() const {GetOrCreateValue1775,65589
  class ValueHolderFactory {ValueHolderFactory1788,66101
    ValueHolderFactory() {}ValueHolderFactory1790,66141
    virtual ~ValueHolderFactory() {}~ValueHolderFactory1791,66169
  class DefaultValueHolderFactory : public ValueHolderFactory {DefaultValueHolderFactory1799,66408
    DefaultValueHolderFactory() {}DefaultValueHolderFactory1801,66483
    ValueHolder* MakeNewHolder() const override { return new ValueHolder(); }MakeNewHolder1802,66518
  class InstanceValueHolderFactory : public ValueHolderFactory {InstanceValueHolderFactory1810,66782
    explicit InstanceValueHolderFactory(const T& value) : value_(value) {}InstanceValueHolderFactory1812,66858
    ValueHolder* MakeNewHolder() const override {MakeNewHolder1813,66933
    const T value_;  // The value for each thread.value_1818,67040
  const pthread_key_t key_;key_1826,67328
  std::unique_ptr<ValueHolderFactory> default_factory_;default_factory_1827,67356
class Mutex {Mutex1842,67843
  Mutex() {}Mutex1844,67866
  void Lock() {}Lock1845,67879
  void Unlock() {}Unlock1846,67896
  void AssertHeld() const {}AssertHeld1847,67915
#define GTEST_DECLARE_STATIC_MUTEX_(GTEST_DECLARE_STATIC_MUTEX_1850,67948
#define GTEST_DEFINE_STATIC_MUTEX_(GTEST_DEFINE_STATIC_MUTEX_1853,68036
class GTestMutexLock {GTestMutexLock1860,68453
  explicit GTestMutexLock(Mutex*) {}  // NOLINTGTestMutexLock1862,68485
typedef GTestMutexLock MutexLock;MutexLock1865,68537
class GTEST_API_ ThreadLocal {ThreadLocal1868,68594
  ThreadLocal() : value_() {}ThreadLocal1870,68634
  explicit ThreadLocal(const T& value) : value_(value) {}ThreadLocal1871,68664
  T* pointer() { return &value_; }pointer1872,68722
  const T* pointer() const { return &value_; }pointer1873,68757
  const T& get() const { return value_; }get1874,68804
  void set(const T& value) { value_ = value; }set1875,68846
  T value_;value_1878,68904
#define GTEST_PATH_SEP_ GTEST_PATH_SEP_1888,69113
#define GTEST_HAS_ALT_PATH_SEP_ GTEST_HAS_ALT_PATH_SEP_1889,69142
#define GTEST_PATH_SEP_ GTEST_PATH_SEP_1891,69182
#define GTEST_HAS_ALT_PATH_SEP_ GTEST_HAS_ALT_PATH_SEP_1892,69210
inline bool IsAlpha(char ch) {IsAlpha1902,69519
inline bool IsAlNum(char ch) {IsAlNum1905,69607
inline bool IsDigit(char ch) {IsDigit1908,69695
inline bool IsLower(char ch) {IsLower1911,69783
inline bool IsSpace(char ch) {IsSpace1914,69871
inline bool IsUpper(char ch) {IsUpper1917,69959
inline bool IsXDigit(char ch) {IsXDigit1920,70047
inline bool IsXDigit(char8_t ch) {IsXDigit1924,70158
inline bool IsXDigit(char16_t ch) {IsXDigit1928,70258
inline bool IsXDigit(char32_t ch) {IsXDigit1932,70413
inline bool IsXDigit(wchar_t ch) {IsXDigit1936,70568
inline char ToLower(char ch) {ToLower1941,70723
inline char ToUpper(char ch) {ToUpper1944,70825
inline std::string StripTrailingSpaces(std::string str) {StripTrailingSpaces1948,70928
namespace posix {posix1960,71412
typedef struct _stat StatStruct;StatStruct1966,71501
inline int DoIsATTY(int fd) { return isatty(fd); }DoIsATTY1969,71555
inline int StrCaseCmp(const char* s1, const char* s2) {StrCaseCmp1970,71606
inline char* StrDup(const char* src) { return strdup(src); }StrDup1973,71690
inline int DoIsATTY(int /* fd */) { return 0; }DoIsATTY1977,71915
inline int DoIsATTY(int fd) { return _isatty(fd); }DoIsATTY1979,71969
inline int StrCaseCmp(const char* s1, const char* s2) {StrCaseCmp1981,72056
inline char* StrDup(const char* src) { return _strdup(src); }StrDup1984,72141
inline int FileNo(FILE* file) { return reinterpret_cast<int>(_fileno(file)); }FileNo1988,72256
inline int FileNo(FILE* file) { return _fileno(file); }FileNo1992,72446
inline int Stat(const char* path, StatStruct* buf) { return _stat(path, buf); }Stat1993,72502
inline int RmDir(const char* dir) { return _rmdir(dir); }RmDir1994,72582
inline bool IsDir(const StatStruct& st) { return (_S_IFDIR & st.st_mode) != 0; }IsDir1995,72640
inline int IsATTY(int fd) {IsATTY2035,73982
GTEST_DISABLE_MSC_DEPRECATED_PUSH_()GTEST_DISABLE_MSC_DEPRECATED_PUSH_2048,74348
inline FILE* FOpen(const char* path, const char* mode) {FOpen2059,74761
  struct wchar_codecvt : public std::codecvt<wchar_t, char, std::mbstate_t> {};wchar_codecvt2061,74866
inline FILE* FReopen(const char* path, const char* mode, FILE* stream) {FReopen2071,75348
inline FILE* FDOpen(int fd, const char* mode) { return fdopen(fd, mode); }FDOpen2074,75461
inline int FClose(FILE* fp) { return fclose(fp); }FClose2076,75543
inline int Read(int fd, void* buf, unsigned int count) {Read2078,75641
inline int Write(int fd, const void* buf, unsigned int count) {Write2081,75749
inline int Close(int fd) { return close(fd); }Close2084,75865
inline const char* StrError(int errnum) { return strerror(errnum); }StrError2085,75912
inline const char* GetEnv(const char* name) {GetEnv2087,75988
#define GTEST_SNPRINTF_(GTEST_SNPRINTF_2124,77515
#define GTEST_SNPRINTF_ GTEST_SNPRINTF_2128,77689
#define GTEST_SNPRINTF_ GTEST_SNPRINTF_2130,77729
using BiggestInt = long long;  // NOLINTBiggestInt2136,77891
constexpr BiggestInt kMaxBiggestInt = (std::numeric_limits<BiggestInt>::max)();kMaxBiggestInt2139,77983
class TypeWithSize {TypeWithSize2160,78665
  using UInt = void;UInt2164,78783
class TypeWithSize<4> {TypeWithSize2169,78854
  using Int = std::int32_t;Int2171,78887
  using UInt = std::uint32_t;UInt2172,78915
class TypeWithSize<8> {TypeWithSize2177,78995
  using Int = std::int64_t;Int2179,79028
  using UInt = std::uint64_t;UInt2180,79056
using TimeInMillis = int64_t;  // Represents time in milliseconds.TimeInMillis2184,79123
#define GTEST_FLAG_NAME_(GTEST_FLAG_NAME_2190,79312
#define GTEST_FLAG(GTEST_FLAG2191,79356
#define GTEST_DEFINE_bool_(GTEST_DEFINE_bool_2198,79528
#define GTEST_DEFINE_int32_(GTEST_DEFINE_int32_2200,79641
#define GTEST_DEFINE_string_(GTEST_DEFINE_string_2202,79758
#define GTEST_DECLARE_bool_(GTEST_DECLARE_bool_2206,79912
#define GTEST_DECLARE_int32_(GTEST_DECLARE_int32_2208,79998
#define GTEST_DECLARE_string_(GTEST_DECLARE_string_2210,80088
#define GTEST_FLAG_SAVER_ GTEST_FLAG_SAVER_2213,80184
#define GTEST_FLAG_GET(GTEST_FLAG_GET2215,80229
#define GTEST_FLAG_SET(GTEST_FLAG_SET2216,80292
#define GTEST_USE_OWN_FLAGFILE_FLAG_ GTEST_USE_OWN_FLAGFILE_FLAG_2218,80382
#define GTEST_DEFINE_bool_(GTEST_DEFINE_bool_2223,80478
#define GTEST_DEFINE_int32_(GTEST_DEFINE_int32_2228,80755
#define GTEST_DEFINE_string_(GTEST_DEFINE_string_2233,81064
#define GTEST_DECLARE_bool_(GTEST_DECLARE_bool_2240,81409
#define GTEST_DECLARE_int32_(GTEST_DECLARE_int32_2245,81650
#define GTEST_DECLARE_string_(GTEST_DECLARE_string_2250,81923
#define GTEST_FLAG_SAVER_ GTEST_FLAG_SAVER_2256,82201
#define GTEST_FLAG_GET(GTEST_FLAG_GET2258,82264
#define GTEST_FLAG_SET(GTEST_FLAG_SET2259,82321
#define GTEST_USE_OWN_FLAGFILE_FLAG_ GTEST_USE_OWN_FLAGFILE_FLAG_2260,82401
#define GTEST_EXCLUSIVE_LOCK_REQUIRED_(GTEST_EXCLUSIVE_LOCK_REQUIRED_2266,82535
#define GTEST_LOCK_EXCLUDED_(GTEST_LOCK_EXCLUDED_2267,82581
#define GTEST_INTERNAL_DEPRECATED(GTEST_INTERNAL_DEPRECATED2297,83926
#define GTEST_INTERNAL_DEPRECATED(GTEST_INTERNAL_DEPRECATED2299,84025
#define GTEST_INTERNAL_DEPRECATED(GTEST_INTERNAL_DEPRECATED2301,84111
#define GTEST_INTERNAL_HAS_ANY GTEST_INTERNAL_HAS_ANY2309,84337
namespace testing {testing2311,84398
namespace internal {internal2312,84418
using Any = ::absl::any;Any2313,84439
#define GTEST_INTERNAL_HAS_ANY GTEST_INTERNAL_HAS_ANY2321,84681
namespace testing {testing2323,84729
namespace internal {internal2324,84749
using Any = ::std::any;Any2325,84770
#define GTEST_INTERNAL_HAS_OPTIONAL GTEST_INTERNAL_HAS_OPTIONAL2337,85165
namespace testing {testing2339,85236
namespace internal {internal2340,85256
using Optional = ::absl::optional<T>;Optional2342,85299
inline ::absl::nullopt_t Nullopt() { return ::absl::nullopt; }Nullopt2343,85337
#define GTEST_INTERNAL_HAS_OPTIONAL GTEST_INTERNAL_HAS_OPTIONAL2351,85627
namespace testing {testing2353,85685
namespace internal {internal2354,85705
using Optional = ::std::optional<T>;Optional2356,85748
inline ::std::nullopt_t Nullopt() { return ::std::nullopt; }Nullopt2357,85785
#define GTEST_INTERNAL_HAS_STRING_VIEW GTEST_INTERNAL_HAS_STRING_VIEW2369,86221
namespace testing {testing2371,86300
namespace internal {internal2372,86320
using StringView = ::absl::string_view;StringView2373,86341
#define GTEST_INTERNAL_HAS_STRING_VIEW GTEST_INTERNAL_HAS_STRING_VIEW2381,86605
namespace testing {testing2383,86669
namespace internal {internal2384,86689
using StringView = ::std::string_view;StringView2385,86710
#define GTEST_INTERNAL_HAS_VARIANT GTEST_INTERNAL_HAS_VARIANT2397,87135
namespace testing {testing2399,87204
namespace internal {internal2400,87224
using Variant = ::absl::variant<T...>;Variant2402,87270
#define GTEST_INTERNAL_HAS_VARIANT GTEST_INTERNAL_HAS_VARIANT2410,87534
namespace testing {testing2412,87590
namespace internal {internal2413,87610
using Variant = ::std::variant<T...>;Variant2415,87656

build/_deps/googletest-src/googletest/include/gtest/internal/custom/gtest-port.h,126
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_35,1743

build/_deps/googletest-src/googletest/include/gtest/internal/custom/README.md,495
# Customization PointsCustomization Points1,0
## Header `gtest.h`Header `gtest.h`5,100
### The following macros can be defined:The following macros can be defined:7,121
## Header `gtest-port.h`Header `gtest-port.h`14,402
### Logging:Logging:18,466
### Threading:Threading:24,614
### Underlying library support featuresUnderlying library support features33,990
### Exporting API symbols:Exporting API symbols:37,1058
## Header `gtest-printers.h`Header `gtest-printers.h`41,1138

build/_deps/googletest-src/googletest/include/gtest/internal/custom/gtest.h,116
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_H_35,1738

build/_deps/googletest-src/googletest/include/gtest/internal/custom/gtest-printers.h,134
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_40,1956

build/_deps/googletest-src/googletest/include/gtest/internal/gtest-type-util.h,1669
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_38,1813
namespace testing {testing50,2175
namespace internal {internal51,2195
inline std::string CanonicalizeForStdLibVersioning(std::string s) {CanonicalizeForStdLibVersioning57,2474
inline std::string GetTypeName(const std::type_info& type) {GetTypeName71,2970
std::string GetTypeName() {GetTypeName95,3904
struct None {};None104,4080
#define GTEST_TEMPLATE_ GTEST_TEMPLATE_106,4097
struct TemplateSel {TemplateSel119,4613
  struct Bind {Bind121,4658
    typedef Tmpl<T> type;type122,4674
#define GTEST_BIND_(GTEST_BIND_126,4709
struct Templates {Templates129,4833
  using Head = TemplateSel<Head_>;Head130,4852
  using Tail = Templates<Tail_...>;Tail131,4887
struct Templates<Head_> {Templates135,4960
  using Head = TemplateSel<Head_>;Head136,4986
  using Tail = None;Tail137,5021
struct Types {Types142,5116
  using Head = Head_;Head143,5131
  using Tail = Types<Tail_...>;Tail144,5153
struct Types<Head_> {Types148,5215
  using Head = Head_;Head149,5237
  using Tail = None;Tail150,5259
struct ProxyTypeList {ProxyTypeList156,5406
  using type = Types<Ts...>;type157,5429
struct is_proxy_type_list : std::false_type {};is_proxy_type_list161,5482
struct is_proxy_type_list<ProxyTypeList<Ts...>> : std::true_type {};is_proxy_type_list164,5557
struct GenerateTypeList {GenerateTypeList170,5830
  using proxy = typename std::conditional<is_proxy_type_list<T>::value, T,proxy172,5866
  using type = typename proxy::type;type176,6018
using Types = internal::ProxyTypeList<Ts...>;Types182,6111

build/_deps/googletest-src/googletest/include/gtest/internal/gtest-death-test-internal.h,2929
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_40,1939
namespace testing {testing51,2177
namespace internal {internal52,2197
const char kDeathTestStyleFlag[] = "death_test_style";kDeathTestStyleFlag55,2281
const char kDeathTestUseFork[] = "death_test_use_fork";kDeathTestUseFork56,2336
const char kInternalRunDeathTestFlag[] = "internal_run_death_test";kInternalRunDeathTestFlag57,2392
class GTEST_API_ DeathTest {DeathTest77,3222
  virtual ~DeathTest() {}~DeathTest90,3989
  class ReturnSentinel {ReturnSentinel93,4080
    explicit ReturnSentinel(DeathTest* test) : test_(test) {}ReturnSentinel95,4116
    ~ReturnSentinel() { test_->Abort(TEST_ENCOUNTERED_RETURN_STATEMENT); }~ReturnSentinel96,4178
    DeathTest* const test_;test_99,4266
  } GTEST_ATTRIBUTE_UNUSED_;GTEST_ATTRIBUTE_UNUSED_102,4409
  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };TestRole109,4774
  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };OVERSEE_TEST109,4774
  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };EXECUTE_TEST109,4774
  enum AbortReason {AbortReason112,4894
    TEST_ENCOUNTERED_RETURN_STATEMENT,TEST_ENCOUNTERED_RETURN_STATEMENT113,4915
    TEST_THREW_EXCEPTION,TEST_THREW_EXCEPTION114,4954
    TEST_DID_NOT_DIETEST_DID_NOT_DIE115,4980
  static std::string last_death_test_message_;last_death_test_message_144,6002
class DeathTestFactory {DeathTestFactory153,6260
  virtual ~DeathTestFactory() {}~DeathTestFactory155,6294
class DefaultDeathTestFactory : public DeathTestFactory {DefaultDeathTestFactory162,6570
inline Matcher<const ::std::string&> MakeDeathTestMatcher(MakeDeathTestMatcher175,7138
inline Matcher<const ::std::string&> MakeDeathTestMatcher(const char* regex) {MakeDeathTestMatcher179,7277
inline Matcher<const ::std::string&> MakeDeathTestMatcher(MakeDeathTestMatcher182,7389
inline Matcher<const ::std::string&> MakeDeathTestMatcher(MakeDeathTestMatcher189,7611
#define GTEST_EXECUTE_DEATH_TEST_STATEMENT_(GTEST_EXECUTE_DEATH_TEST_STATEMENT_197,7901
#define GTEST_EXECUTE_DEATH_TEST_STATEMENT_(GTEST_EXECUTE_DEATH_TEST_STATEMENT_214,9018
#define GTEST_DEATH_TEST_(GTEST_DEATH_TEST_221,9255
#define GTEST_EXECUTE_STATEMENT_(GTEST_EXECUTE_STATEMENT_259,12137
class InternalRunDeathTestFlag {InternalRunDeathTestFlag271,12772
  InternalRunDeathTestFlag(const std::string& a_file, int a_line, int an_index,InternalRunDeathTestFlag273,12814
  ~InternalRunDeathTestFlag() {~InternalRunDeathTestFlag277,13019
  const std::string& file() const { return file_; }file281,13105
  int line() const { return line_; }line282,13157
  int index() const { return index_; }index283,13194
  int write_fd() const { return write_fd_; }write_fd284,13233
  std::string file_;file_287,13289
  int line_;line_288,13310
  int index_;index_289,13323
  int write_fd_;write_fd_290,13337

build/_deps/googletest-src/googletest/include/gtest/internal/gtest-filepath.h,856
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_43,2011
namespace testing {testing50,2231
namespace internal {internal51,2251
class GTEST_API_ FilePath {FilePath64,2979
  FilePath() : pathname_("") {}FilePath66,3016
  FilePath(const FilePath& rhs) : pathname_(rhs.pathname_) {}FilePath67,3048
  explicit FilePath(const std::string& pathname) : pathname_(pathname) {FilePath69,3111
  FilePath& operator=(const FilePath& rhs) {operator =73,3206
  void Set(const FilePath& rhs) { pathname_ = rhs.pathname_; }Set78,3288
  const std::string& string() const { return pathname_; }string80,3352
  const char* c_str() const { return pathname_.c_str(); }c_str81,3410
  bool IsEmpty() const { return pathname_.empty(); }IsEmpty113,5046
  std::string pathname_;pathname_212,10014

build/_deps/googletest-src/googletest/include/gtest/internal/gtest-string.h,231
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_44,2094
namespace testing {testing58,2361
namespace internal {internal59,2381
class GTEST_API_ String {String62,2466

build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h,14023
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_37,1802
namespace testing {testing55,2187
struct TestParamInfo {TestParamInfo59,2380
  TestParamInfo(const ParamType& a_param, size_t an_index)TestParamInfo60,2403
  ParamType param;param62,2505
  size_t index;index63,2524
struct PrintToStringParamName {PrintToStringParamName68,2646
  std::string operator()(const TestParamInfo<ParamType>& info) const {operator ()70,2707
namespace internal {internal75,2824
class ParamIteratorInterface {ParamIteratorInterface95,3512
  virtual ~ParamIteratorInterface() {}~ParamIteratorInterface97,3552
class ParamIterator {ParamIterator125,4980
  typedef T value_type;value_type127,5011
  typedef const T& reference;reference128,5035
  typedef ptrdiff_t difference_type;difference_type129,5065
  ParamIterator(const ParamIterator& other) : impl_(other.impl_->Clone()) {}ParamIterator132,5162
  ParamIterator& operator=(const ParamIterator& other) {operator =133,5239
  const T& operator*() const { return *impl_->Current(); }operator *138,5378
  const T* operator->() const { return impl_->Current(); }operator ->139,5437
  ParamIterator& operator++() {operator ++141,5531
  ParamIterator operator++(int /*unused*/) {operator ++146,5643
  bool operator==(const ParamIterator& other) const {operator ==151,5802
  bool operator!=(const ParamIterator& other) const {operator !=154,5936
  explicit ParamIterator(ParamIteratorInterface<T>* impl) : impl_(impl) {}ParamIterator160,6069
  std::unique_ptr<ParamIteratorInterface<T>> impl_;impl_161,6144
class ParamGeneratorInterface {ParamGeneratorInterface167,6336
  typedef T ParamType;ParamType169,6377
  virtual ~ParamGeneratorInterface() {}~ParamGeneratorInterface171,6401
class ParamGenerator {ParamGenerator184,6953
  typedef ParamIterator<T> iterator;iterator186,6985
  explicit ParamGenerator(ParamGeneratorInterface<T>* impl) : impl_(impl) {}ParamGenerator188,7023
  ParamGenerator(const ParamGenerator& other) : impl_(other.impl_) {}ParamGenerator189,7100
  ParamGenerator& operator=(const ParamGenerator& other) {operator =191,7171
  iterator begin() const { return iterator(impl_->Begin()); }begin196,7278
  iterator end() const { return iterator(impl_->End()); }end197,7340
  std::shared_ptr<const ParamGeneratorInterface<T>> impl_;impl_200,7409
class RangeGenerator : public ParamGeneratorInterface<T> {RangeGenerator208,7727
  RangeGenerator(T begin, T end, IncrementT step)RangeGenerator210,7795
  ~RangeGenerator() override {}~RangeGenerator215,7967
  ParamIteratorInterface<T>* Begin() const override {Begin217,8000
  ParamIteratorInterface<T>* End() const override {End220,8107
  class Iterator : public ParamIteratorInterface<T> {Iterator225,8230
    Iterator(const ParamGeneratorInterface<T>* base, T value, int index,Iterator227,8295
    ~Iterator() override {}~Iterator230,8466
    const ParamGeneratorInterface<T>* BaseGenerator() const override {BaseGenerator232,8495
    void Advance() override {Advance235,8592
    ParamIteratorInterface<T>* Clone() const override {Clone239,8691
    const T* Current() const override { return &value_; }Current242,8787
    bool Equals(const ParamIteratorInterface<T>& other) const override {Equals243,8845
    Iterator(const Iterator& other)Iterator255,9375
    const ParamGeneratorInterface<T>* const base_;base_265,9675
    T value_;value_266,9726
    int index_;index_267,9740
    const IncrementT step_;step_268,9756
  static int CalculateEndIndex(const T& begin, const T& end,CalculateEndIndex271,9825
  const T begin_;begin_281,10167
  const T end_;end_282,10185
  const IncrementT step_;step_283,10201
  const int end_index_;end_index_286,10364
class ValuesInIteratorRangeGenerator : public ParamGeneratorInterface<T> {ValuesInIteratorRangeGenerator294,10693
  ValuesInIteratorRangeGenerator(ForwardIterator begin, ForwardIterator end)ValuesInIteratorRangeGenerator297,10815
  ~ValuesInIteratorRangeGenerator() override {}~ValuesInIteratorRangeGenerator299,10926
  ParamIteratorInterface<T>* Begin() const override {Begin301,10975
  ParamIteratorInterface<T>* End() const override {End304,11084
  typedef typename ::std::vector<T> ContainerType;ContainerType309,11200
  class Iterator : public ParamIteratorInterface<T> {Iterator311,11252
    Iterator(const ParamGeneratorInterface<T>* base,Iterator313,11317
    ~Iterator() override {}~Iterator316,11478
    const ParamGeneratorInterface<T>* BaseGenerator() const override {BaseGenerator318,11507
    void Advance() override {Advance321,11604
    ParamIteratorInterface<T>* Clone() const override {Clone325,11681
    const T* Current() const override {Current335,12257
    bool Equals(const ParamIteratorInterface<T>& other) const override {Equals339,12398
    Iterator(const Iterator& other)Iterator350,12894
    const ParamGeneratorInterface<T>* const base_;base_357,13173
    typename ContainerType::const_iterator iterator_;iterator_358,13224
    mutable std::unique_ptr<const T> value_;value_364,13599
  const ContainerType container_;container_370,13817
std::string DefaultParamName(const TestParamInfo<ParamType>& info) {DefaultParamName378,14091
void TestNotEmpty() {TestNotEmpty385,14277
void TestNotEmpty(const T&) {}TestNotEmpty389,14398
class ParameterizedTestFactory : public TestFactoryBase {ParameterizedTestFactory396,14600
  typedef typename TestClass::ParamType ParamType;ParamType398,14667
  explicit ParameterizedTestFactory(ParamType parameter)ParameterizedTestFactory399,14718
  Test* CreateTest() override {CreateTest401,14808
  const ParamType parameter_;parameter_407,14921
class TestMetaFactoryBase {TestMetaFactoryBase418,15330
  virtual ~TestMetaFactoryBase() {}~TestMetaFactoryBase420,15367
class TestMetaFactoryTestMetaFactory434,15942
  using ParamType = typename TestSuite::ParamType;ParamType437,16039
  TestMetaFactory() {}TestMetaFactory439,16091
  TestFactoryBase* CreateTestFactory(ParamType parameter) override {CreateTestFactory441,16115
class ParameterizedTestSuiteInfoBase {ParameterizedTestSuiteInfoBase460,16981
  virtual ~ParameterizedTestSuiteInfoBase() {}~ParameterizedTestSuiteInfoBase462,17029
  ParameterizedTestSuiteInfoBase() {}ParameterizedTestSuiteInfoBase475,17593
struct GTEST_API_ MarkAsIgnored {MarkAsIgnored488,17997
class ParameterizedTestSuiteInfo : public ParameterizedTestSuiteInfoBase {ParameterizedTestSuiteInfo503,18611
  using ParamType = typename TestSuite::ParamType;ParamType508,18866
  typedef ParamGenerator<ParamType>(GeneratorCreationFunc)();GeneratorCreationFunc510,18989
  using ParamNameGeneratorFunc = std::string(const TestParamInfo<ParamType>&);ParamNameGeneratorFunc511,19051
  explicit ParameterizedTestSuiteInfo(const char* name,ParameterizedTestSuiteInfo513,19131
  const std::string& GetTestSuiteName() const override {GetTestSuiteName518,19367
  TypeId GetTestSuiteTypeId() const override { return GetTypeId<TestSuite>(); }GetTestSuiteTypeId522,19496
  void AddTestPattern(const char* test_suite_name, const char* test_base_name,AddTestPattern529,19967
  int AddTestSuiteInstantiation(const std::string& instantiation_name,AddTestSuiteInstantiation537,20406
  void RegisterTests() override {RegisterTests550,21202
  struct TestInfo {TestInfo618,24041
    TestInfo(const char* a_test_suite_base_name, const char* a_test_base_name,TestInfo619,24061
    const std::string test_suite_base_name;test_suite_base_name627,24444
    const std::string test_base_name;test_base_name628,24488
    const std::unique_ptr<TestMetaFactoryBase<ParamType>> test_meta_factory;test_meta_factory629,24526
    const CodeLocation code_location;code_location630,24603
  using TestInfoContainer = ::std::vector<std::shared_ptr<TestInfo>>;TestInfoContainer632,24646
  struct InstantiationInfo {InstantiationInfo636,24906
    InstantiationInfo(const std::string& name_in,InstantiationInfo637,24935
    std::string name;name647,25308
    GeneratorCreationFunc* generator;generator648,25330
    ParamNameGeneratorFunc* name_func;name_func649,25368
    const char* file;file650,25407
    int line;line651,25429
  typedef ::std::vector<InstantiationInfo> InstantiationContainer;InstantiationContainer653,25448
  static bool IsValidParamName(const std::string& name) {IsValidParamName655,25516
  const std::string test_suite_name_;test_suite_name_667,25850
  CodeLocation code_location_;code_location_668,25888
  TestInfoContainer tests_;tests_669,25919
  InstantiationContainer instantiations_;instantiations_670,25947
using ParameterizedTestCaseInfo = ParameterizedTestSuiteInfo<TestCase>;ParameterizedTestCaseInfo680,26313
class ParameterizedTestSuiteRegistry {ParameterizedTestSuiteRegistry689,26739
  ParameterizedTestSuiteRegistry() {}ParameterizedTestSuiteRegistry691,26787
  ~ParameterizedTestSuiteRegistry() {~ParameterizedTestSuiteRegistry692,26825
  ParameterizedTestSuiteInfo<TestSuite>* GetTestSuitePatternHolder(GetTestSuitePatternHolder701,27123
  void RegisterTests() {RegisterTests729,28430
  ParameterizedTestCaseInfo<TestCase>* GetTestCasePatternHolder(GetTestCasePatternHolder737,28678
  using TestSuiteInfoContainer = ::std::vector<ParameterizedTestSuiteInfoBase*>;TestSuiteInfoContainer745,28948
  TestSuiteInfoContainer test_suite_infos_;test_suite_infos_747,29030
class TypeParameterizedTestSuiteRegistry {TypeParameterizedTestSuiteRegistry758,29455
  struct TypeParameterizedTestSuiteInfo {TypeParameterizedTestSuiteInfo772,29927
    explicit TypeParameterizedTestSuiteInfo(CodeLocation c)TypeParameterizedTestSuiteInfo773,29969
    CodeLocation code_location;code_location776,30081
    bool instantiated;instantiated777,30113
  std::map<std::string, TypeParameterizedTestSuiteInfo> suites_;suites_780,30142
namespace internal {internal791,30465
class ValueArray {ValueArray800,30661
  explicit ValueArray(Ts... v) : v_(FlatTupleConstructTag{}, std::move(v)...) {}ValueArray802,30689
  operator ParamGenerator<T>() const {  // NOLINToperator ParamGenerator<T>805,30795
  std::vector<T> MakeVector(IndexSequence<I...>) const {MakeVector811,30969
  FlatTuple<Ts...> v_;v_815,31099
class CartesianProductGeneratorCartesianProductGenerator823,31196
  typedef ::std::tuple<T...> ParamType;ParamType826,31296
  CartesianProductGenerator(const std::tuple<ParamGenerator<T>...>& g)CartesianProductGenerator828,31337
  ~CartesianProductGenerator() override {}~CartesianProductGenerator830,31434
  ParamIteratorInterface<ParamType>* Begin() const override {Begin832,31478
  ParamIteratorInterface<ParamType>* End() const override {End835,31595
  class IteratorImpl<IndexSequence<I...>>IteratorImpl843,31788
    IteratorImpl(const ParamGeneratorInterface<ParamType>* base,IteratorImpl846,31892
    ~IteratorImpl() override {}~IteratorImpl855,32263
    const ParamGeneratorInterface<ParamType>* BaseGenerator() const override {BaseGenerator857,32296
    void Advance() override {Advance862,32536
    ParamIteratorInterface<ParamType>* Clone() const override {Clone870,32796
    const ParamType* Current() const override { return current_value_.get(); }Current874,32905
    bool Equals(const ParamIteratorInterface<ParamType>& other) const override {Equals876,32985
    void AdvanceIfEnd() {AdvanceIfEnd900,33968
    void ComputeCurrentValue() {ComputeCurrentValue915,34372
    bool AtEnd() const {AtEnd919,34512
    const ParamGeneratorInterface<ParamType>* const base_;base_927,34713
    std::tuple<typename ParamGenerator<T>::iterator...> begin_;begin_928,34772
    std::tuple<typename ParamGenerator<T>::iterator...> end_;end_929,34836
    std::tuple<typename ParamGenerator<T>::iterator...> current_;current_930,34898
    std::shared_ptr<ParamType> current_value_;current_value_931,34964
  using Iterator = IteratorImpl<typename MakeIndexSequence<sizeof...(T)>::type>;Iterator934,35017
  std::tuple<ParamGenerator<T>...> generators_;generators_936,35099
class CartesianProductHolder {CartesianProductHolder940,35175
  CartesianProductHolder(const Gen&... g) : generators_(g...) {}CartesianProductHolder942,35215
  operator ParamGenerator<::std::tuple<T...>>() const {operator ParamGenerator<::std::tuple<T...>>944,35307
  std::tuple<Gen...> generators_;generators_950,35484
class ParamGeneratorConverter : public ParamGeneratorInterface<To> {ParamGeneratorConverter954,35560
  ParamGeneratorConverter(ParamGenerator<From> gen) // NOLINTParamGeneratorConverter956,35638
  ParamIteratorInterface<To>* Begin() const override {Begin959,35739
  ParamIteratorInterface<To>* End() const override {End962,35867
  class Iterator : public ParamIteratorInterface<To> {Iterator967,36002
    Iterator(const ParamGeneratorInterface<To>* base, ParamIterator<From> it,Iterator969,36068
    ~Iterator() override {}~Iterator974,36311
    const ParamGeneratorInterface<To>* BaseGenerator() const override {BaseGenerator976,36340
    void Advance() override {Advance979,36438
    ParamIteratorInterface<To>* Clone() const override {Clone983,36564
    const To* Current() const override { return value_.get(); }Current986,36661
    bool Equals(const ParamIteratorInterface<To>& other) const override {Equals987,36725
    const ParamGeneratorInterface<To>* const base_;base_1001,37308
    ParamIterator<From> it_;it_1002,37360
    ParamIterator<From> end_;end_1003,37389
    std::shared_ptr<To> value_;value_1004,37419
  ParamGenerator<From> generator_;generator_1007,37501
class ParamConverterGenerator {ParamConverterGenerator1011,37595
  ParamConverterGenerator(ParamGenerator<Gen> g)  // NOLINTParamConverterGenerator1013,37636
  operator ParamGenerator<T>() const {  // NOLINToperator ParamGenerator<T>1017,37757
  ParamGenerator<Gen> generator_;generator_1022,37901

build/_deps/googletest-src/googletest/include/gtest/internal/gtest-port-arch.h,1981
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_36,1814
#define GTEST_OS_CYGWIN GTEST_OS_CYGWIN40,1955
#define GTEST_OS_WINDOWS_MINGW GTEST_OS_WINDOWS_MINGW42,2054
#define GTEST_OS_WINDOWS GTEST_OS_WINDOWS43,2087
#define GTEST_OS_WINDOWS GTEST_OS_WINDOWS45,2135
#define GTEST_OS_WINDOWS_MOBILE GTEST_OS_WINDOWS_MOBILE47,2180
#define GTEST_OS_WINDOWS_DESKTOP GTEST_OS_WINDOWS_DESKTOP51,2323
#define GTEST_OS_WINDOWS_PHONE GTEST_OS_WINDOWS_PHONE53,2416
#define GTEST_OS_WINDOWS_RT GTEST_OS_WINDOWS_RT55,2501
#define GTEST_OS_WINDOWS_PHONE GTEST_OS_WINDOWS_PHONE57,2588
#define GTEST_OS_WINDOWS_TV_TITLE GTEST_OS_WINDOWS_TV_TITLE58,2621
#define GTEST_OS_WINDOWS_DESKTOP GTEST_OS_WINDOWS_DESKTOP62,2743
#define GTEST_OS_WINDOWS_DESKTOP GTEST_OS_WINDOWS_DESKTOP65,2791
#define GTEST_OS_OS2 GTEST_OS_OS268,2870
#define GTEST_OS_MAC GTEST_OS_MAC70,2917
#define GTEST_OS_IOS GTEST_OS_IOS73,2993
#define GTEST_OS_DRAGONFLY GTEST_OS_DRAGONFLY76,3051
#define GTEST_OS_FREEBSD GTEST_OS_FREEBSD78,3106
#define GTEST_OS_FUCHSIA GTEST_OS_FUCHSIA80,3159
#define GTEST_OS_GNU_HURD GTEST_OS_GNU_HURD82,3209
#define GTEST_OS_GNU_KFREEBSD GTEST_OS_GNU_KFREEBSD84,3293
#define GTEST_OS_LINUX GTEST_OS_LINUX86,3349
#define GTEST_OS_LINUX_ANDROID GTEST_OS_LINUX_ANDROID88,3398
#define GTEST_OS_ZOS GTEST_OS_ZOS91,3460
#define GTEST_OS_SOLARIS GTEST_OS_SOLARIS93,3523
#define GTEST_OS_AIX GTEST_OS_AIX95,3570
#define GTEST_OS_HPUX GTEST_OS_HPUX97,3615
#define GTEST_OS_NACL GTEST_OS_NACL99,3671
#define GTEST_OS_NETBSD GTEST_OS_NETBSD101,3720
#define GTEST_OS_OPENBSD GTEST_OS_OPENBSD103,3772
#define GTEST_OS_QNX GTEST_OS_QNX105,3821
#define GTEST_OS_HAIKU GTEST_OS_HAIKU107,3869
#define GTEST_OS_ESP8266 GTEST_OS_ESP8266109,3916
#define GTEST_OS_ESP32 GTEST_OS_ESP32111,3963
#define GTEST_OS_XTENSA GTEST_OS_XTENSA113,4014
#define GTEST_OS_QURT GTEST_OS_QURT115,4067

build/_deps/googletest-src/googletest/include/gtest/gtest.h,17285
#define GOOGLETEST_INCLUDE_GTEST_GTEST_H_GOOGLETEST_INCLUDE_GTEST_GTEST_H_50,2370
namespace testing {testing160,6332
const int kMaxStackTraceDepth = 100;kMaxStackTraceDepth171,6626
namespace internal {internal173,6664
class GTestNonCopyable {GTestNonCopyable196,7473
using TestCase = TestSuite;TestCase214,8041
class GTEST_API_ Test {Test242,8811
  static void SetUpTestSuite() {}SetUpTestSuite255,9240
  static void TearDownTestSuite() {}TearDownTestSuite263,9571
  static void TearDownTestCase() {}TearDownTestCase268,9757
  static void SetUpTestCase() {}SetUpTestCase269,9793
  static bool HasFailure() { return HasFatalFailure() || HasNonfatalFailure(); }HasFailure283,10278
  void DeleteSelf_() { delete this; }DeleteSelf_329,12276
  const std::unique_ptr<GTEST_FLAG_SAVER_> gtest_flag_saver_;gtest_flag_saver_331,12315
  struct Setup_should_be_spelled_SetUp {};Setup_should_be_spelled_SetUp349,13091
  virtual Setup_should_be_spelled_SetUp* Setup() { return nullptr; }Setup350,13134
typedef internal::TimeInMillis TimeInMillis;TimeInMillis357,13311
class TestProperty {TestProperty363,13545
  TestProperty(const std::string& a_key, const std::string& a_value)TestProperty368,13727
  const char* key() const { return key_.c_str(); }key372,13870
  const char* value() const { return value_.c_str(); }value375,13957
  void SetValue(const std::string& new_value) { value_ = new_value; }SetValue378,14084
  std::string key_;key_382,14200
  std::string value_;value_384,14257
class GTEST_API_ TestResult {TestResult393,14524
  bool Passed() const { return !Skipped() && !Failed(); }Passed409,15009
  TimeInMillis elapsed_time() const { return elapsed_time_; }elapsed_time424,15464
  TimeInMillis start_timestamp() const { return start_timestamp_; }start_timestamp428,15615
  const std::vector<TestPartResult>& test_part_results() const {test_part_results451,16497
  const std::vector<TestProperty>& test_properties() const {test_properties456,16638
  void set_start_timestamp(TimeInMillis start) { start_timestamp_ = start; }set_start_timestamp461,16759
  void set_elapsed_time(TimeInMillis elapsed) { elapsed_time_ = elapsed; }set_elapsed_time464,16865
  int death_test_count() const { return death_test_count_; }death_test_count485,17954
  int increment_death_test_count() { return ++death_test_count_; }increment_death_test_count488,18079
  internal::Mutex test_properties_mutex_;test_properties_mutex_498,18365
  std::vector<TestPartResult> test_part_results_;test_part_results_501,18443
  std::vector<TestProperty> test_properties_;test_properties_503,18527
  int death_test_count_;death_test_count_505,18608
  TimeInMillis start_timestamp_;start_timestamp_507,18688
  TimeInMillis elapsed_time_;elapsed_time_509,18761
class GTEST_API_ TestInfo {TestInfo527,19322
  const char* test_suite_name() const { return test_suite_name_.c_str(); }test_suite_name534,19511
  const char* test_case_name() const { return test_suite_name(); }test_case_name538,19677
  const char* name() const { return name_.c_str(); }name542,19818
  const char* type_param() const {type_param546,19983
  const char* value_param() const {value_param553,20227
  const char* file() const { return location_.file.c_str(); }file559,20412
  int line() const { return location_.line; }line562,20525
  bool is_in_another_shard() const { return is_in_another_shard_; }is_in_another_shard565,20651
  bool should_run() const { return should_run_; }should_run583,21574
  bool is_reportable() const {is_reportable586,21699
  const TestResult* result() const { return &result_; }result593,21927
  int increment_death_test_count() {increment_death_test_count621,23183
  static void ClearTestResult(TestInfo* test_info) {ClearTestResult632,23445
  const std::string test_suite_name_;  // test suite nametest_suite_name_637,23591
  const std::string name_;             // Test namename_638,23649
  const std::unique_ptr<const ::std::string> type_param_;type_param_641,23800
  const std::unique_ptr<const ::std::string> value_param_;value_param_644,23963
  internal::CodeLocation location_;location_645,24022
  const internal::TypeId fixture_class_id_;  // ID of the test fixture classfixture_class_id_646,24058
  bool should_run_;           // True if and only if this test should runshould_run_647,24135
  bool is_disabled_;          // True if and only if this test is disabledis_disabled_648,24209
  bool matches_filter_;       // True if this test matches thematches_filter_649,24284
  bool is_in_another_shard_;  // Will be run in another shard.is_in_another_shard_651,24403
  internal::TestFactoryBase* const factory_;  // The factory that createsfactory_652,24466
  TestResult result_;result_657,24705
class GTEST_API_ TestSuite {TestSuite666,24910
  const char* name() const { return name_.c_str(); }name688,25725
  const char* type_param() const {type_param692,25885
  bool should_run() const { return should_run_; }should_run698,26073
  bool Passed() const { return !Failed(); }Passed725,26972
  bool Failed() const {Failed728,27073
  TimeInMillis elapsed_time() const { return elapsed_time_; }elapsed_time733,27219
  TimeInMillis start_timestamp() const { return start_timestamp_; }start_timestamp737,27371
  const TestResult& ad_hoc_test_result() const { return ad_hoc_test_result_; }ad_hoc_test_result745,27752
  std::vector<TestInfo*>& test_info_list() { return test_info_list_; }test_info_list752,27966
  const std::vector<TestInfo*>& test_info_list() const {test_info_list755,28103
  void set_should_run(bool should) { should_run_ = should; }set_should_run764,28406
  static void ClearTestSuiteResult(TestSuite* test_suite) {ClearTestSuiteResult774,28766
  void RunSetUpTestSuite() {RunSetUpTestSuite786,29118
  void RunTearDownTestSuite() {RunTearDownTestSuite794,29350
  static bool TestPassed(const TestInfo* test_info) {TestPassed801,29501
  static bool TestSkipped(const TestInfo* test_info) {TestSkipped806,29676
  static bool TestFailed(const TestInfo* test_info) {TestFailed811,29852
  static bool TestReportableDisabled(const TestInfo* test_info) {TestReportableDisabled817,30079
  static bool TestDisabled(const TestInfo* test_info) {TestDisabled822,30267
  static bool TestReportable(const TestInfo* test_info) {TestReportable827,30438
  static bool ShouldRunTest(const TestInfo* test_info) {ShouldRunTest832,30588
  std::string name_;name_843,30891
  const std::unique_ptr<const ::std::string> type_param_;type_param_846,31011
  std::vector<TestInfo*> test_info_list_;test_info_list_849,31165
  std::vector<int> test_indices_;test_indices_853,31416
  internal::SetUpTestSuiteFunc set_up_tc_;set_up_tc_855,31508
  internal::TearDownTestSuiteFunc tear_down_tc_;tear_down_tc_857,31612
  bool should_run_;should_run_859,31726
  TimeInMillis start_timestamp_;start_timestamp_861,31801
  TimeInMillis elapsed_time_;elapsed_time_863,31870
  TestResult ad_hoc_test_result_;ad_hoc_test_result_866,31999
class Environment {Environment887,32799
  virtual ~Environment() {}~Environment890,32890
  virtual void SetUp() {}SetUp893,32979
  virtual void TearDown() {}TearDown896,33069
  struct Setup_should_be_spelled_SetUp {};Setup_should_be_spelled_SetUp901,33247
  virtual Setup_should_be_spelled_SetUp* Setup() { return nullptr; }Setup902,33290
class GTEST_API_ AssertionExceptionAssertionException908,33464
  explicit AssertionException(const TestPartResult& result)AssertionException911,33561
class TestEventListener {TestEventListener919,33831
  virtual ~TestEventListener() {}~TestEventListener921,33866
  virtual void OnTestSuiteStart(const TestSuite& /*test_suite*/) {}OnTestSuiteStart939,34639
  virtual void OnTestCaseStart(const TestCase& /*test_case*/) {}OnTestCaseStart943,34801
  virtual void OnTestDisabled(const TestInfo& /*test_info*/) {}OnTestDisabled950,35043
  virtual void OnTestSuiteEnd(const TestSuite& /*test_suite*/) {}OnTestSuiteEnd961,35533
  virtual void OnTestCaseEnd(const TestCase& /*test_case*/) {}OnTestCaseEnd965,35691
class EmptyTestEventListener : public TestEventListener {EmptyTestEventListener986,36654
  void OnTestProgramStart(const UnitTest& /*unit_test*/) override {}OnTestProgramStart988,36721
  void OnTestIterationStart(const UnitTest& /*unit_test*/,OnTestIterationStart989,36790
  void OnEnvironmentsSetUpStart(const UnitTest& /*unit_test*/) override {}OnEnvironmentsSetUpStart991,36908
  void OnEnvironmentsSetUpEnd(const UnitTest& /*unit_test*/) override {}OnEnvironmentsSetUpEnd992,36983
  void OnTestSuiteStart(const TestSuite& /*test_suite*/) override {}OnTestSuiteStart993,37056
  void OnTestCaseStart(const TestCase& /*test_case*/) override {}OnTestCaseStart996,37216
  void OnTestStart(const TestInfo& /*test_info*/) override {}OnTestStart999,37329
  void OnTestDisabled(const TestInfo& /*test_info*/) override {}OnTestDisabled1000,37391
  void OnTestPartResult(const TestPartResult& /*test_part_result*/) override {}OnTestPartResult1001,37456
  void OnTestEnd(const TestInfo& /*test_info*/) override {}OnTestEnd1002,37536
  void OnTestSuiteEnd(const TestSuite& /*test_suite*/) override {}OnTestSuiteEnd1003,37596
  void OnTestCaseEnd(const TestCase& /*test_case*/) override {}OnTestCaseEnd1005,37705
  void OnEnvironmentsTearDownStart(const UnitTest& /*unit_test*/) override {}OnEnvironmentsTearDownStart1008,37816
  void OnEnvironmentsTearDownEnd(const UnitTest& /*unit_test*/) override {}OnEnvironmentsTearDownEnd1009,37894
  void OnTestIterationEnd(const UnitTest& /*unit_test*/,OnTestIterationEnd1010,37970
  void OnTestProgramEnd(const UnitTest& /*unit_test*/) override {}OnTestProgramEnd1012,38084
class GTEST_API_ TestEventListeners {TestEventListeners1016,38234
  TestEventListener* default_result_printer() const {default_result_printer1036,39153
  TestEventListener* default_xml_generator() const {default_xml_generator1047,39705
  internal::TestEventRepeater* repeater_;repeater_1083,41237
  TestEventListener* default_result_printer_;default_result_printer_1085,41337
  TestEventListener* default_xml_generator_;default_xml_generator_1087,41450
class GTEST_API_ UnitTest {UnitTest1104,42017
  internal::UnitTestImpl* impl() { return impl_; }impl1257,47960
  const internal::UnitTestImpl* impl() const { return impl_; }impl1258,48011
  mutable internal::Mutex mutex_;mutex_1289,49198
  internal::UnitTestImpl* impl_;impl_1295,49490
inline Environment* AddGlobalTestEnvironment(Environment* env) {AddGlobalTestEnvironment1320,50558
namespace internal {internal1343,51445
AssertionResult CmpHelperEQFailure(const char* lhs_expression,CmpHelperEQFailure1349,51702
struct faketype {};faketype1360,52234
inline bool operator==(faketype, faketype) { return true; }operator ==1361,52254
inline bool operator!=(faketype, faketype) { return false; }operator !=1362,52314
AssertionResult CmpHelperEQ(const char* lhs_expression,CmpHelperEQ1366,52459
class EqHelper {EqHelper1376,52761
  static AssertionResult Compare(const char* lhs_expression,Compare1385,53152
  static AssertionResult Compare(const char* lhs_expression,Compare1397,53735
  static AssertionResult Compare(Compare1404,54019
AssertionResult CmpHelperOpFailure(const char* expr1, const char* expr2,CmpHelperOpFailure1418,54631
#define GTEST_IMPL_CMP_HELPER_(GTEST_IMPL_CMP_HELPER_1433,55286
namespace internal {internal1547,61167
AssertionResult CmpHelperFloatingPointEQ(const char* lhs_expression,CmpHelperFloatingPointEQ1557,61434
class GTEST_API_ AssertHelper {AssertHelper1590,62786
  struct AssertHelperData {AssertHelperData1606,63431
    AssertHelperData(TestPartResult::Type t, const char* srcfile, int line_num,AssertHelperData1607,63459
    TestPartResult::Type const type;type1611,63644
    const char* const file;file1612,63681
    int const line;line1613,63709
    std::string const message;message1614,63729
  AssertHelperData* const data_;data_1621,63902
class WithParamInterface {WithParamInterface1664,65286
  typedef T ParamType;ParamType1666,65322
  virtual ~WithParamInterface() {}~WithParamInterface1667,65345
  static const ParamType& GetParam() {GetParam1671,65473
  static void SetParam(const ParamType* parameter) { parameter_ = parameter; }SetParam1681,65877
  static const ParamType* parameter_;parameter_1684,66028
const T* WithParamInterface<T>::parameter_ = nullptr;parameter_1692,66242
class TestWithParam : public Test, public WithParamInterface<T> {};TestWithParam1698,66459
#define GTEST_SKIP() GTEST_SKIP_GTEST_SKIP1705,66704
#define ADD_FAILURE(ADD_FAILURE1725,67567
#define ADD_FAILURE_AT(ADD_FAILURE_AT1729,67717
#define GTEST_FAIL(GTEST_FAIL1734,67924
#define GTEST_FAIL_AT(GTEST_FAIL_AT1737,68038
#define FAIL() GTEST_FAIL(FAIL1744,68343
#define GTEST_SUCCEED(GTEST_SUCCEED1748,68426
#define SUCCEED() GTEST_SUCCEED(SUCCEED1753,68639
#define EXPECT_THROW(EXPECT_THROW1765,69061
#define EXPECT_NO_THROW(EXPECT_NO_THROW1767,69191
#define EXPECT_ANY_THROW(EXPECT_ANY_THROW1769,69287
#define ASSERT_THROW(ASSERT_THROW1771,69385
#define ASSERT_NO_THROW(ASSERT_NO_THROW1773,69512
#define ASSERT_ANY_THROW(ASSERT_ANY_THROW1775,69605
#define GTEST_EXPECT_TRUE(GTEST_EXPECT_TRUE1781,69895
#define GTEST_EXPECT_FALSE(GTEST_EXPECT_FALSE1784,70062
#define GTEST_ASSERT_TRUE(GTEST_ASSERT_TRUE1787,70235
#define GTEST_ASSERT_FALSE(GTEST_ASSERT_FALSE1789,70354
#define EXPECT_TRUE(condition) GTEST_EXPECT_TRUE(EXPECT_TRUE1797,70695
#define EXPECT_FALSE(condition) GTEST_EXPECT_FALSE(EXPECT_FALSE1801,70799
#define ASSERT_TRUE(condition) GTEST_ASSERT_TRUE(ASSERT_TRUE1805,70904
#define ASSERT_FALSE(condition) GTEST_ASSERT_FALSE(ASSERT_FALSE1809,71008
#define EXPECT_EQ(EXPECT_EQ1858,72971
#define EXPECT_NE(EXPECT_NE1860,73077
#define EXPECT_LE(EXPECT_LE1862,73177
#define EXPECT_LT(EXPECT_LT1864,73277
#define EXPECT_GE(EXPECT_GE1866,73377
#define EXPECT_GT(EXPECT_GT1868,73477
#define GTEST_ASSERT_EQ(GTEST_ASSERT_EQ1871,73578
#define GTEST_ASSERT_NE(GTEST_ASSERT_NE1873,73690
#define GTEST_ASSERT_LE(GTEST_ASSERT_LE1875,73796
#define GTEST_ASSERT_LT(GTEST_ASSERT_LT1877,73902
#define GTEST_ASSERT_GE(GTEST_ASSERT_GE1879,74008
#define GTEST_ASSERT_GT(GTEST_ASSERT_GT1881,74114
#define ASSERT_EQ(val1, val2) GTEST_ASSERT_EQ(ASSERT_EQ1888,74387
#define ASSERT_NE(val1, val2) GTEST_ASSERT_NE(ASSERT_NE1892,74486
#define ASSERT_LE(val1, val2) GTEST_ASSERT_LE(ASSERT_LE1896,74585
#define ASSERT_LT(val1, val2) GTEST_ASSERT_LT(ASSERT_LT1900,74684
#define ASSERT_GE(val1, val2) GTEST_ASSERT_GE(ASSERT_GE1904,74783
#define ASSERT_GT(val1, val2) GTEST_ASSERT_GT(ASSERT_GT1908,74882
#define EXPECT_STREQ(EXPECT_STREQ1927,75584
#define EXPECT_STRNE(EXPECT_STRNE1929,75682
#define EXPECT_STRCASEEQ(EXPECT_STRCASEEQ1931,75780
#define EXPECT_STRCASENE(EXPECT_STRCASENE1933,75886
#define ASSERT_STREQ(ASSERT_STREQ1936,75993
#define ASSERT_STRNE(ASSERT_STRNE1938,76091
#define ASSERT_STRCASEEQ(ASSERT_STRCASEEQ1940,76189
#define ASSERT_STRCASENE(ASSERT_STRCASENE1942,76295
#define EXPECT_FLOAT_EQ(EXPECT_FLOAT_EQ1959,77034
#define EXPECT_DOUBLE_EQ(EXPECT_DOUBLE_EQ1963,77225
#define ASSERT_FLOAT_EQ(ASSERT_FLOAT_EQ1967,77418
#define ASSERT_DOUBLE_EQ(ASSERT_DOUBLE_EQ1971,77609
#define EXPECT_NEAR(EXPECT_NEAR1975,77802
#define ASSERT_NEAR(ASSERT_NEAR1979,77994
#define EXPECT_HRESULT_SUCCEEDED(EXPECT_HRESULT_SUCCEEDED2006,79234
#define ASSERT_HRESULT_SUCCEEDED(ASSERT_HRESULT_SUCCEEDED2009,79345
#define EXPECT_HRESULT_FAILED(EXPECT_HRESULT_FAILED2012,79456
#define ASSERT_HRESULT_FAILED(ASSERT_HRESULT_FAILED2015,79564
#define ASSERT_NO_FATAL_FAILURE(ASSERT_NO_FATAL_FAILURE2030,79995
#define EXPECT_NO_FATAL_FAILURE(EXPECT_NO_FATAL_FAILURE2032,80104
class GTEST_API_ ScopedTrace {ScopedTrace2045,80652
  ScopedTrace(const char* file, int line, const T& message) {ScopedTrace2053,80932
  ScopedTrace(const char* file, int line, const char* message) {ScopedTrace2058,81098
  ScopedTrace(const char* file, int line, const std::string& message) {ScopedTrace2062,81225
} GTEST_ATTRIBUTE_UNUSED_;  // A ScopedTrace object does its job in itsGTEST_ATTRIBUTE_UNUSED_2077,81692
#define SCOPED_TRACE(SCOPED_TRACE2096,82605
constexpr bool StaticAssertTypeEq() noexcept {StaticAssertTypeEq2131,83800
#define GTEST_TEST(GTEST_TEST2161,84971
#define TEST(test_suite_name, test_name) GTEST_TEST(TEST2168,85300
#define GTEST_TEST_F(GTEST_TEST_F2196,86130
#define TEST_F(test_fixture, test_name) GTEST_TEST_F(TEST_F2200,86332
TestInfo* RegisterTest(const char* test_suite_name, const char* test_name,RegisterTest2270,88701
  using TestT = typename std::remove_pointer<decltype(factory())>::type;TestT2273,88918
  class FactoryImpl : public internal::TestFactoryBase {FactoryImpl2275,88992
    explicit FactoryImpl(Factory f) : factory_(std::move(f)) {}FactoryImpl2277,89060
    Test* CreateTest() override { return factory_(); }CreateTest2278,89124
    Factory factory_;factory_2281,89192
inline int RUN_ALL_TESTS() { return ::testing::UnitTest::GetInstance()->Run(); }RUN_ALL_TESTS2304,89984

build/_deps/googletest-src/googletest/include/gtest/gtest-printers.h,9307
#define GOOGLETEST_INCLUDE_GTEST_GTEST_PRINTERS_H_GOOGLETEST_INCLUDE_GTEST_GTEST_PRINTERS_H_102,4716
namespace testing {testing117,5036
namespace internal {internal121,5171
struct ContainerPrinter {ContainerPrinter128,5365
  static void PrintValue(const T& container, std::ostream* os) {PrintValue133,5593
struct FunctionPointerPrinter {FunctionPointerPrinter165,6590
  static void PrintValue(T* p, ::std::ostream* os) {PrintValue168,6745
struct PointerPrinter {PointerPrinter180,7070
  static void PrintValue(T* p, ::std::ostream* os) {PrintValue182,7118
namespace internal_stream_operator_without_lexical_name_lookup {internal_stream_operator_without_lexical_name_lookup194,7416
struct LookupBlocker {};LookupBlocker200,7724
struct StreamPrinter {StreamPrinter203,7797
  static void PrintValue(const T& value, ::std::ostream* os) {PrintValue213,8350
struct ProtobufPrinter {ProtobufPrinter222,8614
  static const size_t kProtobufOneLinerMaxLength = 50;kProtobufOneLinerMaxLength226,8822
  static void PrintValue(const T& value, ::std::ostream* os) {PrintValue231,9028
struct ConvertibleToIntegerPrinter {ConvertibleToIntegerPrinter240,9304
  static void PrintValue(internal::BiggestInt value, ::std::ostream* os) {PrintValue248,9732
struct ConvertibleToStringViewPrinter {ConvertibleToStringViewPrinter253,9833
  static void PrintValue(internal::StringView value, ::std::ostream* os) {PrintValue255,9908
struct RawBytesPrinter {RawBytesPrinter265,10261
  static void PrintValue(const T& value, ::std::ostream* os) {PrintValue268,10392
struct FallbackPrinter {FallbackPrinter277,10684
  static void PrintValue(const T&, ::std::ostream* os) {PrintValue279,10733
struct FindFirstPrinter : FindFirstPrinter<T, E, Printers...> {};FindFirstPrinter286,10971
struct FindFirstPrinter<FindFirstPrinter289,11100
  using type = Printer;type292,11226
void PrintWithFallback(const T& value, ::std::ostream* os) {PrintWithFallback305,11672
  using Printer = typename FindFirstPrinter<Printer306,11733
class FormatForComparison {FormatForComparison330,12975
  static ::std::string Format(const ToPrint& value) {Format332,13012
class FormatForComparison<ToPrint[N], OtherOperand> {FormatForComparison339,13189
  static ::std::string Format(const ToPrint* value) {Format341,13252
#define GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_(GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_349,13522
#define GTEST_IMPL_FORMAT_C_STRING_AS_STRING_(GTEST_IMPL_FORMAT_C_STRING_AS_STRING_376,14794
std::string FormatForComparisonFailureMessage(const T1& value,FormatForComparisonFailureMessage412,16601
void PrintTo(const T& value, ::std::ostream* os) {PrintTo439,17832
inline void PrintTo(char c, ::std::ostream* os) {PrintTo450,18257
inline void PrintTo(bool x, ::std::ostream* os) {PrintTo458,18571
inline void PrintTo(char16_t c, ::std::ostream* os) {PrintTo472,19184
inline void PrintTo(char8_t c, ::std::ostream* os) {PrintTo476,19304
inline void PrintTo(char* s, ::std::ostream* os) {PrintTo489,19706
inline void PrintTo(const signed char* s, ::std::ostream* os) {PrintTo495,19925
inline void PrintTo(signed char* s, ::std::ostream* os) {PrintTo498,20037
inline void PrintTo(const unsigned char* s, ::std::ostream* os) {PrintTo501,20143
inline void PrintTo(unsigned char* s, ::std::ostream* os) {PrintTo504,20257
inline void PrintTo(char8_t* s, ::std::ostream* os) {PrintTo510,20478
inline void PrintTo(char16_t* s, ::std::ostream* os) {PrintTo516,20684
inline void PrintTo(char32_t* s, ::std::ostream* os) {PrintTo521,20885
inline void PrintTo(wchar_t* s, ::std::ostream* os) {PrintTo533,21469
void PrintRawArrayTo(const T a[], size_t count, ::std::ostream* os) {PrintRawArrayTo544,21772
inline void PrintTo(const ::std::string& s, ::std::ostream* os) {PrintTo554,22071
inline void PrintTo(const ::std::u8string& s, ::std::ostream* os) {PrintTo561,22301
inline void PrintTo(const ::std::u16string& s, ::std::ostream* os) {PrintTo568,22520
inline void PrintTo(const ::std::u32string& s, ::std::ostream* os) {PrintTo574,22734
inline void PrintTo(const ::std::wstring& s, ::std::ostream* os) {PrintTo581,22972
inline void PrintTo(internal::StringView sp, ::std::ostream* os) {PrintTo588,23176
inline void PrintTo(std::nullptr_t, ::std::ostream* os) { *os << "(nullptr)"; }PrintTo593,23322
inline void PrintTo(const std::type_info& info, std::ostream* os) {PrintTo596,23422
void PrintTo(std::reference_wrapper<T> ref, ::std::ostream* os) {PrintTo602,23579
inline const void* VoidifyPointer(const void* p) { return p; }VoidifyPointer606,23694
inline const void* VoidifyPointer(volatile const void* p) {VoidifyPointer607,23757
void PrintSmartPointer(const Ptr& ptr, std::ostream* os, char) {PrintSmartPointer612,23893
void PrintSmartPointer(const Ptr& ptr, std::ostream* os, int) {PrintSmartPointer623,24321
void PrintTo(const std::unique_ptr<T, D>& ptr, std::ostream* os) {PrintTo634,24612
void PrintTo(const std::shared_ptr<T>& ptr, std::ostream* os) {PrintTo639,24742
void PrintTupleTo(const T&, std::integral_constant<size_t, 0>,PrintTupleTo646,24956
void PrintTupleTo(const T& t, std::integral_constant<size_t, I>,PrintTupleTo650,25090
void PrintTo(const ::std::tuple<Types...>& t, ::std::ostream* os) {PrintTo663,25509
void PrintTo(const ::std::pair<T1, T2>& value, ::std::ostream* os) {PrintTo671,25746
class UniversalPrinter {UniversalPrinter684,26227
  static void Print(const T& value, ::std::ostream* os) {Print693,26548
class UniversalPrinter<const T> : public UniversalPrinter<T> {};UniversalPrinter710,27199
class UniversalPrinter<Any> {UniversalPrinter717,27342
  static void Print(const Any& value, ::std::ostream* os) {Print719,27381
  static std::string GetTypeName(const Any& value) {GetTypeName728,27582
class UniversalPrinter<Optional<T>> {UniversalPrinter745,27958
  static void Print(const Optional<T>& value, ::std::ostream* os) {Print747,28005
class UniversalPrinter<decltype(Nullopt())> {UniversalPrinter759,28220
  static void Print(decltype(Nullopt()), ::std::ostream* os) {Print761,28275
class UniversalPrinter<Variant<T...>> {UniversalPrinter773,28512
  static void Print(const Variant<T...>& value, ::std::ostream* os) {Print775,28561
  struct Visitor {Visitor786,28832
    void operator()(const U& u) const {operator ()788,28877
    std::size_t index;index794,29068
void UniversalPrintArray(const T* begin, size_t len, ::std::ostream* os) {UniversalPrintArray803,29267
class UniversalPrinter<T[N]> {UniversalPrinter847,30915
  static void Print(const T (&a)[N], ::std::ostream* os) {Print851,31037
class UniversalPrinter<T&> {UniversalPrinter858,31205
  static void Print(const T& value, ::std::ostream* os) {Print864,31380
class UniversalTersePrinter {UniversalTersePrinter881,31972
  static void Print(const T& value, ::std::ostream* os) {Print883,32011
class UniversalTersePrinter<T&> {UniversalTersePrinter888,32129
  static void Print(const T& value, ::std::ostream* os) {Print890,32172
class UniversalTersePrinter<std::reference_wrapper<T>> {UniversalTersePrinter895,32290
  static void Print(std::reference_wrapper<T> value, ::std::ostream* os) {Print897,32356
class UniversalTersePrinter<T[N]> {UniversalTersePrinter902,32524
  static void Print(const T (&value)[N], ::std::ostream* os) {Print904,32569
class UniversalTersePrinter<const char*> {UniversalTersePrinter909,32697
  static void Print(const char* str, ::std::ostream* os) {Print911,32749
class UniversalTersePrinter<char*> : public UniversalTersePrinter<const char*> {UniversalTersePrinter920,32937
class UniversalTersePrinter<const char8_t*> {UniversalTersePrinter925,33055
  static void Print(const char8_t* str, ::std::ostream* os) {Print927,33110
class UniversalTersePrinter<char8_t*>UniversalTersePrinter936,33305
class UniversalTersePrinter<const char16_t*> {UniversalTersePrinter941,33418
  static void Print(const char16_t* str, ::std::ostream* os) {Print943,33474
class UniversalTersePrinter<char16_t*>UniversalTersePrinter952,33671
class UniversalTersePrinter<const char32_t*> {UniversalTersePrinter956,33779
  static void Print(const char32_t* str, ::std::ostream* os) {Print958,33835
class UniversalTersePrinter<char32_t*>UniversalTersePrinter967,34032
class UniversalTersePrinter<const wchar_t*> {UniversalTersePrinter972,34166
  static void Print(const wchar_t* str, ::std::ostream* os) {Print974,34221
class UniversalTersePrinter<wchar_t*> {UniversalTersePrinter985,34423
  static void Print(wchar_t* str, ::std::ostream* os) {Print987,34472
void UniversalTersePrint(const T& value, ::std::ostream* os) {UniversalTersePrint993,34617
void UniversalPrint(const T& value, ::std::ostream* os) {UniversalPrint1002,34970
  typedef T T1;T11005,35144
typedef ::std::vector<::std::string> Strings;Strings1009,35205
void TersePrintPrefixToStrings(const Tuple&, std::integral_constant<size_t, 0>,TersePrintPrefixToStrings1014,35377
void TersePrintPrefixToStrings(const Tuple& t,TersePrintPrefixToStrings1017,35537
Strings UniversalTersePrintTupleFieldsToStrings(const Tuple& value) {UniversalTersePrintTupleFieldsToStrings1031,36115
::std::string PrintToString(const T& value) {PrintToString1042,36394

build/_deps/googletest-src/googletest/include/gtest/gtest-param-test.h,1401
#define GOOGLETEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_GOOGLETEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_38,1847
namespace testing {testing184,7875
internal::ParamGenerator<T> Range(T start, T end, IncrementT step) {Range229,9700
internal::ParamGenerator<T> Range(T start, T end) {Range235,9902
ValuesIn(ForwardIterator begin, ForwardIterator end) {ValuesIn297,11972
  typedef typename std::iterator_traits<ForwardIterator>::value_type ParamType;ParamType298,12027
internal::ParamGenerator<T> ValuesIn(const T (&array)[N]) {ValuesIn304,12264
internal::ParamGenerator<typename Container::value_type> ValuesIn(ValuesIn309,12391
internal::ValueArray<T...> Values(T... v) {Values335,13284
inline internal::ParamGenerator<bool> Bool() { return Values(false, true); }Bool359,14101
internal::CartesianProductHolder<Generator...> Combine(const Generator&... g) {Combine406,15949
internal::ParamConverterGenerator<T> ConvertGenerator(ConvertGenerator445,17407
#define TEST_P(TEST_P450,17556
#define GTEST_EXPAND_(GTEST_EXPAND_491,20421
#define GTEST_GET_FIRST_(GTEST_GET_FIRST_492,20452
#define GTEST_GET_SECOND_(GTEST_GET_SECOND_493,20495
#define INSTANTIATE_TEST_SUITE_P(INSTANTIATE_TEST_SUITE_P495,20549
#define GTEST_ALLOW_UNINSTANTIATED_PARAMETERIZED_TEST(GTEST_ALLOW_UNINSTANTIATED_PARAMETERIZED_TEST530,23195
#define INSTANTIATE_TEST_CASE_P INSTANTIATE_TEST_CASE_P537,23541

build/_deps/googletest-src/googletest/include/gtest/gtest-test-part.h,2318
#define GOOGLETEST_INCLUDE_GTEST_GTEST_TEST_PART_H_GOOGLETEST_INCLUDE_GTEST_GTEST_TEST_PART_H_35,1723
namespace testing {testing46,2015
class GTEST_API_ TestPartResult {TestPartResult52,2245
  enum Type {Type56,2407
    kSuccess,          // Succeeded.kSuccess57,2421
    kNonFatalFailure,  // Failed but the test can continue.kNonFatalFailure58,2458
    kFatalFailure,     // Failed and the test should be terminated.kFatalFailure59,2518
    kSkip              // Skipped.kSkip60,2586
  TestPartResult(Type a_type, const char* a_file_name, int a_line_number,TestPartResult66,2783
  Type type() const { return type_; }type75,3137
  const char* file_name() const {file_name79,3276
  int line_number() const { return line_number_; }line_number85,3475
  const char* summary() const { return summary_.c_str(); }summary88,3573
  const char* message() const { return message_.c_str(); }message91,3686
  bool skipped() const { return type_ == kSkip; }skipped94,3806
  bool passed() const { return type_ == kSuccess; }passed97,3912
  bool nonfatally_failed() const { return type_ == kNonFatalFailure; }nonfatally_failed100,4032
  bool fatally_failed() const { return type_ == kFatalFailure; }fatally_failed103,4167
  bool failed() const { return fatally_failed() || nonfatally_failed(); }failed106,4288
  Type type_;type_109,4373
  std::string file_name_;file_name_117,4639
  int line_number_;line_number_120,4772
  std::string summary_;  // The test failure summary.summary_121,4792
  std::string message_;  // The test failure message.message_122,4846
class GTEST_API_ TestPartResultArray {TestPartResultArray132,5135
  TestPartResultArray() {}TestPartResultArray134,5183
  std::vector<TestPartResult> array_;array_146,5527
class GTEST_API_ TestPartResultReporterInterface {TestPartResultReporterInterface153,5759
  virtual ~TestPartResultReporterInterface() {}~TestPartResultReporterInterface155,5819
namespace internal {internal160,5943
class GTEST_API_ HasNewFatalFailureHelperHasNewFatalFailureHelper168,6399
  bool has_new_fatal_failure() const { return has_new_fatal_failure_; }has_new_fatal_failure174,6635
  bool has_new_fatal_failure_;has_new_fatal_failure_177,6718
  TestPartResultReporterInterface* original_reporter_;original_reporter_178,6749

build/_deps/googletest-src/googletest/include/gtest/gtest_prod.h,135
#define GOOGLETEST_INCLUDE_GTEST_GTEST_PROD_H_GOOGLETEST_INCLUDE_GTEST_GTEST_PROD_H_34,1691
#define FRIEND_TEST(FRIEND_TEST57,2351

build/_deps/googletest-src/googletest/include/gtest/gtest-assertion-result.h,847
#define GOOGLETEST_INCLUDE_GTEST_GTEST_ASSERTION_RESULT_H_GOOGLETEST_INCLUDE_GTEST_GTEST_ASSERTION_RESULT_H_39,1846
namespace testing {testing52,2209
class GTEST_API_ AssertionResult {AssertionResult133,4864
  explicit AssertionResult(AssertionResult155,5751
  GTEST_DISABLE_MSC_WARNINGS_POP_()GTEST_DISABLE_MSC_WARNINGS_POP_164,6028
  operator bool() const { return success_; }  // NOLINToperator bool174,6250
  const char* message() const {message183,6674
  const char* failure_message() const { return message(); }failure_message187,6820
  AssertionResult& operator<<(const T& value) {operator <<191,6961
  AssertionResult& operator<<(operator <<198,7164
  void AppendMessage(const Message& a_message) {AppendMessage206,7399
  bool success_;success_215,7720
  std::unique_ptr< ::std::string> message_;message_220,7972

build/_deps/googletest-src/googletest/include/gtest/gtest-message.h,1034
#define GOOGLETEST_INCLUDE_GTEST_GTEST_MESSAGE_H_GOOGLETEST_INCLUDE_GTEST_GTEST_MESSAGE_H_49,2247
namespace testing {testing64,2689
class GTEST_API_ Message {Message92,3559
  typedef std::ostream& (*BasicNarrowIoManip)(std::ostream&);BasicNarrowIoManip96,3684
  Message(const Message& msg) : ss_(new ::std::stringstream) {  // NOLINTMessage103,3827
  explicit Message(const char* str) : ss_(new ::std::stringstream) {Message108,3978
  inline Message& operator<<(const T& val) {operator <<114,4142
  inline Message& operator<<(T* const& pointer) {  // NOLINToperator <<148,5732
  Message& operator<<(BasicNarrowIoManip val) {operator <<163,6263
  Message& operator<<(bool b) { return *this << (b ? "true" : "false"); }operator <<169,6415
  const std::unique_ptr< ::std::stringstream> ss_;ss_190,7227
inline std::ostream& operator<<(std::ostream& os, const Message& sb) {operator <<198,7468
namespace internal {internal202,7573
std::string StreamableToString(const T& streamable) {StreamableToString209,7856

build/_deps/googletest-src/googletest/samples/sample4_unittest.cc,79
namespace {__anon563d77b8011134,1605
TEST(Counter, Increment) {TEST37,1651

build/_deps/googletest-src/googletest/samples/prime_tables.h,900
#define GOOGLETEST_SAMPLES_PRIME_TABLES_H_GOOGLETEST_SAMPLES_PRIME_TABLES_H_35,1812
class PrimeTable {PrimeTable40,1908
  virtual ~PrimeTable() {}~PrimeTable42,1936
class OnTheFlyPrimeTable : public PrimeTable {OnTheFlyPrimeTable53,2293
  bool IsPrime(int n) const override {IsPrime55,2349
  int GetNextPrime(int p) const override {GetNextPrime66,2588
class PreCalculatedPrimeTable : public PrimeTable {PreCalculatedPrimeTable77,2821
  explicit PreCalculatedPrimeTable(int max)PreCalculatedPrimeTable80,2945
  ~PreCalculatedPrimeTable() override { delete[] is_prime_; }~PreCalculatedPrimeTable84,3087
  bool IsPrime(int n) const override {IsPrime86,3150
  int GetNextPrime(int p) const override {GetNextPrime90,3251
  void CalculatePrimesUpTo(int max) {CalculatePrimesUpTo99,3416
  const int is_prime_size_;is_prime_size_117,4020
  bool* const is_prime_;is_prime_118,4048

build/_deps/googletest-src/googletest/samples/sample1_unittest.cc,333
namespace {__anon68205b35011147,2051
TEST(FactorialTest, Negative) {TEST76,3120
TEST(FactorialTest, Zero) { EXPECT_EQ(1, Factorial(0)); }TEST100,3823
TEST(FactorialTest, Positive) {TEST103,3922
TEST(IsPrimeTest, Negative) {TEST113,4126
TEST(IsPrimeTest, Trivial) {TEST122,4334
TEST(IsPrimeTest, Positive) {TEST130,4501

build/_deps/googletest-src/googletest/samples/sample8_unittest.cc,973
namespace {__anon93b99dbc011137,1870
class HybridPrimeTable : public PrimeTable {HybridPrimeTable46,2351
  HybridPrimeTable(bool force_on_the_fly, int max_precalculated)HybridPrimeTable48,2405
  ~HybridPrimeTable() override {~HybridPrimeTable54,2721
  bool IsPrime(int n) const override {IsPrime59,2814
  int GetNextPrime(int p) const override {GetNextPrime66,3010
  OnTheFlyPrimeTable* on_the_fly_impl_;on_the_fly_impl_75,3283
  PreCalculatedPrimeTable* precalc_impl_;precalc_impl_76,3323
  int max_precalculated_;max_precalculated_77,3365
class PrimeTableTest : public TestWithParam< ::std::tuple<bool, int> > {PrimeTableTest90,3830
  void SetUp() override {SetUp92,3915
  void TearDown() override {TearDown98,4135
  HybridPrimeTable* table_;table_102,4209
TEST_P(PrimeTableTest, ReturnsFalseForNonPrimes) {TEST_P105,4241
TEST_P(PrimeTableTest, ReturnsTrueForPrimes) {TEST_P120,4825
TEST_P(PrimeTableTest, CanGetNextPrime) {TEST_P129,5088

build/_deps/googletest-src/googletest/samples/sample5_unittest.cc,763
namespace {__anona59c8139011151,2388
class QuickTest : public testing::Test {QuickTest62,2851
  void SetUp() override { start_time_ = time(nullptr); }SetUp66,3024
  void TearDown() override {TearDown70,3190
  time_t start_time_;start_time_81,3589
class IntegerFunctionTest : public QuickTest {IntegerFunctionTest87,3772
TEST_F(IntegerFunctionTest, Factorial) {TEST_F95,4016
TEST_F(IntegerFunctionTest, IsPrime) {TEST_F112,4440
class QueueTest : public QuickTest {QueueTest137,5192
  void SetUp() override {SetUp139,5241
  Queue<int> q0_;q0_157,5707
  Queue<int> q1_;q1_158,5725
  Queue<int> q2_;q2_159,5743
TEST_F(QueueTest, DefaultConstructor) { EXPECT_EQ(0u, q0_.Size()); }TEST_F165,5855
TEST_F(QueueTest, Dequeue) {TEST_F168,5945

build/_deps/googletest-src/googletest/samples/sample9_unittest.cc,741
namespace {__anone318a73d011145,2063
class TersePrinter : public EmptyTestEventListener {TersePrinter48,2172
  void OnTestProgramStart(const UnitTest& /* unit_test */) override {}OnTestProgramStart51,2280
  void OnTestProgramEnd(const UnitTest& unit_test) override {OnTestProgramEnd54,2402
  void OnTestStart(const TestInfo& test_info) override {OnTestStart60,2599
  void OnTestPartResult(const TestPartResult& test_part_result) override {OnTestPartResult67,2855
  void OnTestEnd(const TestInfo& test_info) override {OnTestEnd76,3209
TEST(CustomOutputTest, PrintsMessage) {TEST83,3423
TEST(CustomOutputTest, Succeeds) {TEST87,3522
TEST(CustomOutputTest, Fails) {TEST91,3615
int main(int argc, char** argv) {main97,3765

build/_deps/googletest-src/googletest/samples/sample1.cc,79
int Factorial(int n) {Factorial35,1726
bool IsPrime(int n) {IsPrime45,1894

build/_deps/googletest-src/googletest/samples/sample2.cc,139
const char* MyString::CloneCString(const char* a_c_string) {CloneCString37,1735
void MyString::Set(const char* a_c_string) {Set49,2052

build/_deps/googletest-src/googletest/samples/sample4.cc,181
int Counter::Increment() { return counter_++; }Increment37,1727
int Counter::Decrement() {Decrement41,1890
void Counter::Print() const { printf("%d", counter_); }Print50,2049

build/_deps/googletest-src/googletest/samples/sample3-inl.h,1241
#define GOOGLETEST_SAMPLES_SAMPLE3_INL_H_GOOGLETEST_SAMPLES_SAMPLE3_INL_H_33,1670
class QueueNode {QueueNode46,2072
  const E& element() const { return element_; }element51,2161
  QueueNode* next() { return next_; }next54,2248
  const QueueNode* next() const { return next_; }next55,2286
  explicit QueueNode(const E& an_element)QueueNode60,2434
  E element_;element_67,2669
  QueueNode* next_;next_68,2683
class Queue {Queue72,2756
  Queue() : head_(nullptr), last_(nullptr), size_(0) {}Queue75,2808
  ~Queue() { Clear(); }~Queue78,2896
  void Clear() {Clear81,2944
  size_t Size() const { return size_; }Size100,3356
  QueueNode<E>* Head() { return head_; }Head103,3470
  const QueueNode<E>* Head() const { return head_; }Head104,3511
  QueueNode<E>* Last() { return last_; }Last107,3637
  const QueueNode<E>* Last() const { return last_; }Last108,3678
  void Enqueue(const E& element) {Enqueue114,3976
  E* Dequeue() {Dequeue129,4326
  Queue* Map(F function) const {Map151,4797
  QueueNode<E>* head_;  // The first node of the queue.head_162,5054
  QueueNode<E>* last_;  // The last node of the queue.last_163,5110
  size_t size_;         // The number of elements in the queue.size_164,5165

build/_deps/googletest-src/googletest/samples/sample6_unittest.cc,1143
namespace {__anonf4fb8aba011136,1796
PrimeTable* CreatePrimeTable<OnTheFlyPrimeTable>() {CreatePrimeTable45,2065
PrimeTable* CreatePrimeTable<PreCalculatedPrimeTable>() {CreatePrimeTable50,2166
class PrimeTableTest : public testing::Test {PrimeTableTest56,2340
  PrimeTableTest() : table_(CreatePrimeTable<T>()) {}PrimeTableTest60,2486
  ~PrimeTableTest() override { delete table_; }~PrimeTableTest62,2541
  PrimeTable* const table_;table_71,3043
typedef Types<OnTheFlyPrimeTable, PreCalculatedPrimeTable> Implementations;Implementations89,3567
TYPED_TEST(PrimeTableTest, ReturnsFalseForNonPrimes) {TYPED_TEST95,3789
TYPED_TEST(PrimeTableTest, ReturnsTrueForPrimes) {TYPED_TEST111,4464
TYPED_TEST(PrimeTableTest, CanGetNextPrime) {TYPED_TEST120,4767
class PrimeTableTest2 : public PrimeTableTest<T> {};PrimeTableTest2152,6158
TYPED_TEST_P(PrimeTableTest2, ReturnsFalseForNonPrimes) {TYPED_TEST_P161,6541
TYPED_TEST_P(PrimeTableTest2, ReturnsTrueForPrimes) {TYPED_TEST_P170,6857
TYPED_TEST_P(PrimeTableTest2, CanGetNextPrime) {TYPED_TEST_P179,7163
    PrimeTableImplementations;PrimeTableImplementations209,8582

build/_deps/googletest-src/googletest/samples/sample1.h,76
#define GOOGLETEST_SAMPLES_SAMPLE1_H_GOOGLETEST_SAMPLES_SAMPLE1_H_33,1666

build/_deps/googletest-src/googletest/samples/sample3_unittest.cc,516
namespace {__anon06de6e37011165,3097
class QueueTestSmpl3 : public testing::Test {QueueTestSmpl367,3170
  void SetUp() override {SetUp73,3501
  static int Double(int n) { return 2 * n; }Double87,3853
  void MapTester(const Queue<int>* q) {MapTester90,3948
  Queue<int> q0_;q0_108,4576
  Queue<int> q1_;q1_109,4594
  Queue<int> q2_;q2_110,4612
TEST_F(QueueTestSmpl3, DefaultConstructor) {TEST_F117,4747
TEST_F(QueueTestSmpl3, Dequeue) {TEST_F123,4895
TEST_F(QueueTestSmpl3, Map) {TEST_F141,5247

build/_deps/googletest-src/googletest/samples/sample4.h,186
#define GOOGLETEST_SAMPLES_SAMPLE4_H_GOOGLETEST_SAMPLES_SAMPLE4_H_32,1665
class Counter {Counter35,1735
  int counter_;counter_37,1761
  Counter() : counter_(0) {}Counter41,1828

build/_deps/googletest-src/googletest/samples/sample2.h,588
#define GOOGLETEST_SAMPLES_SAMPLE2_H_GOOGLETEST_SAMPLES_SAMPLE2_H_33,1666
class MyString {MyString38,1752
  const char* c_string_;c_string_40,1779
  MyString() : c_string_(nullptr) {}MyString52,2120
  explicit MyString(const char* a_c_string) : c_string_(nullptr) {MyString55,2221
  MyString(const MyString& string) : c_string_(nullptr) {MyString60,2330
  ~MyString() { delete[] c_string_; }~MyString68,2589
  const char* c_string() const { return c_string_; }c_string71,2697
  size_t Length() const { return c_string_ == nullptr ? 0 : strlen(c_string_); }Length73,2751

build/_deps/googletest-src/googletest/samples/sample10_unittest.cc,818
namespace {__anonbf48aba5011144,1940
class Water {Water46,1996
  void* operator new(size_t allocation_size) {operator new51,2132
  void operator delete(void* block, size_t /* allocation_size */) {operator delete56,2238
  static int allocated() { return allocated_; }allocated61,2346
  static int allocated_;allocated_64,2405
int Water::allocated_ = 0;allocated_67,2434
class LeakChecker : public EmptyTestEventListener {LeakChecker73,2736
  void OnTestStart(const TestInfo& /* test_info */) override {OnTestStart76,2832
  void OnTestEnd(const TestInfo& /* test_info */) override {OnTestEnd81,2978
  int initially_allocated_;initially_allocated_90,3340
TEST(ListenersTest, DoesNotLeak) {TEST93,3372
TEST(ListenersTest, LeaksWater) {TEST100,3536
int main(int argc, char** argv) {main106,3650

build/_deps/googletest-src/googletest/samples/sample2_unittest.cc,291
namespace {__anonb77f64b6011143,2005
TEST(MyString, DefaultConstructor) {TEST47,2112
const char kHelloString[] = "Hello, world!";kHelloString75,3004
TEST(MyString, ConstructorFromCString) {TEST78,3094
TEST(MyString, CopyConstructor) {TEST85,3326
TEST(MyString, Set) {TEST92,3502

build/_deps/googletest-src/googletest/samples/sample7_unittest.cc,840
namespace {__anon445a943b011139,1932
typedef PrimeTable* CreatePrimeTableFunc();CreatePrimeTableFunc49,2361
PrimeTable* CreateOnTheFlyPrimeTable() { return new OnTheFlyPrimeTable(); }CreateOnTheFlyPrimeTable51,2406
PrimeTable* CreatePreCalculatedPrimeTable() {CreatePreCalculatedPrimeTable54,2519
class PrimeTableTestSmpl7 : public TestWithParam<CreatePrimeTableFunc*> {PrimeTableTestSmpl762,2893
  ~PrimeTableTestSmpl7() override { delete table_; }~PrimeTableTestSmpl764,2976
  void SetUp() override { table_ = (*GetParam())(); }SetUp65,3029
  void TearDown() override {TearDown66,3083
  PrimeTable* table_;table_72,3170
TEST_P(PrimeTableTestSmpl7, ReturnsFalseForNonPrimes) {TEST_P75,3196
TEST_P(PrimeTableTestSmpl7, ReturnsTrueForPrimes) {TEST_P84,3474
TEST_P(PrimeTableTestSmpl7, CanGetNextPrime) {TEST_P93,3742

build/_deps/googletest-src/googletest/src/gtest-typed-test.cc,426
namespace testing {testing34,1619
namespace internal {internal35,1639
static const char* SkipSpaces(const char* str) {SkipSpaces39,1777
static std::vector<std::string> SplitIntoTestNames(const char* src) {SplitIntoTestNames44,1874
const char* TypedTestSuitePState::VerifyRegisteredTestNames(VerifyRegisteredTestNames56,2308
  typedef RegisteredTestsMap::const_iterator RegisteredTestIter;RegisteredTestIter61,2548

build/_deps/googletest-src/googletest/src/gtest-death-test.cc,8420
namespace testing {testing88,2690
static const char kDefaultDeathTestStyle[] = GTEST_DEFAULT_DEATH_TEST_STYLE;kDefaultDeathTestStyle97,2970
namespace testing {testing132,4617
namespace internal {internal136,4664
static bool g_in_fast_death_test_child = false;g_in_fast_death_test_child141,4847
bool InDeathTestChild() {InDeathTestChild149,5260
ExitedWithCode::ExitedWithCode(int exit_code) : exit_code_(exit_code) {}ExitedWithCode168,5741
bool ExitedWithCode::operator()(int exit_status) const {operator ()171,5857
KilledBySignal::KilledBySignal(int signum) : signum_(signum) {}KilledBySignal185,6201
bool KilledBySignal::operator()(int exit_status) const {operator ()188,6308
namespace internal {internal201,6715
static std::string ExitSummary(int exit_code) {ExitSummary207,6871
bool ExitedUnsuccessfully(int exit_status) {ExitedUnsuccessfully233,7517
static std::string DeathTestThreadWarning(size_t thread_count) {DeathTestThreadWarning242,7908
static const char kDeathTestLived = 'L';kDeathTestLived261,8693
static const char kDeathTestReturned = 'R';kDeathTestReturned262,8734
static const char kDeathTestThrew = 'T';kDeathTestThrew263,8778
static const char kDeathTestInternalError = 'I';kDeathTestInternalError264,8819
static const int kFuchsiaReadPipeFd = 3;kFuchsiaReadPipeFd269,8950
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };DeathTestOutcome280,9465
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };IN_PROGRESS280,9465
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };DIED280,9465
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };LIVED280,9465
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };RETURNED280,9465
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };THREW280,9465
[[noreturn]] static void DeathTestAbort(const std::string& message) {DeathTestAbort287,9832
#define GTEST_DEATH_TEST_CHECK_(GTEST_DEATH_TEST_CHECK_308,10610
#define GTEST_DEATH_TEST_CHECK_SYSCALL_(GTEST_DEATH_TEST_CHECK_SYSCALL_325,11736
std::string GetLastErrnoDescription() {GetLastErrnoDescription340,12750
static void FailFromInternalError(int fd) {FailFromInternalError348,13107
DeathTest::DeathTest() {DeathTest371,13741
bool DeathTest::Create(const char* statement,Create382,14057
const char* DeathTest::LastMessage() {LastMessage389,14351
void DeathTest::set_last_death_test_message(const std::string& message) {set_last_death_test_message393,14436
std::string DeathTest::last_death_test_message_;last_death_test_message_397,14551
class DeathTestImpl : public DeathTest {DeathTestImpl400,14673
  DeathTestImpl(const char* a_statement, Matcher<const std::string&> matcher)DeathTestImpl402,14726
  ~DeathTestImpl() override { GTEST_DEATH_TEST_CHECK_(read_fd_ == -1); }~DeathTestImpl412,15071
  const char* statement() const { return statement_; }statement417,15229
  bool spawned() const { return spawned_; }spawned418,15284
  void set_spawned(bool is_spawned) { spawned_ = is_spawned; }set_spawned419,15328
  int status() const { return status_; }status420,15391
  void set_status(int a_status) { status_ = a_status; }set_status421,15432
  DeathTestOutcome outcome() const { return outcome_; }outcome422,15488
  void set_outcome(DeathTestOutcome an_outcome) { outcome_ = an_outcome; }set_outcome423,15544
  int read_fd() const { return read_fd_; }read_fd424,15619
  void set_read_fd(int fd) { read_fd_ = fd; }set_read_fd425,15662
  int write_fd() const { return write_fd_; }write_fd426,15708
  void set_write_fd(int fd) { write_fd_ = fd; }set_write_fd427,15753
  const char* const statement_;statement_441,16328
  Matcher<const std::string&> matcher_;matcher_443,16440
  bool spawned_;spawned_445,16553
  int status_;status_447,16613
  DeathTestOutcome outcome_;outcome_449,16663
  int read_fd_;read_fd_453,16864
  int write_fd_;write_fd_457,17056
void DeathTestImpl::ReadAndInterpretStatusByte() {ReadAndInterpretStatusByte464,17318
std::string DeathTestImpl::GetErrorLogs() { return GetCapturedStderr(); }GetErrorLogs505,18614
void DeathTestImpl::Abort(AbortReason reason) {Abort511,18902
static ::std::string FormatDeathTestOutput(const ::std::string& output) {FormatDeathTestOutput534,20218
bool DeathTestImpl::Passed(bool status_ok) {Passed570,21711
class WindowsDeathTest : public DeathTestImpl {WindowsDeathTest653,24963
  WindowsDeathTest(const char* a_statement, Matcher<const std::string&> matcher,WindowsDeathTest655,25020
  const char* const file_;file_667,25443
  const int line_;line_669,25527
  AutoHandle write_handle_;write_handle_671,25609
  AutoHandle child_handle_;child_handle_673,25664
  AutoHandle event_handle_;event_handle_678,25955
int WindowsDeathTest::Wait() {Wait684,26150
DeathTest::TestRole WindowsDeathTest::AssumeRole() {AssumeRole726,27796
class FuchsiaDeathTest : public DeathTestImpl {FuchsiaDeathTest813,31766
  FuchsiaDeathTest(const char* a_statement, Matcher<const std::string&> matcher,FuchsiaDeathTest815,31823
  const char* const file_;file_828,32287
  const int line_;line_830,32371
  std::string captured_stderr_;captured_stderr_832,32442
  zx::process child_process_;child_process_834,32475
  zx::channel exception_channel_;exception_channel_835,32505
  zx::socket stderr_socket_;stderr_socket_836,32539
class Arguments {Arguments840,32630
  Arguments() { args_.push_back(nullptr); }Arguments842,32657
  ~Arguments() {~Arguments844,32702
  void AddArgument(const char* argument) {AddArgument850,32836
  void AddArguments(const ::std::vector<Str>& arguments) {AddArguments855,32970
  char* const* Argv() { return &args_[0]; }Argv861,33217
  int size() { return static_cast<int>(args_.size()) - 1; }size863,33262
  std::vector<char*> args_;args_866,33333
int FuchsiaDeathTest::Wait() {Wait872,33528
DeathTest::TestRole FuchsiaDeathTest::AssumeRole() {AssumeRole964,37231
std::string FuchsiaDeathTest::GetErrorLogs() { return captured_stderr_; }GetErrorLogs1053,40926
class ForkingDeathTest : public DeathTestImpl {ForkingDeathTest1060,41214
  void set_child_pid(pid_t child_pid) { child_pid_ = child_pid; }set_child_pid1068,41454
  pid_t child_pid_;child_pid_1072,41607
ForkingDeathTest::ForkingDeathTest(const char* a_statement,ForkingDeathTest1076,41665
int ForkingDeathTest::Wait() {Wait1083,42033
class NoExecDeathTest : public ForkingDeathTest {NoExecDeathTest1096,42373
  NoExecDeathTest(const char* a_statement, Matcher<const std::string&> matcher)NoExecDeathTest1098,42432
DeathTest::TestRole NoExecDeathTest::AssumeRole() {AssumeRole1105,42758
class ExecDeathTest : public ForkingDeathTest {ExecDeathTest1151,44618
  ExecDeathTest(const char* a_statement, Matcher<const std::string&> matcher,ExecDeathTest1153,44675
  static ::std::vector<std::string> GetArgvsForDeathTestChildProcess() {GetArgvsForDeathTestChildProcess1161,44945
  const char* const file_;file_1171,45442
  const int line_;line_1173,45526
class Arguments {Arguments1177,45607
  Arguments() { args_.push_back(nullptr); }Arguments1179,45634
  ~Arguments() {~Arguments1181,45679
  void AddArgument(const char* argument) {AddArgument1187,45813
  void AddArguments(const ::std::vector<Str>& arguments) {AddArguments1192,45947
  char* const* Argv() { return &args_[0]; }Argv1198,46194
  std::vector<char*> args_;args_1201,46249
struct ExecDeathTestArgs {ExecDeathTestArgs1206,46390
  char* const* argv;  // Command-line arguments for the child's call to execargv1207,46417
  int close_fd;       // File descriptor to close; the read end of a pipeclose_fd1208,46494
static int ExecDeathTestChildMain(void* child_arg) {ExecDeathTestChildMain1217,46849
static void StackLowerThanAddress(const void* ptr, bool* result) {StackLowerThanAddress1265,49131
static bool StackGrowsDown() {StackGrowsDown1273,49412
static pid_t ExecDeathTestSpawnChild(char* const* argv, int close_fd) {ExecDeathTestSpawnChild1288,50024
DeathTest::TestRole ExecDeathTest::AssumeRole() {AssumeRole1387,54088
bool DefaultDeathTestFactory::Create(const char* statement,Create1440,56229
static int GetStatusFileDescriptor(unsigned int parent_process_id,GetStatusFileDescriptor1504,58488
InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag() {ParseInternalRunDeathTestFlag1566,61269

build/_deps/googletest-src/googletest/src/gtest-printers.cc,4841
namespace testing {testing57,2351
namespace {__anone223e741011159,2372
void PrintByteSegmentInObjectTo(const unsigned char* obj_bytes, size_t start,PrintByteSegmentInObjectTo68,2606
void PrintBytesInObjectToImpl(const unsigned char* obj_bytes, size_t count,PrintBytesInObjectToImpl87,3167
char32_t ToChar32(CharType in) {ToChar32114,4234
namespace internal {internal121,4388
void PrintBytesInObjectTo(const unsigned char* obj_bytes, size_t count,PrintBytesInObjectTo128,4724
enum CharFormat { kAsIs, kHexEscape, kSpecialEscape };CharFormat138,5154
enum CharFormat { kAsIs, kHexEscape, kSpecialEscape };kAsIs138,5154
enum CharFormat { kAsIs, kHexEscape, kSpecialEscape };kHexEscape138,5154
enum CharFormat { kAsIs, kHexEscape, kSpecialEscape };kSpecialEscape138,5154
inline bool IsPrintableAscii(char32_t c) { return 0x20 <= c && c <= 0x7E; }IsPrintableAscii143,5366
static CharFormat PrintAsCharLiteralTo(Char c, ostream* os) {PrintAsCharLiteralTo149,5642
static CharFormat PrintAsStringLiteralTo(char32_t c, ostream* os) {PrintAsStringLiteralTo198,6707
static const char* GetCharWidthPrefix(char) { return ""; }GetCharWidthPrefix211,6971
static const char* GetCharWidthPrefix(signed char) { return ""; }GetCharWidthPrefix213,7031
static const char* GetCharWidthPrefix(unsigned char) { return ""; }GetCharWidthPrefix215,7098
static const char* GetCharWidthPrefix(char8_t) { return "u8"; }GetCharWidthPrefix218,7188
static const char* GetCharWidthPrefix(char16_t) { return "u"; }GetCharWidthPrefix221,7260
static const char* GetCharWidthPrefix(char32_t) { return "U"; }GetCharWidthPrefix223,7325
static const char* GetCharWidthPrefix(wchar_t) { return "L"; }GetCharWidthPrefix225,7390
static CharFormat PrintAsStringLiteralTo(char c, ostream* os) {PrintAsStringLiteralTo229,7570
static CharFormat PrintAsStringLiteralTo(char8_t c, ostream* os) {PrintAsStringLiteralTo234,7708
static CharFormat PrintAsStringLiteralTo(char16_t c, ostream* os) {PrintAsStringLiteralTo239,7835
static CharFormat PrintAsStringLiteralTo(wchar_t c, ostream* os) {PrintAsStringLiteralTo243,7956
void PrintCharAndCodeTo(Char c, ostream* os) {PrintCharAndCodeTo251,8324
void PrintTo(unsigned char c, ::std::ostream* os) { PrintCharAndCodeTo(c, os); }PrintTo274,9085
void PrintTo(signed char c, ::std::ostream* os) { PrintCharAndCodeTo(c, os); }PrintTo275,9166
void PrintTo(wchar_t wc, ostream* os) { PrintCharAndCodeTo(wc, os); }PrintTo279,9387
void PrintTo(char32_t c, ::std::ostream* os) {PrintTo282,9538
void PrintTo(__uint128_t v, ::std::ostream* os) {PrintTo289,9763
void PrintTo(__int128_t v, ::std::ostream* os) {PrintTo322,10727
        PrintCharsAsStringTo(const CharType* begin, size_t len, ostream* os) {PrintCharsAsStringTo340,11376
        UniversalPrintCharArray(const CharType* begin, size_t len,UniversalPrintCharArray369,12544
void UniversalPrintArray(const char* begin, size_t len, ostream* os) {UniversalPrintArray392,13463
void UniversalPrintArray(const char8_t* begin, size_t len, ostream* os) {UniversalPrintArray399,13686
void UniversalPrintArray(const char16_t* begin, size_t len, ostream* os) {UniversalPrintArray406,13899
void UniversalPrintArray(const char32_t* begin, size_t len, ostream* os) {UniversalPrintArray412,14106
void UniversalPrintArray(const wchar_t* begin, size_t len, ostream* os) {UniversalPrintArray418,14312
namespace {__anone223e7410211422,14432
void PrintCStringTo(const Char* s, ostream* os) {PrintCStringTo426,14529
void PrintTo(const char* s, ostream* os) { PrintCStringTo(s, os); }PrintTo437,14794
void PrintTo(const char8_t* s, ostream* os) { PrintCStringTo(s, os); }PrintTo440,14884
void PrintTo(const char16_t* s, ostream* os) { PrintCStringTo(s, os); }PrintTo443,14963
void PrintTo(const char32_t* s, ostream* os) { PrintCStringTo(s, os); }PrintTo445,15036
void PrintTo(const wchar_t* s, ostream* os) { PrintCStringTo(s, os); }PrintTo455,15610
namespace {__anone223e7410311458,15711
bool ContainsUnprintableControlCodes(const char* str, size_t length) {ContainsUnprintableControlCodes460,15724
bool IsUTF8TrailByte(unsigned char t) { return 0x80 <= t && t <= 0xbf; }IsUTF8TrailByte479,16136
bool IsValidUTF8(const char* str, size_t length) {IsValidUTF8481,16210
void ConditionalPrintAsText(const char* str, size_t length, ostream* os) {ConditionalPrintAsText514,17427
void PrintStringTo(const ::std::string& s, ostream* os) {PrintStringTo523,17672
void PrintU8StringTo(const ::std::u8string& s, ostream* os) {PrintU8StringTo532,17924
void PrintU16StringTo(const ::std::u16string& s, ostream* os) {PrintU16StringTo537,18044
void PrintU32StringTo(const ::std::u32string& s, ostream* os) {PrintU32StringTo541,18159
void PrintWideStringTo(const ::std::wstring& s, ostream* os) {PrintWideStringTo546,18300

build/_deps/googletest-src/googletest/src/gtest-port.cc,7376
namespace testing {testing90,2808
namespace internal {internal91,2828
namespace {__anone2f42caf011195,2891
T ReadProcFileField(const std::string& filename, int field) {ReadProcFileField97,2925
size_t GetThreadCount() {GetThreadCount110,3235
AutoHandle::AutoHandle() : handle_(INVALID_HANDLE_VALUE) {}AutoHandle269,7048
AutoHandle::AutoHandle(Handle handle) : handle_(handle) {}AutoHandle271,7109
AutoHandle::~AutoHandle() { Reset(); }~AutoHandle273,7169
AutoHandle::Handle AutoHandle::Get() const { return handle_; }Get275,7209
void AutoHandle::Reset() { Reset(INVALID_HANDLE_VALUE); }Reset277,7273
void AutoHandle::Reset(HANDLE handle) {Reset279,7332
bool AutoHandle::IsCloseable() const {IsCloseable293,7710
Mutex::Mutex()Mutex299,7912
Mutex::~Mutex() {~Mutex307,8117
void Mutex::Lock() {Lock317,8378
void Mutex::Unlock() {Unlock323,8516
void Mutex::AssertHeld() {AssertHeld334,8908
namespace {__anone2f42caf0211340,9087
class MemoryIsNotDeallocated {MemoryIsNotDeallocated351,9506
  MemoryIsNotDeallocated() : old_crtdbg_flag_(0) {MemoryIsNotDeallocated353,9546
  ~MemoryIsNotDeallocated() {~MemoryIsNotDeallocated360,9874
  int old_crtdbg_flag_;old_crtdbg_flag_366,10017
void Mutex::ThreadSafeLazyInit() {ThreadSafeLazyInit376,10299
namespace {__anone2f42caf0311420,11921
class ThreadWithParamSupport : public ThreadWithParamBase {ThreadWithParamSupport422,11934
  static HANDLE CreateThread(Runnable* runnable,CreateThread424,12003
  struct ThreadMainParam {ThreadMainParam444,12785
    ThreadMainParam(Runnable* runnable, Notification* thread_can_start)ThreadMainParam445,12812
    std::unique_ptr<Runnable> runnable_;runnable_447,12954
    Notification* thread_can_start_;thread_can_start_449,13016
  static DWORD WINAPI ThreadMain(void* ptr) {ThreadMain452,13059
ThreadWithParamBase::ThreadWithParamBase(Runnable* runnable,ThreadWithParamBase470,13583
ThreadWithParamBase::~ThreadWithParamBase() { Join(); }~ThreadWithParamBase475,13812
void ThreadWithParamBase::Join() {Join477,13869
class ThreadLocalRegistryImpl {ThreadLocalRegistryImpl486,14310
  static ThreadLocalValueHolderBase* GetValueOnCurrentThread(GetValueOnCurrentThread490,14508
  static void OnThreadLocalDestroyed(OnThreadLocalDestroyed523,15827
  static void OnThreadExit(DWORD thread_id) {OnThreadExit550,17061
      ThreadLocalValues;ThreadLocalValues579,18385
  typedef std::map<DWORD, ThreadLocalValues> ThreadIdToThreadLocals;ThreadIdToThreadLocals582,18505
  typedef std::pair<DWORD, HANDLE> ThreadIdAndHandle;ThreadIdAndHandle586,18685
  static void StartWatcherThreadFor(DWORD thread_id) {StartWatcherThreadFor588,18740
  static DWORD WINAPI WatcherThreadFunc(LPVOID param) {WatcherThreadFunc615,19991
  static ThreadIdToThreadLocals* GetThreadLocalsMapLocked() {GetThreadLocalsMapLocked626,20363
  static Mutex mutex_;mutex_636,20705
  static Mutex thread_map_mutex_;thread_map_mutex_638,20795
ThreadLocalValueHolderBase* ThreadLocalRegistry::GetValueOnCurrentThread(GetValueOnCurrentThread645,20992
void ThreadLocalRegistry::OnThreadLocalDestroyed(OnThreadLocalDestroyed651,21210
RE::~RE() {~RE662,21525
bool RE::FullMatch(const char* str, const RE& re) {FullMatch675,21959
bool RE::PartialMatch(const char* str, const RE& re) {PartialMatch684,22236
void RE::Init(const char* regex) {Init692,22465
bool IsInSet(char ch, const char* str) {IsInSet725,23734
bool IsAsciiDigit(char ch) { return '0' <= ch && ch <= '9'; }IsAsciiDigit732,23990
bool IsAsciiPunct(char ch) {IsAsciiPunct733,24052
bool IsRepeat(char ch) { return IsInSet(ch, "?*+"); }IsRepeat736,24143
bool IsAsciiWhiteSpace(char ch) { return IsInSet(ch, " \f\n\r\t\v"); }IsAsciiWhiteSpace737,24197
bool IsAsciiWordChar(char ch) {IsAsciiWordChar738,24268
bool IsValidEscape(char c) {IsValidEscape744,24485
bool AtomMatchesChar(bool escaped, char pattern_char, char ch) {AtomMatchesChar750,24719
static std::string FormatRegexSyntaxError(const char* regex, int index) {FormatRegexSyntaxError783,25604
bool ValidateRegex(const char* regex) {ValidateRegex791,25934
bool MatchRepetitionAndRegexAtHead(bool escaped, char c, char repeat,MatchRepetitionAndRegexAtHead851,28111
bool MatchRegexAtHead(const char* regex, const char* str) {MatchRegexAtHead875,29189
bool MatchRegexAnywhere(const char* regex, const char* str) {MatchRegexAnywhere909,30738
RE::~RE() {~RE923,31102
bool RE::FullMatch(const char* str, const RE& re) {FullMatch929,31273
bool RE::PartialMatch(const char* str, const RE& re) {PartialMatch935,31503
void RE::Init(const char* regex) {Init940,31677
const char kUnknownFile[] = "unknown file";kUnknownFile975,32649
GTEST_API_ ::std::string FormatFileLocation(const char* file, int line) {FormatFileLocation979,32831
GTEST_API_ ::std::string FormatCompilerIndependentFileLocation(const char* file,FormatCompilerIndependentFileLocation997,33528
GTestLog::GTestLog(GTestLogSeverity severity, const char* file, int line)GTestLog1007,33858
GTestLog::~GTestLog() {~GTestLog1019,34449
class CapturedStream {CapturedStream1034,34832
  explicit CapturedStream(int fd) : fd_(fd), uncaptured_fd_(dup(fd)) {CapturedStream1037,34920
  ~CapturedStream() { remove(filename_.c_str()); }~CapturedStream1115,38718
  std::string GetCapturedString() {GetCapturedString1117,38770
  const int fd_;  // A stream to capture.fd_1137,39324
  int uncaptured_fd_;uncaptured_fd_1138,39366
static CapturedStream* g_captured_stdout = nullptr;g_captured_stdout1149,39679
static void CaptureStream(int fd, const char* stream_name,CaptureStream1152,39786
static std::string GetCapturedStream(CapturedStream** captured_stream) {GetCapturedStream1162,40150
const int kStdOutFileno = 1;kStdOutFileno1173,40490
const int kStdErrFileno = 2;kStdErrFileno1174,40519
const int kStdOutFileno = STDOUT_FILENO;kStdOutFileno1176,40554
const int kStdErrFileno = STDERR_FILENO;kStdErrFileno1177,40595
void CaptureStdout() {CaptureStdout1181,40719
void CaptureStderr() {CaptureStderr1186,40835
std::string GetCapturedStdout() {GetCapturedStdout1191,40982
std::string GetCapturedStderr() {GetCapturedStderr1196,41126
size_t GetFileSize(FILE* file) {GetFileSize1202,41252
std::string ReadEntireFile(FILE* file) {ReadEntireFile1207,41359
static const std::vector<std::string>* g_injected_test_argvs =g_injected_test_argvs1231,42062
std::vector<std::string> GetInjectableArgvs() {GetInjectableArgvs1234,42150
void SetInjectableArgvs(const std::vector<std::string>* new_argvs) {SetInjectableArgvs1241,42303
void SetInjectableArgvs(const std::vector<std::string>& new_argvs) {SetInjectableArgvs1246,42484
void ClearInjectableArgvs() {ClearInjectableArgvs1251,42651
namespace posix {posix1258,42811
void Abort() {Abort1259,42829
static std::string FlagToEnvVar(const char* flag) {FlagToEnvVar1269,43137
bool ParseInt32(const Message& src_text, const char* str, int32_t* value) {ParseInt321284,43605
bool BoolFromGTestEnv(const char* flag, bool default_value) {BoolFromGTestEnv1326,45065
int32_t Int32FromGTestEnv(const char* flag, int32_t default_value) {Int32FromGTestEnv1340,45704
std::string OutputFlagAlsoCheckEnvVar() {OutputFlagAlsoCheckEnvVar1372,46958
const char* StringFromGTestEnv(const char* flag, const char* default_value) {StringFromGTestEnv1383,47415

build/_deps/googletest-src/googletest/src/gtest-matchers.cc,882
namespace testing {testing42,1888
Matcher<const std::string&>::Matcher(const std::string& s) { *this = Eq(s); }Matcher46,1997
Matcher<const std::string&>::Matcher(const char* s) {Matcher50,2164
Matcher<std::string>::Matcher(const std::string& s) { *this = Eq(s); }Matcher56,2332
Matcher<std::string>::Matcher(const char* s) { *this = Eq(std::string(s)); }Matcher60,2485
Matcher<const internal::StringView&>::Matcher(const std::string& s) {Matcher65,2685
Matcher<const internal::StringView&>::Matcher(const char* s) {Matcher71,2862
Matcher<const internal::StringView&>::Matcher(internal::StringView s) {Matcher77,3045
Matcher<internal::StringView>::Matcher(const std::string& s) { *this = Eq(s); }Matcher83,3230
Matcher<internal::StringView>::Matcher(const char* s) {Matcher87,3391
Matcher<internal::StringView>::Matcher(internal::StringView s) {Matcher93,3560

build/_deps/googletest-src/googletest/src/gtest-filepath.cc,2138
#define GTEST_PATH_MAX_ GTEST_PATH_MAX_51,2011
#define GTEST_PATH_MAX_ GTEST_PATH_MAX_53,2069
#define GTEST_PATH_MAX_ GTEST_PATH_MAX_55,2133
#define GTEST_PATH_MAX_ GTEST_PATH_MAX_57,2179
namespace testing {testing60,2248
namespace internal {internal61,2268
const char kPathSeparator = '\\';kPathSeparator68,2557
const char kAlternatePathSeparator = '/';kAlternatePathSeparator69,2591
const char kAlternatePathSeparatorString[] = "/";kAlternatePathSeparatorString70,2633
const char kCurrentDirectoryString[] = "\\";kCurrentDirectoryString75,2880
const DWORD kInvalidFileAttributes = 0xffffffff;kInvalidFileAttributes77,2978
const char kCurrentDirectoryString[] = ".\\";kCurrentDirectoryString79,3033
static bool IsPathSeparator(char c) {IsPathSeparator87,3293
FilePath FilePath::GetCurrentDir() {GetCurrentDir96,3536
FilePath FilePath::RemoveExtension(const char* extension) const {RemoveExtension123,4785
const char* FilePath::FindLastPathSeparator() const {FindLastPathSeparator135,5310
size_t FilePath::CalculateRootLength() const {CalculateRootLength148,5752
FilePath FilePath::RemoveDirectoryName() const {RemoveDirectoryName193,7247
FilePath FilePath::RemoveFileName() const {RemoveFileName204,7841
FilePath FilePath::MakeFileName(const FilePath& directory,MakeFileName221,8443
FilePath FilePath::ConcatPaths(const FilePath& directory,ConcatPaths236,9013
bool FilePath::FileOrDirectoryExists() const {FileOrDirectoryExists245,9444
bool FilePath::DirectoryExists() const {DirectoryExists259,9921
bool FilePath::IsRootDirectory() const {IsRootDirectory289,10878
bool FilePath::IsAbsolutePath() const {IsAbsolutePath296,11141
FilePath FilePath::GenerateUniqueFileName(const FilePath& directory,GenerateUniqueFileName308,11730
bool FilePath::IsDirectory() const {IsDirectory322,12357
bool FilePath::CreateDirectoriesRecursively() const {CreateDirectoriesRecursively330,12672
bool FilePath::CreateFolder() const {CreateFolder347,13309
FilePath FilePath::RemoveTrailingPathSeparator() const {RemoveTrailingPathSeparator371,14166
void FilePath::Normalize() {Normalize380,14613

build/_deps/googletest-src/googletest/src/gtest-assertion-result.cc,534
namespace testing {testing41,1785
AssertionResult::AssertionResult(const AssertionResult& other)AssertionResult45,1887
void AssertionResult::swap(AssertionResult& other) {swap52,2180
AssertionResult AssertionResult::operator!() const {operator !59,2391
AssertionResult AssertionSuccess() { return AssertionResult(true); }AssertionSuccess66,2601
AssertionResult AssertionFailure() { return AssertionResult(false); }AssertionFailure69,2707
AssertionResult AssertionFailure(const Message& message) {AssertionFailure73,2895

build/_deps/googletest-src/googletest/src/gtest_main.cc,199
void setup() { testing::InitGoogleTest(); }setup41,1764
void loop() { RUN_ALL_TESTS(); }loop43,1809
GTEST_API_ int main() {main52,1961
GTEST_API_ int main(int argc, char **argv) {main60,2174

build/_deps/googletest-src/googletest/src/gtest-all.cc,0

build/_deps/googletest-src/googletest/src/gtest-internal-inl.h,11709
#define GOOGLETEST_SRC_GTEST_INTERNAL_INL_H_GOOGLETEST_SRC_GTEST_INTERNAL_INL_H_35,1797
namespace testing {testing74,2784
namespace internal {internal75,2804
const int kMaxRandomSeed = 99999;kMaxRandomSeed82,3063
inline int GetRandomSeedFromFlag(int32_t random_seed_flag) {GetRandomSeedFromFlag111,4344
inline int GetNextRandomSeed(int seed) {GetNextRandomSeed128,5026
class GTestFlagSaver {GTestFlagSaver138,5413
  GTestFlagSaver() {GTestFlagSaver141,5461
  ~GTestFlagSaver() {~GTestFlagSaver167,6671
  bool also_run_disabled_tests_;also_run_disabled_tests_194,7871
  bool break_on_failure_;break_on_failure_195,7904
  bool catch_exceptions_;catch_exceptions_196,7930
  std::string color_;color_197,7956
  std::string death_test_style_;death_test_style_198,7978
  bool death_test_use_fork_;death_test_use_fork_199,8011
  bool fail_fast_;fail_fast_200,8040
  std::string filter_;filter_201,8059
  std::string internal_run_death_test_;internal_run_death_test_202,8082
  bool list_tests_;list_tests_203,8122
  std::string output_;output_204,8142
  bool brief_;brief_205,8165
  bool print_time_;print_time_206,8180
  bool print_utf8_;print_utf8_207,8200
  int32_t random_seed_;random_seed_208,8220
  int32_t repeat_;repeat_209,8244
  bool recreate_environments_when_repeating_;recreate_environments_when_repeating_210,8263
  bool shuffle_;shuffle_211,8309
  int32_t stack_trace_depth_;stack_trace_depth_212,8326
  std::string stream_result_to_;stream_result_to_213,8356
  bool throw_on_failure_;throw_on_failure_214,8389
} GTEST_ATTRIBUTE_UNUSED_;GTEST_ATTRIBUTE_UNUSED_215,8415
inline int CountIf(const Container& c, Predicate predicate) {CountIf273,11462
void ForEach(const Container& c, Functor functor) {ForEach285,11873
inline E GetElementOr(const std::vector<E>& v, int i, E default_value) {GetElementOr292,12095
void ShuffleRange(internal::Random* random, int begin, int end,ShuffleRange302,12578
inline void Shuffle(internal::Random* random, std::vector<E>* v) {Shuffle326,13564
static void Delete(T* x) {Delete333,13792
class TestPropertyKeyIs {TestPropertyKeyIs340,13945
  explicit TestPropertyKeyIs(const std::string& key) : key_(key) {}TestPropertyKeyIs345,14054
  bool operator()(const TestProperty& test_property) const {operator ()348,14204
  std::string key_;key_353,14320
class GTEST_API_ UnitTestOptions {UnitTestOptions366,14789
class OsStackTraceGetterInterface {OsStackTraceGetterInterface404,16301
  OsStackTraceGetterInterface() {}OsStackTraceGetterInterface406,16346
  virtual ~OsStackTraceGetterInterface() {}~OsStackTraceGetterInterface407,16381
  static const char* const kElidedFramesMarker;kElidedFramesMarker424,17169
class OsStackTraceGetter : public OsStackTraceGetterInterface {OsStackTraceGetter433,17475
  OsStackTraceGetter() {}OsStackTraceGetter435,17548
  Mutex mutex_;  // Protects all internal state.mutex_442,17714
  void* caller_frame_ = nullptr;caller_frame_448,18034
struct TraceInfo {TraceInfo456,18273
  const char* file;file457,18292
  int line;line458,18312
  std::string message;message459,18324
class DefaultGlobalTestPartResultReporterDefaultGlobalTestPartResultReporter464,18480
  UnitTestImpl* const unit_test_;unit_test_473,18838
class DefaultPerThreadTestPartResultReporterDefaultPerThreadTestPartResultReporter483,19219
  UnitTestImpl* const unit_test_;unit_test_492,19631
class GTEST_API_ UnitTestImpl {UnitTestImpl504,20118
  TimeInMillis start_timestamp() const { return start_timestamp_; }start_timestamp569,22386
  TimeInMillis elapsed_time() const { return elapsed_time_; }elapsed_time572,22500
  bool Passed() const { return !Failed(); }Passed576,22653
  bool Failed() const {Failed580,22829
  const TestSuite* GetTestSuite(int i) const {GetTestSuite586,23089
  const TestCase* GetTestCase(int i) const { return GetTestSuite(i); }GetTestCase593,23369
  TestSuite* GetMutableSuiteCase(int i) {GetMutableSuiteCase598,23642
  TestEventListeners* listeners() { return &listeners_; }listeners604,23877
  const TestResult* ad_hoc_test_result() const { return &ad_hoc_test_result_; }ad_hoc_test_result611,24156
  TestCase* GetTestCase(const char* test_case_name, const char* type_param,GetTestCase654,26161
  void AddTestInfo(internal::SetUpTestSuiteFunc set_up_tc,AddTestInfo668,26757
  internal::ParameterizedTestSuiteRegistry& parameterized_test_registry() {parameterized_test_registry693,27937
  std::set<std::string>* ignored_parameterized_test_suites() {ignored_parameterized_test_suites697,28059
  type_parameterized_test_registry() {type_parameterized_test_registry704,28358
  void set_current_test_suite(TestSuite* a_current_test_suite) {set_current_test_suite709,28518
  void set_current_test_info(TestInfo* a_current_test_info) {set_current_test_info716,28807
  void ClearNonAdHocTestResult() {ClearNonAdHocTestResult735,29680
  void ClearAdHocTestResult() { ad_hoc_test_result_.Clear(); }ClearAdHocTestResult740,29831
  enum ReactionToSharding { HONOR_SHARDING_PROTOCOL, IGNORE_SHARDING_PROTOCOL };ReactionToSharding748,30199
  enum ReactionToSharding { HONOR_SHARDING_PROTOCOL, IGNORE_SHARDING_PROTOCOL };HONOR_SHARDING_PROTOCOL748,30199
  enum ReactionToSharding { HONOR_SHARDING_PROTOCOL, IGNORE_SHARDING_PROTOCOL };IGNORE_SHARDING_PROTOCOL748,30199
  const TestSuite* current_test_suite() const { return current_test_suite_; }current_test_suite761,30803
  TestInfo* current_test_info() { return current_test_info_; }current_test_info762,30881
  const TestInfo* current_test_info() const { return current_test_info_; }current_test_info763,30944
  std::vector<Environment*>& environments() { return environments_; }environments767,31130
  std::vector<TraceInfo>& gtest_trace_stack() {gtest_trace_stack770,31258
  const std::vector<TraceInfo>& gtest_trace_stack() const {gtest_trace_stack773,31354
  void InitDeathTestSubprocessControlInfo() {InitDeathTestSubprocessControlInfo778,31481
  const InternalRunDeathTestFlag* internal_run_death_test_flag() const {internal_run_death_test_flag785,31850
  internal::DeathTestFactory* death_test_factory() {death_test_factory790,32034
  int random_seed() const { return random_seed_; }random_seed817,33077
  internal::Random* random() { return &random_; }random820,33168
  bool catch_exceptions() const { return catch_exceptions_; }catch_exceptions831,33572
  void set_catch_exceptions(bool value) { catch_exceptions_ = value; }set_catch_exceptions838,33794
  UnitTest* const parent_;parent_841,33929
  internal::FilePath original_working_dir_;original_working_dir_845,34037
  DefaultGlobalTestPartResultReporter default_global_test_part_result_reporter_;default_global_test_part_result_reporter_848,34127
      default_per_thread_test_part_result_reporter_;default_per_thread_test_part_result_reporter_850,34249
  TestPartResultReporterInterface* global_test_part_result_reporter_;global_test_part_result_reporter_853,34374
  internal::Mutex global_test_part_result_reporter_mutex_;global_test_part_result_reporter_mutex_856,34519
      per_thread_test_part_result_reporter_;per_thread_test_part_result_reporter_860,34712
  std::vector<Environment*> environments_;environments_864,34860
  std::vector<TestSuite*> test_suites_;test_suites_868,35001
  std::vector<int> test_suite_indices_;test_suite_indices_874,35270
  internal::ParameterizedTestSuiteRegistry parameterized_test_registry_;parameterized_test_registry_878,35398
      type_parameterized_test_registry_;type_parameterized_test_registry_880,35518
  std::set<std::string> ignored_parameterized_test_suites_;ignored_parameterized_test_suites_884,35652
  bool parameterized_tests_registered_;parameterized_tests_registered_887,35790
  int last_death_test_suite_;last_death_test_suite_890,35898
  TestSuite* current_test_suite_;current_test_suite_896,36207
  TestInfo* current_test_info_;current_test_info_902,36514
  TestResult ad_hoc_test_result_;ad_hoc_test_result_912,37018
  TestEventListeners listeners_;listeners_916,37144
  OsStackTraceGetterInterface* os_stack_trace_getter_;os_stack_trace_getter_922,37401
  bool post_flag_parse_init_performed_;post_flag_parse_init_performed_925,37521
  int random_seed_;random_seed_928,37629
  internal::Random random_;random_931,37684
  TimeInMillis start_timestamp_;start_timestamp_935,37799
  TimeInMillis elapsed_time_;elapsed_time_938,37886
  std::unique_ptr<InternalRunDeathTestFlag> internal_run_death_test_flag_;internal_run_death_test_flag_943,38058
  std::unique_ptr<internal::DeathTestFactory> death_test_factory_;death_test_factory_944,38133
  internal::ThreadLocal<std::vector<TraceInfo> > gtest_trace_stack_;gtest_trace_stack_948,38304
  bool catch_exceptions_;catch_exceptions_952,38462
inline UnitTestImpl* GetUnitTestImpl() {GetUnitTestImpl960,38703
bool ParseNaturalNumber(const ::std::string& str, Integer* number) {ParseNaturalNumber1001,40345
  using BiggestConvertible = unsigned long long;  // NOLINTBiggestConvertible1013,40822
class TestResultAccessor {TestResultAccessor1035,41619
  static void RecordProperty(TestResult* test_result,RecordProperty1037,41655
  static void ClearTestPartResults(TestResult* test_result) {ClearTestPartResults1043,41892
  static const std::vector<testing::TestPartResult>& test_part_results(test_part_results1047,42000
class StreamingListener : public EmptyTestEventListener {StreamingListener1056,42263
  class AbstractSocketWriter {AbstractSocketWriter1059,42388
    virtual ~AbstractSocketWriter() {}~AbstractSocketWriter1061,42430
    virtual void CloseConnection() {}CloseConnection1067,42589
    void SendLn(const std::string& message) { Send(message + "\n"); }SendLn1070,42679
  class SocketWriter : public AbstractSocketWriter {SocketWriter1074,42817
    SocketWriter(const std::string& host, const std::string& port)SocketWriter1076,42881
    ~SocketWriter() override {~SocketWriter1081,43038
    void Send(const std::string& message) override {Send1086,43157
    void CloseConnection() override {CloseConnection1102,43731
    int sockfd_;  // socket file descriptorsockfd_1110,43934
    const std::string host_name_;host_name_1111,43978
    const std::string port_num_;port_num_1112,44012
  StreamingListener(const std::string& host, const std::string& port)StreamingListener1121,44297
  explicit StreamingListener(AbstractSocketWriter* socket_writer)StreamingListener1126,44440
  void OnTestProgramStart(const UnitTest& /* unit_test */) override {OnTestProgramStart1131,44564
  void OnTestProgramEnd(const UnitTest& unit_test) override {OnTestProgramEnd1135,44677
  void OnTestIterationStart(const UnitTest& /* unit_test */,OnTestIterationStart1144,45032
  void OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd1150,45246
  void OnTestSuiteStart(const TestSuite& test_suite) override {OnTestSuiteStart1159,45638
  void OnTestSuiteEnd(const TestSuite& test_suite) override {OnTestSuiteEnd1165,45881
  void OnTestStart(const TestInfo& test_info) override {OnTestStart1171,46119
  void OnTestEnd(const TestInfo& test_info) override {OnTestEnd1175,46250
  void OnTestPartResult(const TestPartResult& test_part_result) override {OnTestPartResult1181,46499
  void SendLn(const std::string& message) { socket_writer_->SendLn(message); }SendLn1191,46956
  void Start() { SendLn("gtest_streaming_protocol_version=1.0"); }Start1195,47130
  std::string FormatBool(bool value) { return value ? "1" : "0"; }FormatBool1197,47198
  const std::unique_ptr<AbstractSocketWriter> socket_writer_;socket_writer_1199,47266

build/_deps/googletest-src/googletest/src/gtest.cc,42213
#define vsnprintf _vsnprintfvsnprintf127,3646
#define GTEST_HAS_BUILTIN(GTEST_HAS_BUILTIN149,4215
#define GTEST_HAS_BUILTIN(GTEST_HAS_BUILTIN151,4267
namespace testing {testing154,4333
static const char kDisableTestFilter[] = "DISABLED_*:*/DISABLED_*";kDisableTestFilter165,4568
static const char kDeathTestSuiteFilter[] = "*DeathTest:*DeathTest/*";kDeathTestSuiteFilter170,4796
static const char kUniversalFilter[] = "*";kUniversalFilter173,4910
static const char kDefaultOutputFormat[] = "xml";kDefaultOutputFormat176,4985
static const char kDefaultOutputFile[] = "test_detail";kDefaultOutputFile178,5063
static const char kTestShardIndex[] = "GTEST_SHARD_INDEX";kTestShardIndex181,5179
static const char kTestTotalShards[] = "GTEST_TOTAL_SHARDS";kTestTotalShards183,5308
static const char kTestShardStatusFile[] = "GTEST_SHARD_STATUS_FILE";kTestShardStatusFile185,5434
namespace internal {internal187,5505
const char kStackTraceMarker[] = "\nStack trace:\n";kStackTraceMarker191,5609
bool g_help_flag = false;g_help_flag195,5776
static FILE* OpenFileForWriting(const std::string& output_file) {OpenFileForWriting198,5848
static const char* GetDefaultFilter() {GetDefaultFilter216,6409
static bool GetDefaultFailFast() {GetDefaultFailFast227,6782
namespace testing {testing380,13501
namespace internal {internal381,13521
const uint32_t Random::kMaxRange;kMaxRange383,13543
uint32_t Random::Generate(uint32_t range) {Generate388,13727
static bool GTestIsInitialized() { return GetArgvs().size() > 0; }GTestIsInitialized407,14641
static int SumOverTestSuiteList(const std::vector<TestSuite*>& case_list,SumOverTestSuiteList412,14859
static bool TestSuitePassed(const TestSuite* test_suite) {TestSuitePassed422,15179
static bool TestSuiteFailed(const TestSuite* test_suite) {TestSuiteFailed427,15354
static bool ShouldRunTestSuite(const TestSuite* test_suite) {ShouldRunTestSuite433,15564
AssertHelper::AssertHelper(TestPartResult::Type type, const char* file,AssertHelper438,15693
AssertHelper::~AssertHelper() { delete data_; }~AssertHelper442,15888
void AssertHelper::operator=(const Message& message) const {operator =445,15993
namespace {__anonc0c2bbdd0111454,16342
constexpr bool kErrorOnUninstantiatedParameterizedTest = true;kErrorOnUninstantiatedParameterizedTest461,16603
constexpr bool kErrorOnUninstantiatedTypeParameterizedTest = true;kErrorOnUninstantiatedTypeParameterizedTest462,16666
class FailureTest : public Test {FailureTest465,16807
  explicit FailureTest(const CodeLocation& loc, std::string error_message,FailureTest467,16850
  void TestBody() override {TestBody473,17064
  const CodeLocation loc_;loc_483,17333
  const std::string error_message_;error_message_484,17360
  const bool as_error_;as_error_485,17396
std::set<std::string>* GetIgnoredParameterizedTestSuites() {GetIgnoredParameterizedTestSuites490,17441
MarkAsIgnored::MarkAsIgnored(const char* test_suite) {MarkAsIgnored495,17658
void InsertSyntheticTestCase(const std::string& name, CodeLocation location,InsertSyntheticTestCase501,17909
      location.file.c_str(), location.line, [message, location] {__anonc0c2bbdd0202539,19689
void RegisterTypeParameterizedTestSuite(const char* test_suite_name,RegisterTypeParameterizedTestSuite545,19891
void RegisterTypeParameterizedTestSuiteInstantiation(const char* case_name) {RegisterTypeParameterizedTestSuiteInstantiation551,20147
void TypeParameterizedTestSuiteRegistry::RegisterTestSuite(RegisterTestSuite556,20325
void TypeParameterizedTestSuiteRegistry::RegisterInstantiation(RegisterInstantiation562,20565
void TypeParameterizedTestSuiteRegistry::CheckForInstantiations() {CheckForInstantiations573,20918
        testcase.second.code_location.line, [message, testcase] {__anonc0c2bbdd0302602,22292
::std::vector<std::string> GetArgvs() {GetArgvs612,22640
FilePath GetCurrentExecutableName() {GetCurrentExecutableName625,23167
std::string UnitTestOptions::GetOutputFormat() {GetOutputFormat640,23555
std::string UnitTestOptions::GetAbsolutePathToOutputFile() {GetAbsolutePathToOutputFile652,24058
static bool PatternMatchesString(const std::string& name_str,PatternMatchesString687,25463
namespace {__anonc0c2bbdd0411734,26890
bool IsGlobPattern(const std::string& pattern) {IsGlobPattern736,26903
                     [](const char c) { return c == '?' || c == '*'; });__anonc0c2bbdd0502738,27005
class UnitTestFilter {UnitTestFilter741,27081
  explicit UnitTestFilter(const std::string& filter) {UnitTestFilter746,27213
  bool MatchesName(const std::string& name) const {MatchesName764,28036
                       [&name](const std::string& pattern) {__anonc0c2bbdd0602767,28209
  std::vector<std::string> glob_patterns_;glob_patterns_775,28482
  std::unordered_set<std::string> exact_match_patterns_;exact_match_patterns_776,28525
class PositiveAndNegativeUnitTestFilter {PositiveAndNegativeUnitTestFilter779,28586
  explicit PositiveAndNegativeUnitTestFilter(const std::string& filter) {PositiveAndNegativeUnitTestFilter786,28954
  bool MatchesTest(const std::string& test_suite_name,MatchesTest816,30461
  bool MatchesName(const std::string& name) const {MatchesName823,30748
  UnitTestFilter positive_filter_;positive_filter_829,30912
  UnitTestFilter negative_filter_;negative_filter_830,30947
bool UnitTestOptions::MatchesFilter(const std::string& name_str,MatchesFilter834,31002
bool UnitTestOptions::FilterMatchesTest(const std::string& test_suite_name,FilterMatchesTest841,31290
int UnitTestOptions::GTestShouldProcessSEH(DWORD exception_code) {GTestShouldProcessSEH853,31879
ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(ScopedFakeTestPartResultReporter882,32932
ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(ScopedFakeTestPartResultReporter891,33271
void ScopedFakeTestPartResultReporter::Init() {Init897,33472
ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter() {~ScopedFakeTestPartResultReporter910,33979
void ScopedFakeTestPartResultReporter::ReportTestPartResult(ReportTestPartResult921,34450
namespace internal {internal926,34577
TypeId GetTestTypeId() { return GetTypeId<Test>(); }GetTestTypeId937,35197
static AssertionResult HasOneFailure(const char* /* results_expr */,HasOneFailure946,35602
SingleFailureChecker::SingleFailureChecker(const TestPartResultArray* results,SingleFailureChecker985,37147
SingleFailureChecker::~SingleFailureChecker() {~SingleFailureChecker994,37670
DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter(DefaultGlobalTestPartResultReporter998,37786
void DefaultGlobalTestPartResultReporter::ReportTestPartResult(ReportTestPartResult1002,37921
DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter(DefaultPerThreadTestPartResultReporter1008,38153
void DefaultPerThreadTestPartResultReporter::ReportTestPartResult(ReportTestPartResult1012,38294
UnitTestImpl::GetGlobalTestPartResultReporter() {GetGlobalTestPartResultReporter1019,38561
void UnitTestImpl::SetGlobalTestPartResultReporter(SetGlobalTestPartResultReporter1025,38774
UnitTestImpl::GetTestPartResultReporterForCurrentThread() {GetTestPartResultReporterForCurrentThread1033,39094
void UnitTestImpl::SetTestPartResultReporterForCurrentThread(SetTestPartResultReporterForCurrentThread1038,39273
int UnitTestImpl::successful_test_suite_count() const {successful_test_suite_count1044,39488
int UnitTestImpl::failed_test_suite_count() const {failed_test_suite_count1049,39638
int UnitTestImpl::total_test_suite_count() const {total_test_suite_count1054,39781
int UnitTestImpl::test_suite_to_run_count() const {test_suite_to_run_count1060,39972
int UnitTestImpl::successful_test_count() const {successful_test_count1065,40119
int UnitTestImpl::skipped_test_count() const {skipped_test_count1070,40289
int UnitTestImpl::failed_test_count() const {failed_test_count1075,40452
int UnitTestImpl::reportable_disabled_test_count() const {reportable_disabled_test_count1080,40655
int UnitTestImpl::disabled_test_count() const {disabled_test_count1086,40874
int UnitTestImpl::reportable_test_count() const {reportable_test_count1091,41064
int UnitTestImpl::total_test_count() const {total_test_count1096,41230
int UnitTestImpl::test_to_run_count() const {test_to_run_count1101,41398
std::string UnitTestImpl::CurrentOsStackTraceExceptTop(int skip_count) {CurrentOsStackTraceExceptTop1115,42024
class Timer {Timer1124,42377
  Timer() : start_(std::chrono::steady_clock::now()) {}Timer1126,42400
  TimeInMillis Elapsed() {Elapsed1129,42527
  std::chrono::steady_clock::time_point start_;start_1136,42711
TimeInMillis GetTimeInMillis() {GetTimeInMillis1142,42937
LPCWSTR String::AnsiToUtf16(const char* ansi) {AnsiToUtf161158,43442
const char* String::Utf16ToAnsi(LPCWSTR utf16_str) {Utf16ToAnsi1173,44041
bool String::CStringEquals(const char* lhs, const char* rhs) {CStringEquals1192,44760
static void StreamWideCharsToMessage(const wchar_t* wstr, size_t length,StreamWideCharsToMessage1204,45103
void SplitString(const ::std::string& str, char delimiter,SplitString1219,45519
Message::Message() : ss_(new ::std::stringstream) {Message1243,46344
Message& Message::operator<<(const wchar_t* wide_c_str) {operator <<1251,46664
Message& Message::operator<<(wchar_t* wide_c_str) {operator <<1254,46789
Message& Message::operator<<(const ::std::wstring& wstr) {operator <<1261,47064
std::string Message::GetString() const {GetString1269,47376
namespace internal {internal1273,47472
namespace edit_distance {edit_distance1275,47494
std::vector<EditType> CalculateOptimalEdits(const std::vector<size_t>& left,CalculateOptimalEdits1276,47520
namespace {__anonc0c2bbdd07111333,49563
class InternalStrings {InternalStrings1336,49639
  size_t GetId(const std::string& str) {GetId1338,49672
  typedef std::map<std::string, size_t> IdMap;IdMap1346,49870
  IdMap ids_;ids_1347,49917
std::vector<EditType> CalculateOptimalEdits(CalculateOptimalEdits1352,49952
namespace {__anonc0c2bbdd08111368,50444
class Hunk {Hunk1374,50688
  Hunk(size_t left_start, size_t right_start)Hunk1376,50710
  void PushLine(char edit, const char* line) {PushLine1383,50883
  void PrintTo(std::ostream* os) {PrintTo1401,51301
  bool has_edits() const { return adds_ || removes_; }has_edits1411,51567
  void FlushEdits() {FlushEdits1414,51633
  void PrintHeader(std::ostream* ss) const {PrintHeader1423,51948
  size_t left_start_, right_start_;left_start_1437,52264
  size_t left_start_, right_start_;right_start_1437,52264
  size_t adds_, removes_, common_;adds_1438,52300
  size_t adds_, removes_, common_;removes_1438,52300
  size_t adds_, removes_, common_;common_1438,52300
  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;hunk_1439,52335
  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;hunk_adds_1439,52335
  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;hunk_removes_1439,52335
std::string CreateUnifiedDiff(const std::vector<std::string>& left,CreateUnifiedDiff1451,52824
namespace {__anonc0c2bbdd09111516,54851
std::vector<std::string> SplitEscapedString(const std::string& str) {SplitEscapedString1521,55042
AssertionResult EqFailure(const char* lhs_expression,EqFailure1561,56219
std::string GetBoolAssertionFailureMessage(GetBoolAssertionFailureMessage1593,57309
AssertionResult DoubleNearPredFormat(const char* expr1, const char* expr2,DoubleNearPredFormat1606,57875
AssertionResult FloatingPointLE(const char* expr1, const char* expr2,FloatingPointLE1647,60037
AssertionResult FloatLE(const char* expr1, const char* expr2, float val1,FloatLE1682,61252
AssertionResult DoubleLE(const char* expr1, const char* expr2, double val1,DoubleLE1689,61574
namespace internal {internal1694,61763
AssertionResult CmpHelperSTREQ(const char* lhs_expression,CmpHelperSTREQ1697,61835
AssertionResult CmpHelperSTRCASEEQ(const char* lhs_expression,CmpHelperSTRCASEEQ1709,62272
AssertionResult CmpHelperSTRNE(const char* s1_expression,CmpHelperSTRNE1721,62731
AssertionResult CmpHelperSTRCASENE(const char* s1_expression,CmpHelperSTRCASENE1734,63224
namespace {__anonc0c2bbdd0a111748,63732
bool IsSubstringPred(const char* needle, const char* haystack) {IsSubstringPred1756,63974
bool IsSubstringPred(const wchar_t* needle, const wchar_t* haystack) {IsSubstringPred1762,64164
bool IsSubstringPred(const StringType& needle, const StringType& haystack) {IsSubstringPred1770,64457
AssertionResult IsSubstringImpl(bool expected_to_be_substring,IsSubstringImpl1779,64851
AssertionResult IsSubstring(const char* needle_expr, const char* haystack_expr,IsSubstring1803,65929
AssertionResult IsSubstring(const char* needle_expr, const char* haystack_expr,IsSubstring1808,66162
AssertionResult IsNotSubstring(const char* needle_expr,IsNotSubstring1813,66401
AssertionResult IsNotSubstring(const char* needle_expr,IsNotSubstring1819,66672
AssertionResult IsSubstring(const char* needle_expr, const char* haystack_expr,IsSubstring1825,66949
AssertionResult IsNotSubstring(const char* needle_expr,IsNotSubstring1831,67228
AssertionResult IsSubstring(const char* needle_expr, const char* haystack_expr,IsSubstring1839,67574
AssertionResult IsNotSubstring(const char* needle_expr,IsNotSubstring1845,67855
namespace internal {internal1853,68210
namespace {__anonc0c2bbdd0b111857,68254
AssertionResult HRESULTFailureHelper(const char* expr, const char* expected,HRESULTFailureHelper1860,68327
AssertionResult IsHRESULTSuccess(const char* expr, long hr) {  // NOLINTIsHRESULTSuccess1900,70013
AssertionResult IsHRESULTFailure(const char* expr, long hr) {  // NOLINTIsHRESULTFailure1907,70200
constexpr uint32_t kMaxCodePoint1 = (static_cast<uint32_t>(1) << 7) - 1;kMaxCodePoint11929,70857
constexpr uint32_t kMaxCodePoint2 = (static_cast<uint32_t>(1) << (5 + 6)) - 1;kMaxCodePoint21932,70998
constexpr uint32_t kMaxCodePoint3 =kMaxCodePoint31935,71147
constexpr uint32_t kMaxCodePoint4 =kMaxCodePoint41939,71303
inline uint32_t ChopLowBits(uint32_t* bits, int n) {ChopLowBits1945,71560
std::string CodePointToUtf8(uint32_t code_point) {CodePointToUtf81957,72072
inline bool IsUtf16SurrogatePair(wchar_t first, wchar_t second) {IsUtf16SurrogatePair1992,73719
inline uint32_t CreateCodePointFromUtf16SurrogatePair(wchar_t first,CreateCodePointFromUtf16SurrogatePair1998,73948
std::string WideStringToUtf8(const wchar_t* str, int num_chars) {WideStringToUtf82024,75332
std::string String::ShowWideCString(const wchar_t* wide_c_str) {ShowWideCString2048,76083
bool String::WideCStringEquals(const wchar_t* lhs, const wchar_t* rhs) {WideCStringEquals2060,76510
AssertionResult CmpHelperSTREQ(const char* lhs_expression,CmpHelperSTREQ2069,76749
AssertionResult CmpHelperSTRNE(const char* s1_expression,CmpHelperSTRNE2081,77190
bool String::CaseInsensitiveCStringEquals(const char* lhs, const char* rhs) {CaseInsensitiveCStringEquals2099,77912
bool String::CaseInsensitiveWideCStringEquals(const wchar_t* lhs,CaseInsensitiveWideCStringEquals2117,78778
bool String::EndsWithCaseInsensitive(const std::string& str,EndsWithCaseInsensitive2141,79599
std::string String::FormatIntWidth2(int value) {FormatIntWidth22151,80013
std::string String::FormatIntWidthN(int value, int width) {FormatIntWidthN2156,80160
std::string String::FormatHexUInt32(uint32_t value) {FormatHexUInt322163,80355
std::string String::FormatHexInt(int value) {FormatHexInt2170,80533
std::string String::FormatByte(unsigned char value) {FormatByte2175,80667
std::string StringStreamToString(::std::stringstream* ss) {StringStreamToString2184,80989
std::string AppendUserMessage(const std::string& gtest_msg,AppendUserMessage2203,81524
TestResult::TestResult()TestResult2221,81995
TestResult::~TestResult() {}~TestResult2225,82100
const TestPartResult& TestResult::GetTestPartResult(int i) const {GetTestPartResult2230,82289
const TestProperty& TestResult::GetTestProperty(int i) const {GetTestProperty2238,82618
void TestResult::ClearTestPartResults() { test_part_results_.clear(); }ClearTestPartResults2244,82840
void TestResult::AddTestPartResult(const TestPartResult& test_part_result) {AddTestPartResult2247,82953
void TestResult::RecordProperty(const std::string& xml_element,RecordProperty2254,83276
static const char* const kReservedTestSuitesAttributes[] = {kReservedTestSuitesAttributes2272,84026
static const char* const kReservedTestSuiteAttributes[] = {kReservedTestSuiteAttributes2278,84277
static const char* const kReservedTestCaseAttributes[] = {kReservedTestCaseAttributes2283,84517
static const char* const kReservedOutputTestCaseAttributes[] = {kReservedOutputTestCaseAttributes2289,84825
std::vector<std::string> ArrayAsVector(const char* const (&array)[kSize]) {ArrayAsVector2294,85037
static std::vector<std::string> GetReservedAttributesForElement(GetReservedAttributesForElement2298,85173
static std::vector<std::string> GetReservedOutputAttributesForElement(GetReservedOutputAttributesForElement2314,85852
static std::string FormatWordList(const std::vector<std::string>& words) {FormatWordList2329,86465
static bool ValidateTestPropertyName(ValidateTestPropertyName2343,86821
bool TestResult::ValidateTestProperty(const std::string& xml_element,ValidateTestProperty2358,87435
void TestResult::Clear() {Clear2365,87741
static bool TestPartSkipped(const TestPartResult& result) {TestPartSkipped2373,87922
bool TestResult::Skipped() const {Skipped2378,88065
bool TestResult::Failed() const {Failed2383,88223
static bool TestPartFatallyFailed(const TestPartResult& result) {TestPartFatallyFailed2391,88442
bool TestResult::HasFatalFailure() const {HasFatalFailure2396,88601
static bool TestPartNonfatallyFailed(const TestPartResult& result) {TestPartNonfatallyFailed2401,88777
bool TestResult::HasNonfatalFailure() const {HasNonfatalFailure2406,88951
int TestResult::total_part_count() const {total_part_count2412,89202
int TestResult::test_property_count() const {test_property_count2417,89348
Test::Test() : gtest_flag_saver_(new GTEST_FLAG_SAVER_) {}Test2426,89535
Test::~Test() {}~Test2431,89745
void Test::SetUp() {}SetUp2436,89829
void Test::TearDown() {}TearDown2441,89921
void Test::RecordProperty(const std::string& key, const std::string& value) {RecordProperty2444,90020
void Test::RecordProperty(const std::string& key, int value) {RecordProperty2449,90229
namespace internal {internal2455,90404
void ReportFailureInUnknownLocation(TestPartResult::Type result_type,ReportFailureInUnknownLocation2457,90426
bool Test::HasSameFixtureClass() {HasSameFixtureClass2476,91262
static std::string* FormatSehExceptionMessage(DWORD exception_code,FormatSehExceptionMessage2543,94408
namespace internal {internal2554,94789
static std::string FormatCxxExceptionMessage(const char* description,FormatCxxExceptionMessage2559,94902
GoogleTestFailureException::GoogleTestFailureException(GoogleTestFailureException2575,95397
Result HandleSehExceptionsInMethodIfSupported(T* object, Result (T::*method)(),HandleSehExceptionsInMethodIfSupported2590,96091
Result HandleExceptionsInMethodIfSupported(T* object, Result (T::*method)(),HandleExceptionsInMethodIfSupported2617,97190
void Test::Run() {Run2674,99689
bool Test::HasFatalFailure() {HasFatalFailure2697,100693
bool Test::HasNonfatalFailure() {HasNonfatalFailure2702,100880
bool Test::IsSkipped() {IsSkipped2709,101075
TestInfo::TestInfo(const std::string& a_test_suite_name,TestInfo2717,101279
TestInfo::~TestInfo() { delete factory_; }~TestInfo2738,102214
namespace internal {internal2740,102258
TestInfo* MakeAndRegisterTestInfo(MakeAndRegisterTestInfo2760,103248
void ReportInvalidTestSuiteType(const char* test_suite_name,ReportInvalidTestSuiteType2772,103794
namespace {__anonc0c2bbdd0c112791,104718
class TestNameIs {TestNameIs2801,104995
  explicit TestNameIs(const char* name) : name_(name) {}TestNameIs2806,105090
  bool operator()(const TestInfo* test_info) const {operator ()2809,105223
  std::string name_;name_2814,105343
namespace internal {internal2819,105385
void UnitTestImpl::RegisterParameterizedTests() {RegisterParameterizedTests2824,105615
void TestInfo::Run() {Run2836,105979
void TestInfo::Skip() {Skip2885,107685
int TestSuite::successful_test_count() const {successful_test_count2909,108480
int TestSuite::skipped_test_count() const {skipped_test_count2914,108636
int TestSuite::failed_test_count() const {failed_test_count2919,108786
int TestSuite::reportable_disabled_test_count() const {reportable_disabled_test_count2924,108957
int TestSuite::disabled_test_count() const {disabled_test_count2929,109132
int TestSuite::reportable_test_count() const {reportable_test_count2934,109290
int TestSuite::test_to_run_count() const {test_to_run_count2939,109454
int TestSuite::total_test_count() const {total_test_count2944,109583
TestSuite::TestSuite(const char* a_name, const char* a_type_param,TestSuite2957,110080
TestSuite::~TestSuite() {~TestSuite2969,110543
const TestInfo* TestSuite::GetTestInfo(int i) const {GetTestInfo2976,110807
TestInfo* TestSuite::GetMutableTestInfo(int i) {GetMutableTestInfo2983,111132
void TestSuite::AddTestInfo(TestInfo* test_info) {AddTestInfo2990,111418
void TestSuite::Run() {Run2996,111617
void TestSuite::Skip() {Skip3050,113323
void TestSuite::ClearResult() {ClearResult3080,114249
void TestSuite::ShuffleTests(internal::Random* random) {ShuffleTests3086,114412
void TestSuite::UnshuffleTests() {UnshuffleTests3091,114563
static std::string FormatCountableNoun(int count, const char* singular_form,FormatCountableNoun3102,114955
static std::string FormatTestCount(int test_count) {FormatTestCount3109,115238
static std::string FormatTestSuiteCount(int test_suite_count) {FormatTestSuiteCount3114,115390
static const char* TestPartResultTypeToString(TestPartResult::Type type) {TestPartResultTypeToString3122,115794
namespace internal {internal3141,116223
namespace {__anonc0c2bbdd0d113142,116244
enum class GTestColor { kDefault, kRed, kGreen, kYellow };GTestColor3143,116256
enum class GTestColor { kDefault, kRed, kGreen, kYellow };kDefault3143,116256
enum class GTestColor { kDefault, kRed, kGreen, kYellow };kRed3143,116256
enum class GTestColor { kDefault, kRed, kGreen, kYellow };kGreen3143,116256
enum class GTestColor { kDefault, kRed, kGreen, kYellow };kYellow3143,116256
static std::string PrintTestPartResultToString(PrintTestPartResultToString3147,116378
static void PrintTestPartResult(const TestPartResult& test_part_result) {PrintTestPartResult3159,116845
static WORD GetColorAttribute(GTestColor color) {GetColorAttribute3181,117864
static int GetBitOffset(WORD color_mask) {GetBitOffset3194,118163
static WORD GetNewColor(GTestColor color, WORD old_color_attrs) {GetNewColor3205,118361
static const char* GetAnsiColorCode(GTestColor color) {GetAnsiColorCode3229,119342
bool ShouldUseColor(bool stdout_is_tty) {ShouldUseColor3245,119732
static void ColoredPrintf(GTestColor color, const char* fmt, ...) {ColoredPrintf3285,121525
static const char kTypeParamLabel[] = "TypeParam";kTypeParamLabel3330,123084
static const char kValueParamLabel[] = "GetParam()";kValueParamLabel3331,123135
static void PrintFullTestCommentIfPresent(const TestInfo& test_info) {PrintFullTestCommentIfPresent3333,123189
class PrettyUnitTestResultPrinter : public TestEventListener {PrettyUnitTestResultPrinter3352,123816
  PrettyUnitTestResultPrinter() {}PrettyUnitTestResultPrinter3354,123888
  static void PrintTestName(const char* test_suite, const char* test) {PrintTestName3355,123923
  void OnTestProgramStart(const UnitTest& /*unit_test*/) override {}OnTestProgramStart3360,124114
  void OnEnvironmentsSetUpEnd(const UnitTest& /*unit_test*/) override {}OnEnvironmentsSetUpEnd3363,124332
  void OnEnvironmentsTearDownEnd(const UnitTest& /*unit_test*/) override {}OnEnvironmentsTearDownEnd3382,125123
  void OnTestProgramEnd(const UnitTest& /*unit_test*/) override {}OnTestProgramEnd3384,125277
void PrettyUnitTestResultPrinter::OnTestIterationStart(OnTestIterationStart3393,125590
void PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart(OnEnvironmentsSetUpStart3428,126947
void PrettyUnitTestResultPrinter::OnTestCaseStart(const TestCase& test_case) {OnTestCaseStart3436,127208
void PrettyUnitTestResultPrinter::OnTestSuiteStart(OnTestSuiteStart3449,127679
void PrettyUnitTestResultPrinter::OnTestStart(const TestInfo& test_info) {OnTestStart3464,128202
void PrettyUnitTestResultPrinter::OnTestDisabled(const TestInfo& test_info) {OnTestDisabled3471,128432
void PrettyUnitTestResultPrinter::OnTestPartResult(OnTestPartResult3479,128704
void PrettyUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {OnTestEnd3493,129104
void PrettyUnitTestResultPrinter::OnTestCaseEnd(const TestCase& test_case) {OnTestCaseEnd3515,129844
void PrettyUnitTestResultPrinter::OnTestSuiteEnd(const TestSuite& test_suite) {OnTestSuiteEnd3526,130298
void PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart(OnEnvironmentsTearDownStart3538,130798
void PrettyUnitTestResultPrinter::PrintFailedTests(const UnitTest& unit_test) {PrintFailedTests3546,131080
void PrettyUnitTestResultPrinter::PrintFailedTestSuites(PrintFailedTestSuites3573,132198
void PrettyUnitTestResultPrinter::PrintSkippedTests(const UnitTest& unit_test) {PrintSkippedTests3594,132945
void PrettyUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd3617,133740
class BriefUnitTestResultPrinter : public TestEventListener {BriefUnitTestResultPrinter3660,135424
  BriefUnitTestResultPrinter() {}BriefUnitTestResultPrinter3662,135495
  static void PrintTestName(const char* test_suite, const char* test) {PrintTestName3663,135529
  void OnTestProgramStart(const UnitTest& /*unit_test*/) override {}OnTestProgramStart3668,135720
  void OnTestIterationStart(const UnitTest& /*unit_test*/,OnTestIterationStart3669,135789
  void OnEnvironmentsSetUpStart(const UnitTest& /*unit_test*/) override {}OnEnvironmentsSetUpStart3671,135907
  void OnEnvironmentsSetUpEnd(const UnitTest& /*unit_test*/) override {}OnEnvironmentsSetUpEnd3672,135982
  void OnTestCaseStart(const TestCase& /*test_case*/) override {}OnTestCaseStart3674,136097
  void OnTestSuiteStart(const TestSuite& /*test_suite*/) override {}OnTestSuiteStart3676,136169
  void OnTestStart(const TestInfo& /*test_info*/) override {}OnTestStart3679,136266
  void OnTestDisabled(const TestInfo& /*test_info*/) override {}OnTestDisabled3680,136328
  void OnTestCaseEnd(const TestCase& /*test_case*/) override {}OnTestCaseEnd3685,136554
  void OnTestSuiteEnd(const TestSuite& /*test_suite*/) override {}OnTestSuiteEnd3687,136624
  void OnEnvironmentsTearDownStart(const UnitTest& /*unit_test*/) override {}OnEnvironmentsTearDownStart3690,136737
  void OnEnvironmentsTearDownEnd(const UnitTest& /*unit_test*/) override {}OnEnvironmentsTearDownEnd3691,136815
  void OnTestProgramEnd(const UnitTest& /*unit_test*/) override {}OnTestProgramEnd3693,136969
void BriefUnitTestResultPrinter::OnTestPartResult(OnTestPartResult3697,137078
void BriefUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {OnTestEnd3711,137477
void BriefUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd3728,137991
class TestEventRepeater : public TestEventListener {TestEventRepeater3765,139495
  TestEventRepeater() : forwarding_enabled_(true) {}TestEventRepeater3767,139557
  bool forwarding_enabled() const { return forwarding_enabled_; }forwarding_enabled3774,139858
  void set_forwarding_enabled(bool enable) { forwarding_enabled_ = enable; }set_forwarding_enabled3775,139924
  bool forwarding_enabled_;forwarding_enabled_3803,141432
  std::vector<TestEventListener*> listeners_;listeners_3805,141508
TestEventRepeater::~TestEventRepeater() {~TestEventRepeater3811,141682
void TestEventRepeater::Append(TestEventListener* listener) {Append3815,141777
TestEventListener* TestEventRepeater::Release(TestEventListener* listener) {Release3819,141876
#define GTEST_REPEATER_METHOD_(GTEST_REPEATER_METHOD_3832,142302
#define GTEST_REVERSE_REPEATER_METHOD_(GTEST_REVERSE_REPEATER_METHOD_3842,142798
GTEST_REPEATER_METHOD_(OnTestProgramStart, UnitTest)GTEST_REPEATER_METHOD_3851,143209
void TestEventRepeater::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd3884,144635
class XmlUnitTestResultPrinter : public EmptyTestEventListener {XmlUnitTestResultPrinter3896,144997
  static bool IsNormalizableWhitespace(unsigned char c) {IsNormalizableWhitespace3910,145598
  static bool IsValidXmlCharacter(unsigned char c) {IsValidXmlCharacter3916,145803
  static std::string EscapeXmlAttribute(const std::string& str) {EscapeXmlAttribute3930,146446
  static std::string EscapeXmlText(const char* str) {EscapeXmlText3935,146628
  const std::string output_file_;output_file_3984,148838
XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char* output_file)XmlUnitTestResultPrinter3991,149071
void XmlUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd3999,149314
void XmlUnitTestResultPrinter::ListTestsMatchingFilter(ListTestsMatchingFilter4008,149666
std::string XmlUnitTestResultPrinter::EscapeXml(const std::string& str,EscapeXml4027,150541
std::string XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(RemoveInvalidXmlCharacters4074,151767
std::string FormatTimeInMillisAsSeconds(TimeInMillis ms) {FormatTimeInMillisAsSeconds4102,152792
static bool PortableLocaltime(time_t seconds, struct tm* out) {PortableLocaltime4108,152941
std::string FormatEpochTimeInMillisAsIso8601(TimeInMillis ms) {FormatEpochTimeInMillisAsIso86014129,153750
void XmlUnitTestResultPrinter::OutputXmlCDataSection(::std::ostream* stream,OutputXmlCDataSection4144,154476
void XmlUnitTestResultPrinter::OutputXmlAttribute(OutputXmlAttribute4163,155065
void XmlUnitTestResultPrinter::OutputXmlTestSuiteForTestResult(OutputXmlTestSuiteForTestResult4178,155697
void XmlUnitTestResultPrinter::OutputXmlTestInfo(::std::ostream* stream,OutputXmlTestInfo4215,157341
void XmlUnitTestResultPrinter::OutputXmlTestResult(::std::ostream* stream,OutputXmlTestResult4261,159076
void XmlUnitTestResultPrinter::PrintXmlTestSuite(std::ostream* stream,PrintXmlTestSuite4308,161024
void XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream* stream,PrintXmlUnitTest4342,162625
void XmlUnitTestResultPrinter::PrintXmlTestsList(PrintXmlTestsList4386,164448
std::string XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(TestPropertiesAsXmlAttributes4410,165300
void XmlUnitTestResultPrinter::OutputXmlTestProperties(OutputXmlTestProperties4421,165703
class JsonUnitTestResultPrinter : public EmptyTestEventListener {JsonUnitTestResultPrinter4444,166482
  const std::string output_file_;output_file_4498,168921
JsonUnitTestResultPrinter::JsonUnitTestResultPrinter(const char* output_file)JsonUnitTestResultPrinter4506,169165
void JsonUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd4513,169375
std::string JsonUnitTestResultPrinter::EscapeJson(const std::string& str) {EscapeJson4523,169790
static std::string FormatTimeInMillisAsDuration(TimeInMillis ms) {FormatTimeInMillisAsDuration4566,170673
static std::string FormatEpochTimeInMillisAsRFC3339(TimeInMillis ms) {FormatEpochTimeInMillisAsRFC33394574,170963
static inline std::string Indent(size_t width) {Indent4587,171548
void JsonUnitTestResultPrinter::OutputJsonKey(std::ostream* stream,OutputJsonKey4591,171634
void JsonUnitTestResultPrinter::OutputJsonKey(OutputJsonKey4609,172488
void JsonUnitTestResultPrinter::OutputJsonTestSuiteForTestResult(OutputJsonTestSuiteForTestResult4625,173174
void JsonUnitTestResultPrinter::OutputJsonTestInfo(::std::ostream* stream,OutputJsonTestInfo4667,175108
void JsonUnitTestResultPrinter::OutputJsonTestResult(::std::ostream* stream,OutputJsonTestResult4714,176969
void JsonUnitTestResultPrinter::PrintJsonTestSuite(PrintJsonTestSuite4744,178116
void JsonUnitTestResultPrinter::PrintJsonUnitTest(std::ostream* stream,PrintJsonUnitTest4787,179765
void JsonUnitTestResultPrinter::PrintJsonTestList(PrintJsonTestList4843,181785
std::string JsonUnitTestResultPrinter::TestPropertiesAsJson(TestPropertiesAsJson4870,182646
std::string StreamingListener::UrlEncode(const char* str) {UrlEncode4891,183498
void StreamingListener::SocketWriter::MakeConnection() {MakeConnection4910,183934
const char* const OsStackTraceGetterInterface::kElidedFramesMarker =kElidedFramesMarker4956,185482
std::string OsStackTraceGetter::CurrentStackTrace(int max_depth, int skip_count)CurrentStackTrace4959,185599
void OsStackTraceGetter::UponLeavingGTest() GTEST_LOCK_EXCLUDED_(mutex_) {UponLeavingGTest5009,186865
class ScopedPrematureExitFile {ScopedPrematureExitFile5023,187284
  explicit ScopedPrematureExitFile(const char* premature_exit_filepath)ScopedPrematureExitFile5025,187325
  ~ScopedPrematureExitFile() {~ScopedPrematureExitFile5039,187933
  const std::string premature_exit_filepath_;premature_exit_filepath_5053,188342
TestEventListeners::TestEventListeners()TestEventListeners5063,188595
TestEventListeners::~TestEventListeners() { delete repeater_; }~TestEventListeners5068,188770
void TestEventListeners::Append(TestEventListener* listener) {Append5074,189103
TestEventListener* TestEventListeners::Release(TestEventListener* listener) {Release5081,189396
TestEventListener* TestEventListeners::repeater() { return repeater_; }repeater5091,189771
void TestEventListeners::SetDefaultResultPrinter(TestEventListener* listener) {SetDefaultResultPrinter5098,190197
void TestEventListeners::SetDefaultXmlGenerator(TestEventListener* listener) {SetDefaultXmlGenerator5113,190902
bool TestEventListeners::EventForwardingEnabled() const {EventForwardingEnabled5125,191345
void TestEventListeners::SuppressEventForwarding() {SuppressEventForwarding5129,191448
UnitTest* UnitTest::GetInstance() {GetInstance5142,191910
int UnitTest::successful_test_suite_count() const {successful_test_suite_count5157,192349
int UnitTest::failed_test_suite_count() const {failed_test_suite_count5162,192494
int UnitTest::total_test_suite_count() const {total_test_suite_count5167,192628
int UnitTest::test_suite_to_run_count() const {test_suite_to_run_count5173,192810
int UnitTest::successful_test_case_count() const {successful_test_case_count5179,192996
int UnitTest::failed_test_case_count() const {failed_test_case_count5182,193097
int UnitTest::total_test_case_count() const {total_test_case_count5185,193190
int UnitTest::test_case_to_run_count() const {test_case_to_run_count5188,193281
int UnitTest::successful_test_count() const {successful_test_count5194,193461
int UnitTest::skipped_test_count() const {skipped_test_count5199,193589
int UnitTest::failed_test_count() const { return impl()->failed_test_count(); }failed_test_count5204,193710
int UnitTest::reportable_disabled_test_count() const {reportable_disabled_test_count5207,193869
int UnitTest::disabled_test_count() const {disabled_test_count5212,194016
int UnitTest::reportable_test_count() const {reportable_test_count5217,194164
int UnitTest::total_test_count() const { return impl()->total_test_count(); }total_test_count5222,194288
int UnitTest::test_to_run_count() const { return impl()->test_to_run_count(); }test_to_run_count5225,194412
internal::TimeInMillis UnitTest::start_timestamp() const {start_timestamp5229,194580
internal::TimeInMillis UnitTest::elapsed_time() const {elapsed_time5234,194721
bool UnitTest::Passed() const { return impl()->Passed(); }Passed5240,194899
bool UnitTest::Failed() const { return impl()->Failed(); }Failed5244,195086
const TestSuite* UnitTest::GetTestSuite(int i) const {GetTestSuite5248,195297
const TestCase* UnitTest::GetTestCase(int i) const {GetTestCase5254,195480
const TestResult& UnitTest::ad_hoc_test_result() const {ad_hoc_test_result5261,195741
TestSuite* UnitTest::GetMutableTestSuite(int i) {GetMutableTestSuite5267,195992
TestEventListeners& UnitTest::listeners() { return *impl()->listeners(); }listeners5273,196181
Environment* UnitTest::AddEnvironment(Environment* env) {AddEnvironment5285,196733
void UnitTest::AddTestPartResult(TestPartResult::Type result_type,AddTestPartResult5298,197161
void UnitTest::RecordProperty(const std::string& key,RecordProperty5372,200295
int UnitTest::Run() {Run5382,200667
const char* UnitTest::original_working_dir() const {original_working_dir5468,204688
const TestSuite* UnitTest::current_test_suite() constcurrent_test_suite5474,204896
const TestCase* UnitTest::current_test_case() constcurrent_test_case5482,205153
const TestInfo* UnitTest::current_test_info() constcurrent_test_info5491,205429
int UnitTest::random_seed() const { return impl_->random_seed(); }random_seed5498,205663
UnitTest::parameterized_test_registry() GTEST_LOCK_EXCLUDED_(mutex_) {parameterized_test_registry5503,205908
UnitTest::UnitTest() { impl_ = new internal::UnitTestImpl(this); }UnitTest5508,206059
UnitTest::~UnitTest() { delete impl_; }~UnitTest5511,206154
void UnitTest::PushGTestTrace(const internal::TraceInfo& trace)PushGTestTrace5515,206288
void UnitTest::PopGTestTrace() GTEST_LOCK_EXCLUDED_(mutex_) {PopGTestTrace5522,206535
namespace internal {internal5527,206678
UnitTestImpl::UnitTestImpl(UnitTest* parent)UnitTestImpl5529,206700
UnitTestImpl::~UnitTestImpl() {~UnitTestImpl5558,207944
void UnitTestImpl::RecordProperty(const TestProperty& test_property) {RecordProperty5573,208516
void UnitTestImpl::SuppressTestEventsIfInSubprocess() {SuppressTestEventsIfInSubprocess5593,209257
void UnitTestImpl::ConfigureXmlOutput() {ConfigureXmlOutput5601,209577
void UnitTestImpl::ConfigureStreamingOutput() {ConfigureStreamingOutput5618,210356
void UnitTestImpl::PostFlagParsingInit() {PostFlagParsingInit5638,211209
class TestSuiteNameIs {TestSuiteNameIs5688,212926
  explicit TestSuiteNameIs(const std::string& name) : name_(name) {}TestSuiteNameIs5691,212977
  bool operator()(const TestSuite* test_suite) const {operator ()5694,213118
  std::string name_;name_5700,213283
TestSuite* UnitTestImpl::GetTestSuite(GetTestSuite5715,213905
static void SetUpEnvironment(Environment* env) { env->SetUp(); }SetUpEnvironment5751,215355
static void TearDownEnvironment(Environment* env) { env->TearDown(); }TearDownEnvironment5752,215420
bool UnitTestImpl::RunAllTests() {RunAllTests5763,215993
void WriteToShardStatusFileIfNeeded() {WriteToShardStatusFileIfNeeded5962,223992
bool ShouldShard(const char* total_shards_env, const char* shard_index_env,ShouldShard5984,224951
int32_t Int32FromEnvOrDie(const char* var, int32_t default_val) {Int32FromEnvOrDie6028,226901
bool ShouldRunTestOnShard(int total_shards, int shard_index, int test_id) {ShouldRunTestOnShard6046,227533
int UnitTestImpl::FilterTests(ReactionToSharding shard_tests) {FilterTests6057,228060
static void PrintOnOneLine(const char* str, int max_length) {PrintOnOneLine6116,230590
void UnitTestImpl::ListTestsMatchingFilter() {ListTestsMatchingFilter6135,231010
void UnitTestImpl::set_os_stack_trace_getter(set_os_stack_trace_getter6192,233247
OsStackTraceGetterInterface* UnitTestImpl::os_stack_trace_getter() {os_stack_trace_getter6203,233614
TestResult* UnitTestImpl::current_test_result() {current_test_result6216,234024
void UnitTestImpl::ShuffleTests() {ShuffleTests6228,234410
void UnitTestImpl::UnshuffleTests() {UnshuffleTests6243,234951
GetCurrentOsStackTraceExceptTop(int skip_count) {GetCurrentOsStackTraceExceptTop6263,235791
namespace {__anonc0c2bbdd0e116271,236142
class ClassUniqueToAlwaysTrue {};ClassUniqueToAlwaysTrue6272,236154
bool IsTrue(bool condition) { return condition; }IsTrue6275,236205
bool AlwaysTrue() {AlwaysTrue6277,236256
bool SkipPrefix(const char* prefix, const char** pstr) {SkipPrefix6289,236743
static const char* ParseFlagValue(const char* str, const char* flag_name,ParseFlagValue6303,237188
static bool ParseFlag(const char* str, const char* flag_name, bool* value) {ParseFlag6341,238543
bool ParseFlag(const char* str, const char* flag_name, int32_t* value) {ParseFlag6357,239151
static bool ParseFlag(const char* str, const char* flag_name, String* value) {ParseFlag6374,239801
static bool HasGoogleTestFlagPrefix(const char* str) {HasGoogleTestFlagPrefix6392,240583
static void PrintColorEncoded(const char* str) {PrintColorEncoded6409,241260
static const char kColorEncodedHelpMessage[] =kColorEncodedHelpMessage6443,242187
static bool ParseGoogleTestFlag(const char* const arg) {ParseGoogleTestFlag6539,246058
#define GTEST_INTERNAL_PARSE_FLAG(GTEST_INTERNAL_PARSE_FLAG6540,246115
static void LoadFlagsFromFile(const std::string& path) {LoadFlagsFromFile6574,247456
void ParseGoogleTestFlagsOnlyImpl(int* argc, CharType** argv) {ParseGoogleTestFlagsOnlyImpl6595,248254
void ParseGoogleTestFlagsOnly(int* argc, char** argv) {ParseGoogleTestFlagsOnly6646,249944
void ParseGoogleTestFlagsOnly(int* argc, wchar_t** argv) {ParseGoogleTestFlagsOnly6680,251274
void InitGoogleTestImpl(int* argc, CharType** argv) {InitGoogleTestImpl6689,251545
void InitGoogleTest(int* argc, char** argv) {InitGoogleTest6725,252773
void InitGoogleTest(int* argc, wchar_t** argv) {InitGoogleTest6735,253182
void InitGoogleTest() {InitGoogleTest6745,253607
static std::string GetTempDirFromEnv(GetTempDirFromEnv6764,254428
std::string TempDir() {TempDir6780,254918
void ScopedTrace::PushTrace(const char* file, int line, std::string message) {PushTrace6796,255479
ScopedTrace::~ScopedTrace() GTEST_LOCK_EXCLUDED_(&UnitTest::mutex_) {~ScopedTrace6806,255752

build/_deps/googletest-src/googletest/src/gtest-test-part.cc,755
namespace testing {testing38,1735
std::string TestPartResult::ExtractSummary(const char* message) {ExtractSummary44,1871
std::ostream& operator<<(std::ostream& os, const TestPartResult& result) {operator <<50,2134
void TestPartResultArray::Append(const TestPartResult& result) {Append64,2756
const TestPartResult& TestPartResultArray::GetTestPartResult(int index) const {GetTestPartResult69,2912
int TestPartResultArray::size() const {size79,3246
namespace internal {internal83,3331
HasNewFatalFailureHelper::HasNewFatalFailureHelper()HasNewFatalFailureHelper85,3353
HasNewFatalFailureHelper::~HasNewFatalFailureHelper() {~HasNewFatalFailureHelper92,3618
void HasNewFatalFailureHelper::ReportTestPartResult(ReportTestPartResult97,3768

build/_deps/googletest-src/googletest/docs/README.md,34
# Content MovedContent Moved1,0

build/_deps/googletest-src/googlemock/test/gmock_leak_test_.cc,465
namespace {__anona726e1a3011137,1754
class FooInterface {FooInterface41,1793
  virtual ~FooInterface() {}~FooInterface43,1823
class MockFoo : public FooInterface {MockFoo47,1885
  MockFoo() {}MockFoo49,1932
TEST(LeakTest, LeakedMockWithExpectCallCausesFailureWhenLeakCheckingIsEnabled) {TEST58,2078
TEST(LeakTest, LeakedMockWithOnCallCausesFailureWhenLeakCheckingIsEnabled) {TEST71,2446
TEST(LeakTest, CatchesMultipleLeakedMockObjects) {TEST83,2813

build/_deps/googletest-src/googlemock/test/BUILD.bazel,0

build/_deps/googletest-src/googlemock/test/gmock_link_test.cc,44
#define LinkTest LinkTest1LinkTest36,1813

build/_deps/googletest-src/googlemock/test/gmock-pp-string_test.cc,855
namespace testing {testing38,1761
namespace {__anon085c2d39011139,1781
::testing::Matcher<const std::string&> SameExceptSpaces(const std::string& s) {SameExceptSpaces43,1925
  auto remove_spaces = [](std::string to_split) {__anon085c2d39020244,2005
#define EXPECT_EXPANSION(EXPECT_EXPANSION55,2439
TEST(Macros, Cat) {TEST58,2552
TEST(Macros, Narg) {TEST63,2667
TEST(Macros, Comma) {TEST75,3058
TEST(Macros, IsEmpty) {TEST81,3230
#define GMOCK_PP_INTERNAL_IS_EMPTY_TEST_1GMOCK_PP_INTERNAL_IS_EMPTY_TEST_187,3444
TEST(Macros, If) {TEST91,3568
TEST(Macros, HeadTail) {TEST96,3684
TEST(Macros, Parentheses) {TEST106,4003
TEST(Macros, Increment) {TEST122,4701
#define JOINER_CAT(JOINER_CAT132,4985
#define JOINER(_N, _Data, _Elem) JOINER_JOINER133,5015
TEST(Macros, Repeat) {TEST135,5079
TEST(Macros, ForEach) {TEST164,6629

build/_deps/googletest-src/googlemock/test/gmock_test_utils.py,525
def GetSourceDir():GetSourceDir38,1672
def GetTestExecutablePath(executable_name):GetTestExecutablePath44,1812
def GetExitStatus(exit_code):GetExitStatus60,2229
Subprocess = gtest_test_utils.SubprocessSubprocess84,2894
TestCase = gtest_test_utils.TestCaseTestCase85,2935
environ = gtest_test_utils.environenviron86,2972
SetEnvVar = gtest_test_utils.SetEnvVarSetEnvVar87,3007
PREMATURE_EXIT_FILE_ENV_VAR = gtest_test_utils.PREMATURE_EXIT_FILE_ENV_VARPREMATURE_EXIT_FILE_ENV_VAR88,3046
def Main():Main93,3151

build/_deps/googletest-src/googlemock/test/gmock_stress_test.cc,919
namespace testing {testing36,1704
namespace {__anon6fab5b0b011137,1724
const int kMaxTestThreads = 50;kMaxTestThreads44,1887
const int kRepeat = 50;kRepeat47,1973
class MockFoo {MockFoo49,1998
void JoinAndDelete(ThreadWithParam<T>* t) {JoinAndDelete57,2278
struct Dummy {};Dummy62,2350
void TestConcurrentMockObjects(Dummy /* dummy */) {TestConcurrentMockObjects66,2495
struct Helper1Param {Helper1Param88,3213
  MockFoo* mock_foo;mock_foo89,3235
  int* count;count90,3256
void Helper1(Helper1Param param) {Helper193,3274
void TestConcurrentCallsOnSameObject(Dummy /* dummy */) {TestConcurrentCallsOnSameObject113,3798
void Helper2(MockFoo* foo) {Helper2141,4708
void TestPartiallyOrderedExpectationsWithThreads(Dummy /* dummy */) {TestPartiallyOrderedExpectationsWithThreads149,4865
TEST(StressTest, CanUseGMockWithThreads) {TEST184,5624
int main(int argc, char** argv) {main219,6996

build/_deps/googletest-src/googlemock/test/gmock_output_test_golden.txt,0

build/_deps/googletest-src/googlemock/test/gmock_all_test.cc,0

build/_deps/googletest-src/googlemock/test/gmock-spec-builders_test.cc,12766
namespace testing {testing48,1971
namespace {__anon625e74a7011149,1991
class MockIncomplete {MockIncomplete66,2436
TEST(MockMethodTest, CanInstantiateWithIncompleteArgType) {TEST76,2748
void PrintTo(const Incomplete& /* x */, ::std::ostream* os) {PrintTo87,3225
class Result {};Result91,3313
class NonDefaultConstructible {NonDefaultConstructible94,3375
  explicit NonDefaultConstructible(int /* dummy */) {}NonDefaultConstructible96,3416
class MockA {MockA99,3475
  MockA() {}MockA101,3498
class MockB {MockB114,3845
  MockB() {}MockB116,3868
class ReferenceHoldingMock {ReferenceHoldingMock126,4062
  ReferenceHoldingMock() {}ReferenceHoldingMock128,4100
#define Method MethodWMethod142,4599
class CC {CC144,4623
  virtual ~CC() {}~CC146,4643
class MockCC : public CC {MockCC149,4693
  MockCC() {}MockCC151,4729
TEST(OnCallSyntaxTest, CompilesWithMethodNameExpandedFromMacro) {TEST161,4921
TEST(OnCallSyntaxTest, WorksWithMethodNameExpandedFromMacro) {TEST168,5136
TEST(ExpectCallSyntaxTest, CompilesWithMethodNameExpandedFromMacro) {TEST175,5348
TEST(ExpectCallSyntaxTest, WorksWithMethodNameExpandedFromMacro) {TEST182,5507
TEST(OnCallSyntaxTest, EvaluatesFirstArgumentOnce) {TEST192,5815
TEST(OnCallSyntaxTest, EvaluatesSecondArgumentOnce) {TEST200,5952
TEST(OnCallSyntaxTest, WithIsOptional) {TEST210,6141
TEST(OnCallSyntaxTest, WithCanAppearAtMostOnce) {TEST217,6297
TEST(OnCallSyntaxTest, WillByDefaultIsMandatory) {TEST230,6604
TEST(OnCallSyntaxTest, WillByDefaultCanAppearAtMostOnce) {TEST241,6773
TEST(ExpectCallSyntaxTest, EvaluatesFirstArgumentOnce) {TEST253,7140
TEST(ExpectCallSyntaxTest, EvaluatesSecondArgumentOnce) {TEST262,7297
TEST(ExpectCallSyntaxTest, WithIsOptional) {TEST273,7510
TEST(ExpectCallSyntaxTest, WithCanAppearAtMostOnce) {TEST280,7648
TEST(ExpectCallSyntaxTest, WithMustBeFirstClause) {TEST292,7900
TEST(ExpectCallSyntaxTest, TimesCanBeInferred) {TEST312,8338
TEST(ExpectCallSyntaxTest, TimesCanAppearAtMostOnce) {TEST324,8555
TEST(ExpectCallSyntaxTest, TimesMustBeBeforeInSequence) {TEST337,8823
TEST(ExpectCallSyntaxTest, InSequenceIsOptional) {TEST350,9078
TEST(ExpectCallSyntaxTest, InSequenceCanAppearMultipleTimes) {TEST361,9249
TEST(ExpectCallSyntaxTest, InSequenceMustBeBeforeAfter) {TEST370,9419
TEST(ExpectCallSyntaxTest, InSequenceMustBeBeforeWillOnce) {TEST384,9735
TEST(ExpectCallSyntaxTest, AfterMustBeBeforeWillOnce) {TEST397,10003
TEST(ExpectCallSyntaxTest, WillIsOptional) {TEST409,10271
TEST(ExpectCallSyntaxTest, WillCanAppearMultipleTimes) {TEST419,10427
TEST(ExpectCallSyntaxTest, WillMustBeBeforeWillRepeatedly) {TEST429,10629
TEST(ExpectCallSyntaxTest, WillRepeatedlyIsOptional) {TEST441,10892
TEST(ExpectCallSyntaxTest, WillRepeatedlyCannotAppearMultipleTimes) {TEST452,11114
TEST(ExpectCallSyntaxTest, WillRepeatedlyMustBeBeforeRetiresOnSaturation) {TEST464,11435
TEST(ExpectCallSyntaxTest, RetiresOnSaturationIsOptional) {TEST474,11709
TEST(ExpectCallSyntaxTest, RetiresOnSaturationCannotAppearMultipleTimes) {TEST484,11883
TEST(ExpectCallSyntaxTest, DefaultCardinalityIsOnce) {TEST496,12179
TEST(ExpectCallSyntaxTest, DoesNotWarnOnAdequateActionCount) {TEST522,12730
TEST(ExpectCallSyntaxTest, WarnsOnTooManyActions) {TEST552,13676
TEST(ExpectCallSyntaxTest, WarnsOnTooFewActions) {TEST607,15840
TEST(ExpectCallSyntaxTest, WarningIsErrorWithFlag) {TEST623,16332
TEST(OnCallTest, TakesBuiltInDefaultActionWhenNoOnCall) {TEST685,18058
TEST(OnCallTest, TakesBuiltInDefaultActionWhenNoOnCallMatches) {TEST694,18277
TEST(OnCallTest, PicksLastMatchingOnCall) {TEST703,18515
TEST(ExpectCallTest, AllowsAnyCallWhenNoSpec) {TEST716,18879
TEST(ExpectCallTest, PicksLastMatchingExpectCall) {TEST729,19147
TEST(ExpectCallTest, CatchesTooFewCalls) {TEST738,19376
TEST(ExpectCallTest, InfersCardinalityWhenThereIsNoWillRepeatedly) {TEST753,19845
TEST(ExpectCallTest, InfersCardinality1WhenThereIsWillRepeatedly) {TEST781,20480
TEST(ExpectCallTest, NonMoveableType) {TEST811,21299
  struct Result {Result813,21379
    explicit Result(int x_in) : x(x_in) {}Result814,21397
    int x;x817,21472
  const auto return_17 = [] { return Result(17); };__anon625e74a70202828,21863
TEST(ExpectCallTest, NthMatchTakesNthAction) {TEST852,22633
TEST(ExpectCallTest, TakesRepeatedActionWhenWillListIsExhausted) {TEST864,22958
TEST(ExpectCallTest, TakesDefaultActionWhenWillListIsExhausted) {TEST877,23340
TEST(FunctionMockerMessageTest, ReportsExpectCallLocationForExhausedActions) {TEST907,24454
TEST(FunctionMockerMessageTest,TEST921,24938
TEST(UninterestingCallTest, DoesDefaultAction) {TEST937,25436
TEST(UnexpectedCallTest, DoesDefaultAction) {TEST951,25873
TEST(UnexpectedCallTest, GeneratesFailureForVoidFunction) {TEST974,26625
TEST(UnexpectedCallTest, GeneartesFailureForNonVoidFunction) {TEST1023,28477
TEST(UnexpectedCallTest, RetiredExpectation) {TEST1043,29170
TEST(UnexpectedCallTest, UnmatchedArguments) {TEST1055,29581
TEST(UnexpectedCallTest, UnsatisfiedPrerequisites) {TEST1067,29947
TEST(UndefinedReturnValueTest,TEST1121,31919
TEST(ExcessiveCallTest, DoesDefaultAction) {TEST1136,32481
TEST(ExcessiveCallTest, GeneratesFailureForVoidFunction) {TEST1160,33317
TEST(ExcessiveCallTest, GeneratesFailureForNonVoidFunction) {TEST1173,33838
TEST(InSequenceTest, AllExpectationInScopeAreInSequence) {TEST1189,34298
TEST(InSequenceTest, NestedInSequence) {TEST1208,34597
TEST(InSequenceTest, ExpectationsOutOfScopeAreNotAffected) {TEST1233,34966
TEST(SequenceTest, AnyOrderIsOkByDefault) {TEST1255,35366
TEST(SequenceTest, CallsMustBeInStrictOrderWhenSaidSo1) {TEST1281,35786
TEST(SequenceTest, CallsMustBeInStrictOrderWhenSaidSo2) {TEST1301,36364
class PartialOrderTest : public testing::Test {PartialOrderTest1317,36836
  PartialOrderTest() {PartialOrderTest1319,36896
  MockA a_;a_1334,37419
  MockB b_;b_1335,37431
TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag1) {TEST_F1338,37447
TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag2) {TEST_F1349,37708
TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag3) {TEST_F1359,37967
TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag4) {TEST_F1369,38209
TEST(SequenceTest, Retirement) {TEST1379,38469
TEST(ExpectationTest, ConstrutorsWork) {TEST1394,38733
TEST(ExpectationTest, AssignmentWorks) {TEST1426,39542
TEST(ExpectationSetTest, MemberTypesAreCorrect) {TEST1441,39764
TEST(ExpectationSetTest, ConstructorsWork) {TEST1445,39893
TEST(ExpectationSetTest, AssignmentWorks) {TEST1474,40823
TEST(ExpectationSetTest, InsertionWorks) {TEST1484,41051
TEST(ExpectationSetTest, SizeWorks) {TEST1504,41571
TEST(ExpectationSetTest, IsEnumerable) {TEST1518,41795
TEST(AfterTest, SucceedsWhenPartialOrderIsSatisfied) {TEST1532,42113
TEST(AfterTest, SucceedsWhenTotalOrderIsSatisfied) {TEST1544,42340
TEST(AfterTest, CallsMustBeInStrictOrderWhenSpecifiedSo1) {TEST1560,42799
TEST(AfterTest, CallsMustBeInStrictOrderWhenSpecifiedSo2) {TEST1580,43291
TEST(AfterTest, CallsMustSatisfyPartialOrderWhenSpecifiedSo) {TEST1601,43810
TEST(AfterTest, CallsMustSatisfyPartialOrderWhenSpecifiedSo2) {TEST1621,44388
TEST(AfterTest, CanBeUsedWithInSequence) {TEST1641,44858
TEST(AfterTest, CanBeCalledManyTimes) {TEST1658,45242
TEST(AfterTest, AcceptsUpToFiveArguments) {TEST1672,45569
TEST(AfterTest, AcceptsDuplicatedInput) {TEST1690,46038
TEST(AfterTest, ChangesToExpectationSetHaveNoEffectAfterwards) {TEST1715,46679
TEST(DeletingMockEarlyTest, Success1) {TEST1731,47139
TEST(DeletingMockEarlyTest, Success2) {TEST1756,47791
ACTION_P(Delete, ptr) { delete ptr; }ACTION_P1784,48484
TEST(DeletingMockEarlyTest, CanDeleteSelfInActionReturningVoid) {TEST1790,48568
TEST(DeletingMockEarlyTest, CanDeleteSelfInActionReturningValue) {TEST1796,48765
TEST(DeletingMockEarlyTest, Failure1) {TEST1803,49073
TEST(DeletingMockEarlyTest, Failure2) {TEST1823,49659
class EvenNumberCardinality : public CardinalityInterface {EvenNumberCardinality1842,50195
  bool IsSatisfiedByCallCount(int call_count) const override {IsSatisfiedByCallCount1846,50350
  bool IsSaturatedByCallCount(int /* call_count */) const override {IsSaturatedByCallCount1852,50537
  void DescribeTo(::std::ostream* os) const override {DescribeTo1857,50664
Cardinality EvenNumber() { return Cardinality(new EvenNumberCardinality); }EvenNumber1862,50769
TEST(ExpectationBaseTest,TEST1864,50846
struct Printable {};Printable1882,51409
inline void operator<<(::std::ostream& os, const Printable&) {operator <<1884,51431
struct Unprintable {Unprintable1888,51518
  Unprintable() : value(0) {}Unprintable1889,51539
  int value;value1890,51569
class MockC {MockC1893,51586
  MockC() {}MockC1895,51609
class VerboseFlagPreservingFixture : public testing::Test {VerboseFlagPreservingFixture1906,51905
  VerboseFlagPreservingFixture()VerboseFlagPreservingFixture1908,51977
  ~VerboseFlagPreservingFixture() override {~VerboseFlagPreservingFixture1911,52067
  const std::string saved_verbose_flag_;saved_verbose_flag_1916,52177
TEST(FunctionCallMessageTest,TEST1928,52589
TEST(FunctionCallMessageTest,TEST1942,53187
TEST(FunctionCallMessageTest,TEST1973,54290
class GMockVerboseFlagTest : public VerboseFlagPreservingFixture {GMockVerboseFlagTest2004,55372
  void VerifyOutput(const std::string& output, bool should_print,VerifyOutput2010,55695
  void TestExpectedCall(bool should_print) {TestExpectedCall2029,56406
  void TestUninterestingCallOnNaggyMock(bool should_print) {TestUninterestingCallOnNaggyMock2055,57299
TEST_F(GMockVerboseFlagTest, Info) {TEST_F2091,58629
TEST_F(GMockVerboseFlagTest, Warning) {TEST_F2099,58864
TEST_F(GMockVerboseFlagTest, Error) {TEST_F2107,59127
TEST_F(GMockVerboseFlagTest, InvalidFlagIsTreatedAsWarning) {TEST_F2115,59382
class PrintMeNot {};PrintMeNot2126,59807
void PrintTo(PrintMeNot /* dummy */, ::std::ostream* /* os */) {PrintTo2128,59829
class LogTestHelper {LogTestHelper2133,60027
  LogTestHelper() {}LogTestHelper2135,60058
class GMockLogTest : public VerboseFlagPreservingFixture {GMockLogTest2144,60247
  LogTestHelper helper_;helper_2146,60318
TEST_F(GMockLogTest, DoesNotPrintGoodCallInternallyIfVerbosityIsWarning) {TEST_F2149,60347
TEST_F(GMockLogTest, DoesNotPrintGoodCallInternallyIfVerbosityIsError) {TEST_F2155,60593
TEST_F(GMockLogTest, DoesNotPrintWarningInternallyIfVerbosityIsError) {TEST_F2161,60835
TEST(AllowLeakTest, AllowsLeakingUnusedMockObject) {TEST2169,61112
TEST(AllowLeakTest, CanBeCalledBeforeOnCall) {TEST2174,61214
TEST(AllowLeakTest, CanBeCalledAfterOnCall) {TEST2181,61370
TEST(AllowLeakTest, CanBeCalledBeforeExpectCall) {TEST2187,61512
TEST(AllowLeakTest, CanBeCalledAfterExpectCall) {TEST2194,61652
TEST(AllowLeakTest, WorksWhenBothOnCallAndExpectCallArePresent) {TEST2200,61797
TEST(VerifyAndClearExpectationsTest, NoMethodHasExpectations) {TEST2209,62118
TEST(VerifyAndClearExpectationsTest, SomeMethodsHaveExpectationsAndSucceed) {TEST2222,62554
TEST(VerifyAndClearExpectationsTest, SomeMethodsHaveExpectationsAndFail) {TEST2237,63057
TEST(VerifyAndClearExpectationsTest, AllMethodsHaveExpectations) {TEST2253,63616
TEST(VerifyAndClearExpectationsTest, AMethodHasManyExpectations) {TEST2269,64121
TEST(VerifyAndClearExpectationsTest, CanCallManyTimes) {TEST2287,64716
TEST(VerifyAndClearTest, NoMethodHasDefaultActions) {TEST2306,65252
TEST(VerifyAndClearTest, SomeMethodsHaveDefaultActions) {TEST2315,65564
TEST(VerifyAndClearTest, AllMethodsHaveDefaultActions) {TEST2327,65909
TEST(VerifyAndClearTest, AMethodHasManyDefaultActions) {TEST2343,66401
TEST(VerifyAndClearTest, CanCallManyTimes) {TEST2358,66817
TEST(VerifyAndClearTest, Success) {TEST2372,67175
TEST(VerifyAndClearTest, Failure) {TEST2388,67590
TEST(VerifyAndClearTest, Const) {TEST2407,68159
TEST(VerifyAndClearTest, CanSetDefaultActionsAndExpectationsAfterwards) {TEST2425,68665
TEST(VerifyAndClearTest, DoesNotAffectOtherMockObjects) {TEST2442,69161
TEST(VerifyAndClearTest,TEST2468,69817
TEST(VerifyAndClearTest,TEST2488,70614
TEST(SynchronizationTest, CanCallMockMethodInAction) {TEST2512,71674
TEST(ParameterlessExpectationsTest, CanSetExpectationsWithoutMatchers) {TEST2530,72300
TEST(ParameterlessExpectationsTest, CanSetExpectationsForOverloadedMethods) {TEST2550,72893
struct MockWithConstMethods {MockWithConstMethods2560,73182
TEST(ParameterlessExpectationsTest, CanSetExpectationsForConstMethods) {TEST2566,73312
class MockConstOverload {MockConstOverload2575,73588
TEST(ParameterlessExpectationsTest,TEST2581,73709
int gmock_main(int argc, char** argv) {gmock_main2606,74600

build/_deps/googletest-src/googlemock/test/gmock_leak_test.py,1040
PROGRAM_PATH = gmock_test_utils.GetTestExecutablePath('gmock_leak_test_')PROGRAM_PATH36,1667
TEST_WITH_EXPECT_CALL = [PROGRAM_PATH, '--gtest_filter=*ExpectCall*']TEST_WITH_EXPECT_CALL37,1741
TEST_WITH_ON_CALL = [PROGRAM_PATH, '--gtest_filter=*OnCall*']TEST_WITH_ON_CALL38,1811
TEST_MULTIPLE_LEAKS = [PROGRAM_PATH, '--gtest_filter=*MultipleLeaked*']TEST_MULTIPLE_LEAKS39,1873
environ = gmock_test_utils.environenviron41,1946
SetEnvVar = gmock_test_utils.SetEnvVarSetEnvVar42,1981
class GMockLeakTest(gmock_test_utils.TestCase):GMockLeakTest52,2355
  def testCatchesLeakedMockByDefault(self):testCatchesLeakedMockByDefault54,2404
  def testDoesNotCatchLeakedMockWhenDisabled(self):testDoesNotCatchLeakedMockWhenDisabled64,2755
  def testCatchesLeakedMockWhenEnabled(self):testCatchesLeakedMockWhenEnabled76,3252
  def testCatchesLeakedMockWhenEnabledWithExplictFlagValue(self):testCatchesLeakedMockWhenEnabledWithExplictFlagValue88,3743
  def testCatchesMultipleLeakedMocks(self):testCatchesMultipleLeakedMocks95,4036

build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc,8868
namespace testing {testing56,2238
namespace gmock_function_mocker_test {gmock_function_mocker_test57,2258
class TemplatedCopyable {TemplatedCopyable74,2610
  TemplatedCopyable() {}TemplatedCopyable76,2645
  TemplatedCopyable(const U& other) {}  // NOLINTTemplatedCopyable79,2695
class FooInterface {FooInterface82,2749
  virtual ~FooInterface() {}~FooInterface84,2779
  using fn_ptr = int (*)(bool);fn_ptr113,3895
class MockFoo : public FooInterface {MockFoo144,5049
  MockFoo() {}MockFoo146,5096
class LegacyMockFoo : public FooInterface {LegacyMockFoo215,8149
  LegacyMockFoo() {}LegacyMockFoo217,8202
  int RefQualifiedConstRef() const& override { return 0; }RefQualifiedConstRef274,10871
  int RefQualifiedConstRefRef() const&& override { return 0; }RefQualifiedConstRefRef275,10930
  int RefQualifiedRef() & override { return 0; }RefQualifiedRef276,10993
  int RefQualifiedRefRef() && override { return 0; }RefQualifiedRefRef277,11042
  int RefQualifiedOverloaded() const& override { return 0; }RefQualifiedOverloaded278,11095
  int RefQualifiedOverloaded() const&& override { return 0; }RefQualifiedOverloaded279,11156
  int RefQualifiedOverloaded() & override { return 0; }RefQualifiedOverloaded280,11218
  int RefQualifiedOverloaded() && override { return 0; }RefQualifiedOverloaded281,11274
class FunctionMockerTest : public testing::Test {FunctionMockerTest293,11517
  FunctionMockerTest() : foo_(&mock_foo_) {}FunctionMockerTest295,11579
  FooInterface* const foo_;foo_297,11625
  T mock_foo_;mock_foo_298,11653
using FunctionMockerTestTypes = ::testing::Types<MockFoo, LegacyMockFoo>;FunctionMockerTestTypes300,11671
TYPED_TEST(FunctionMockerTest, MocksVoidFunction) {TYPED_TEST304,11853
TYPED_TEST(FunctionMockerTest, MocksNullaryFunction) {TYPED_TEST310,12033
TYPED_TEST(FunctionMockerTest, MocksUnaryFunction) {TYPED_TEST320,12304
TYPED_TEST(FunctionMockerTest, MocksBinaryFunction) {TYPED_TEST328,12550
TYPED_TEST(FunctionMockerTest, MocksDecimalFunction) {TYPED_TEST335,12753
TYPED_TEST(FunctionMockerTest, MocksFunctionWithNonConstReferenceArgument) {TYPED_TEST344,13095
TYPED_TEST(FunctionMockerTest, MocksFunctionWithConstReferenceArgument) {TYPED_TEST353,13395
TYPED_TEST(FunctionMockerTest, MocksFunctionWithConstArgument) {TYPED_TEST362,13695
TYPED_TEST(FunctionMockerTest, MocksFunctionsOverloadedOnArgumentNumber) {TYPED_TEST369,13947
TYPED_TEST(FunctionMockerTest, MocksFunctionsOverloadedOnArgumentType) {TYPED_TEST380,14386
TYPED_TEST(FunctionMockerTest, MocksFunctionsOverloadedOnConstnessOfThis) {TYPED_TEST391,14856
TYPED_TEST(FunctionMockerTest, MocksReturnTypeWithComma) {TYPED_TEST400,15201
TYPED_TEST(FunctionMockerTest, MocksTypeWithTemplatedCopyCtor) {TYPED_TEST409,15586
TYPED_TEST(FunctionMockerTest, MocksNullaryFunctionWithCallType) {TYPED_TEST417,15898
TYPED_TEST(FunctionMockerTest, MocksUnaryFunctionWithCallType) {TYPED_TEST427,16201
TYPED_TEST(FunctionMockerTest, MocksDecimalFunctionWithCallType) {TYPED_TEST438,16525
TYPED_TEST(FunctionMockerTest, MocksFunctionsConstFunctionWithCallType) {TYPED_TEST447,16919
TYPED_TEST(FunctionMockerTest, MocksReturnTypeWithCommaAndCallType) {TYPED_TEST453,17119
TEST(FunctionMockerTest, RefQualified) {TEST462,17406
class MockB {MockB496,18789
  MockB() {}MockB498,18812
class LegacyMockB {LegacyMockB507,18946
  LegacyMockB() {}LegacyMockB509,18975
class ExpectCallTest : public ::testing::Test {};ExpectCallTest519,19160
using ExpectCallTestTypes = ::testing::Types<MockB, LegacyMockB>;ExpectCallTestTypes520,19210
TYPED_TEST(ExpectCallTest, UnmentionedFunctionCanBeCalledAnyNumberOfTimes) {TYPED_TEST525,19422
class StackInterface {StackInterface543,19673
  virtual ~StackInterface() {}~StackInterface545,19705
class MockStack : public StackInterface<T> {MockStack556,20016
  MockStack() {}MockStack558,20070
class LegacyMockStack : public StackInterface<T> {LegacyMockStack575,20614
  LegacyMockStack() {}LegacyMockStack577,20674
class TemplateMockTest : public ::testing::Test {};TemplateMockTest594,21236
using TemplateMockTestTypes =TemplateMockTestTypes595,21288
TYPED_TEST(TemplateMockTest, Works) {TYPED_TEST600,21473
TYPED_TEST(TemplateMockTest, MethodWithCommaInReturnTypeWorks) {TYPED_TEST620,21948
class StackInterfaceWithCallType {StackInterfaceWithCallType635,22400
  virtual ~StackInterfaceWithCallType() {}~StackInterfaceWithCallType637,22444
class MockStackWithCallType : public StackInterfaceWithCallType<T> {MockStackWithCallType648,22787
  MockStackWithCallType() {}MockStackWithCallType650,22865
class LegacyMockStackWithCallType : public StackInterfaceWithCallType<T> {LegacyMockStackWithCallType665,23421
  LegacyMockStackWithCallType() {}LegacyMockStackWithCallType667,23505
class TemplateMockTestWithCallType : public ::testing::Test {};TemplateMockTestWithCallType681,24039
using TemplateMockTestWithCallTypeTypes =TemplateMockTestWithCallTypeTypes682,24103
TYPED_TEST(TemplateMockTestWithCallType, Works) {TYPED_TEST689,24400
#define MY_MOCK_METHODS1_ MY_MOCK_METHODS1_710,24915
#define LEGACY_MY_MOCK_METHODS1_ LEGACY_MY_MOCK_METHODS1_715,25115
class MockOverloadedOnArgNumber {MockOverloadedOnArgNumber720,25308
  MockOverloadedOnArgNumber() {}MockOverloadedOnArgNumber722,25351
class LegacyMockOverloadedOnArgNumber {LegacyMockOverloadedOnArgNumber732,25582
  LegacyMockOverloadedOnArgNumber() {}LegacyMockOverloadedOnArgNumber734,25631
class OverloadedMockMethodTest : public ::testing::Test {};OverloadedMockMethodTest746,25928
using OverloadedMockMethodTestTypes =OverloadedMockMethodTestTypes747,25988
TYPED_TEST(OverloadedMockMethodTest, CanOverloadOnArgNumberInMacroBody) {TYPED_TEST752,26205
#define MY_MOCK_METHODS2_ MY_MOCK_METHODS2_763,26555
class MockOverloadedOnConstness {MockOverloadedOnConstness767,26691
  MockOverloadedOnConstness() {}MockOverloadedOnConstness769,26734
TEST(MockMethodOverloadedMockMethodTest, CanOverloadOnConstnessInMacroBody) {TEST779,26965
TEST(MockMethodMockFunctionTest, WorksForVoidNullary) {TEST789,27334
TEST(MockMethodMockFunctionTest, WorksForNonVoidNullary) {TEST795,27463
TEST(MockMethodMockFunctionTest, WorksForVoidUnary) {TEST802,27676
TEST(MockMethodMockFunctionTest, WorksForNonVoidBinary) {TEST808,27808
TEST(MockMethodMockFunctionTest, WorksFor10Arguments) {TEST817,28154
TEST(MockMethodMockFunctionTest, AsStdFunction) {TEST828,28593
  auto call = [](const std::function<int(int)>& f, int i) { return f(i); };__anon86e0e6c90102830,28673
TEST(MockMethodMockFunctionTest, AsStdFunctionReturnsReference) {TEST837,28946
TEST(MockMethodMockFunctionTest, AsStdFunctionWithReferenceParameter) {TEST847,29206
  auto call = [](const std::function<int(int&)>& f, int& i) { return f(i); };__anon86e0e6c90202849,29309
namespace {__anon86e0e6c90311855,29501
static constexpr bool IsMockFunctionTemplateArgumentDeducedTo(IsMockFunctionTemplateArgumentDeducedTo858,29555
class MockMethodMockFunctionSignatureTest : public Test {};MockMethodMockFunctionSignatureTest866,29743
using MockMethodMockFunctionSignatureTypes =MockMethodMockFunctionSignatureTypes868,29804
TYPED_TEST(MockMethodMockFunctionSignatureTest,TYPED_TEST874,30092
  using Argument = TypeParam;Argument876,30207
TYPED_TEST(MockMethodMockFunctionSignatureTest,TYPED_TEST881,30342
  using Argument = std::function<TypeParam>;Argument883,30456
TYPED_TEST(TYPED_TEST888,30606
  using ForRawSignature = decltype(&MockFunction<TypeParam>::Call);ForRawSignature891,30736
  using ForStdFunction =ForStdFunction892,30804
struct AlternateCallable {};AlternateCallable898,30988
TYPED_TEST(MockMethodMockFunctionSignatureTest,TYPED_TEST900,31018
  using Argument = AlternateCallable<TypeParam>;Argument902,31138
TYPED_TEST(MockMethodMockFunctionSignatureTest,TYPED_TEST907,31292
  using ForRawSignature = decltype(&MockFunction<TypeParam>::Call);ForRawSignature909,31415
  using ForStdFunction =ForStdFunction910,31483
struct MockMethodSizes0 {MockMethodSizes0915,31645
struct MockMethodSizes1 {MockMethodSizes1918,31705
struct MockMethodSizes2 {MockMethodSizes2921,31768
struct MockMethodSizes3 {MockMethodSizes3924,31836
struct MockMethodSizes4 {MockMethodSizes4927,31909
struct LegacyMockMethodSizes0 {LegacyMockMethodSizes0931,31988
struct LegacyMockMethodSizes1 {LegacyMockMethodSizes1934,32053
struct LegacyMockMethodSizes2 {LegacyMockMethodSizes2937,32121
struct LegacyMockMethodSizes3 {LegacyMockMethodSizes3940,32194
struct LegacyMockMethodSizes4 {LegacyMockMethodSizes4943,32272
TEST(MockMethodMockFunctionTest, MockMethodSizeOverhead) {TEST947,32356
struct MockMethodNoexceptSpecifier {MockMethodNoexceptSpecifier964,33137
TEST(MockMethodMockFunctionTest, NoexceptSpecifierPreserved) {TEST976,33737

build/_deps/googletest-src/googlemock/test/gmock_link2_test.cc,44
#define LinkTest LinkTest2LinkTest36,1813

build/_deps/googletest-src/googlemock/test/gmock_output_test.py,1275
GENGOLDEN_FLAG = '--gengolden'GENGOLDEN_FLAG50,2014
PROGRAM_PATH = gmock_test_utils.GetTestExecutablePath('gmock_output_test_')PROGRAM_PATH52,2046
COMMAND = [PROGRAM_PATH, '--gtest_stack_trace_depth=0', '--gtest_print_time=0']COMMAND53,2122
GOLDEN_NAME = 'gmock_output_test_golden.txt'GOLDEN_NAME54,2202
GOLDEN_PATH = os.path.join(gmock_test_utils.GetSourceDir(), GOLDEN_NAME)GOLDEN_PATH55,2247
def ToUnixLineEnding(s):ToUnixLineEnding58,2322
def RemoveReportHeaderAndFooter(output):RemoveReportHeaderAndFooter64,2475
def RemoveLocations(output):RemoveLocations75,2890
def NormalizeErrorMarker(output):NormalizeErrorMarker91,3323
def RemoveMemoryAddresses(output):RemoveMemoryAddresses97,3491
def RemoveTestNamesOfLeakedMocks(output):RemoveTestNamesOfLeakedMocks103,3625
def GetLeakyTests(output):GetLeakyTests109,3799
def GetNormalizedOutputAndLeakyTests(output):GetNormalizedOutputAndLeakyTests118,4116
def GetShellCommandOutput(cmd):GetShellCommandOutput137,4634
def GetNormalizedCommandOutputAndLeakyTests(cmd):GetNormalizedCommandOutputAndLeakyTests143,4817
class GMockOutputTest(gmock_test_utils.TestCase):GMockOutputTest155,5153
  def testOutput(self):testOutput157,5204
    golden_file = open(GOLDEN_PATH, 'wb')golden_file176,5921

build/_deps/googletest-src/googlemock/test/gmock-matchers-arithmetic_test.cc,10292
namespace testing {testing44,1967
namespace gmock_matchers_test {gmock_matchers_test45,1987
namespace {__anon46500f63011146,2019
typedef ::std::tuple<long, int> Tuple2;  // NOLINTTuple248,2032
TEST(Eq2Test, MatchesEqualArguments) {TEST52,2167
TEST(Eq2Test, CanDescribeSelf) {TEST59,2373
TEST(Ge2Test, MatchesGreaterThanOrEqualArguments) {TEST66,2574
TEST(Ge2Test, CanDescribeSelf) {TEST74,2834
TEST(Gt2Test, MatchesGreaterThanArguments) {TEST81,3057
TEST(Gt2Test, CanDescribeSelf) {TEST89,3311
TEST(Le2Test, MatchesLessThanOrEqualArguments) {TEST96,3534
TEST(Le2Test, CanDescribeSelf) {TEST104,3791
TEST(Lt2Test, MatchesLessThanArguments) {TEST111,4014
TEST(Lt2Test, CanDescribeSelf) {TEST119,4265
TEST(Ne2Test, MatchesUnequalArguments) {TEST126,4488
TEST(Ne2Test, CanDescribeSelf) {TEST134,4737
TEST(PairMatchBaseTest, WorksWithMoveOnly) {TEST139,4857
  using Pointers = std::tuple<std::unique_ptr<int>, std::unique_ptr<int>>;Pointers140,4902
TEST(IsNan, FloatMatchesNan) {TEST149,5226
TEST(IsNan, DoubleMatchesNan) {TEST171,5910
TEST(IsNan, LongDoubleMatchesNan) {TEST193,6605
TEST(IsNan, NotMatchesNan) {TEST215,7322
TEST(IsNan, CanDescribeSelf) {TEST233,7959
TEST(IsNan, CanDescribeSelfWithNot) {TEST245,8260
TEST(FloatEq2Test, MatchesEqualArguments) {TEST258,8638
  typedef ::std::tuple<float, float> Tpl;Tpl259,8682
TEST(FloatEq2Test, CanDescribeSelf) {TEST267,8959
TEST(NanSensitiveFloatEqTest, MatchesEqualArgumentsWithNaN) {TEST274,9236
  typedef ::std::tuple<float, float> Tpl;Tpl275,9298
TEST(NanSensitiveFloatEqTest, CanDescribeSelfWithNaNs) {TEST286,9841
TEST(DoubleEq2Test, MatchesEqualArguments) {TEST293,10127
  typedef ::std::tuple<double, double> Tpl;Tpl294,10172
TEST(DoubleEq2Test, CanDescribeSelf) {TEST302,10445
TEST(NanSensitiveDoubleEqTest, MatchesEqualArgumentsWithNaN) {TEST309,10728
  typedef ::std::tuple<double, double> Tpl;Tpl310,10791
TEST(NanSensitiveDoubleEqTest, CanDescribeSelfWithNaNs) {TEST321,11330
TEST(FloatNear2Test, MatchesEqualArguments) {TEST328,11635
  typedef ::std::tuple<float, float> Tpl;Tpl329,11681
TEST(FloatNear2Test, CanDescribeSelf) {TEST337,11952
TEST(NanSensitiveFloatNearTest, MatchesNearbyArgumentsWithNaN) {TEST344,12241
  typedef ::std::tuple<float, float> Tpl;Tpl345,12306
TEST(NanSensitiveFloatNearTest, CanDescribeSelfWithNaNs) {TEST357,12900
TEST(DoubleNear2Test, MatchesEqualArguments) {TEST364,13210
  typedef ::std::tuple<double, double> Tpl;Tpl365,13257
TEST(DoubleNear2Test, CanDescribeSelf) {TEST373,13525
TEST(NanSensitiveDoubleNearTest, MatchesNearbyArgumentsWithNaN) {TEST380,13819
  typedef ::std::tuple<double, double> Tpl;Tpl381,13885
TEST(NanSensitiveDoubleNearTest, CanDescribeSelfWithNaNs) {TEST393,14487
TEST(NotTest, NegatesMatcher) {TEST399,14746
TEST(NotTest, CanDescribeSelf) {TEST407,14924
TEST(NotTest, NotMatcherSafelyCastsMonomorphicMatchers) {TEST413,15108
void AllOfMatches(int num, const Matcher<int>& m) {AllOfMatches423,15444
TEST(AllOfTest, MatchesWhenAllMatch) {TEST436,15803
TEST(AllOfTest, CanDescribeSelf) {TEST489,17990
TEST(AllOfTest, CanDescribeNegation) {TEST513,18815
TEST(AllOfTest, AllOfMatcherSafelyCastsMonomorphicMatchers) {TEST543,19942
TEST_P(AllOfTestP, ExplainsResult) {TEST_P557,20520
static void AnyOfMatches(int num, const Matcher<int>& m) {AnyOfMatches602,22208
static void AnyOfStringMatches(int num, const Matcher<std::string>& m) {AnyOfStringMatches611,22435
TEST(AnyOfTest, MatchesWhenAnyMatches) {TEST625,22874
TEST(AnyOfTest, VariadicMatchesWhenAnyMatches) {TEST667,24255
TEST(ConditionalTest, MatchesFirstIfCondition) {TEST686,25245
TEST(ConditionalTest, MatchesSecondIfCondition) {TEST700,25757
TEST(AnyOfTest, CanDescribeSelf) {TEST715,26327
TEST(AnyOfTest, CanDescribeNegation) {TEST736,26958
TEST(AnyOfTest, AnyOfMatcherSafelyCastsMonomorphicMatchers) {TEST759,27705
TEST_P(AnyOfTestP, ExplainsResult) {TEST_P773,28285
int IsPositive(double x) { return x > 0 ? 1 : 0; }IsPositive824,30232
class IsGreaterThan {IsGreaterThan828,30363
  explicit IsGreaterThan(int threshold) : threshold_(threshold) {}IsGreaterThan830,30394
  bool operator()(int n) const { return n > threshold_; }operator ()832,30462
  int threshold_;threshold_835,30531
const int foo = 0;foo839,30577
bool ReferencesFooAndIsZero(const int& n) { return (&n == &foo) && (n == 0); }ReferencesFooAndIsZero843,30696
TEST(TrulyTest, MatchesWhatSatisfiesThePredicate) {TEST847,30854
TEST(TrulyTest, CanBeUsedWithFunctor) {TEST854,31064
class ConvertibleToBool {ConvertibleToBool861,31263
  explicit ConvertibleToBool(int number) : number_(number) {}ConvertibleToBool863,31298
  operator bool() const { return number_ != 0; }operator bool864,31360
  int number_;number_867,31420
ConvertibleToBool IsNotZero(int number) { return ConvertibleToBool(number); }IsNotZero870,31439
TEST(TrulyTest, PredicateCanReturnAClassConvertibleToBool) {TEST875,31666
TEST(TrulyTest, CanDescribeSelf) {TEST882,31887
TEST(TrulyTest, WorksForByRefArguments) {TEST889,32115
TEST(TrulyTest, ExplainsFailures) {TEST897,32363
TEST(MatchesTest, IsSatisfiedByWhatMatchesTheMatcher) {TEST905,32666
TEST(MatchesTest, WorksOnByRefArguments) {TEST912,32882
TEST(MatchesTest, WorksWithMatcherOnNonRefType) {TEST920,33108
TEST(ValueTest, WorksWithPolymorphicMatcher) {TEST929,33424
TEST(ValueTest, WorksWithMonomorphicMatcher) {TEST934,33553
TEST(AllArgsTest, WorksForTuple) {TEST945,33835
TEST(AllArgsTest, WorksForNonTuple) {TEST950,33986
class AllArgsHelper {AllArgsHelper955,34105
  AllArgsHelper() {}AllArgsHelper957,34136
TEST(AllArgsTest, WorksInWithClause) {TEST966,34324
class OptionalMatchersHelper {OptionalMatchersHelper976,34662
  OptionalMatchersHelper() {}OptionalMatchersHelper978,34702
TEST(AllArgsTest, WorksWithoutMatchers) {TEST994,35095
class FloatingPointTest : public testing::Test {FloatingPointTest1017,35808
  typedef testing::internal::FloatingPoint<RawType> Floating;Floating1019,35869
  typedef typename Floating::Bits Bits;Bits1020,35931
  FloatingPointTest()FloatingPointTest1022,35972
  void TestSize() { EXPECT_EQ(sizeof(RawType), sizeof(Bits)); }TestSize1044,37091
  void TestMatches(TestMatches1048,37293
  const Bits max_ulps_;max_ulps_1094,38919
  const Bits zero_bits_;      // The bits that represent 0.0.zero_bits_1096,38944
  const Bits one_bits_;       // The bits that represent 1.0.one_bits_1097,39006
  const Bits infinity_bits_;  // The bits that represent +infinity.infinity_bits_1098,39068
  const RawType close_to_positive_zero_;close_to_positive_zero_1101,39169
  const RawType close_to_negative_zero_;close_to_negative_zero_1102,39210
  const RawType further_from_negative_zero_;further_from_negative_zero_1103,39251
  const RawType close_to_one_;close_to_one_1106,39329
  const RawType further_from_one_;further_from_one_1107,39360
  const RawType infinity_;infinity_1110,39434
  const RawType close_to_infinity_;close_to_infinity_1111,39461
  const RawType further_from_infinity_;further_from_infinity_1112,39497
  const RawType max_;max_1115,39592
  const RawType nan1_;nan1_1118,39631
  const RawType nan2_;nan2_1119,39654
class FloatingPointNearTest : public FloatingPointTest<RawType> {FloatingPointNearTest1124,39763
  typedef FloatingPointTest<RawType> ParentType;ParentType1126,39841
  void TestNearMatches(testing::internal::FloatingEqMatcher<RawType> (TestNearMatches1130,40049
typedef FloatingPointTest<float> FloatTest;FloatTest1206,43102
TEST_F(FloatTest, FloatEqApproximatelyMatchesFloats) { TestMatches(&FloatEq); }TEST_F1208,43147
TEST_F(FloatTest, NanSensitiveFloatEqApproximatelyMatchesFloats) {TEST_F1210,43228
TEST_F(FloatTest, FloatEqCannotMatchNaN) {TEST_F1214,43335
TEST_F(FloatTest, NanSensitiveFloatEqCanMatchNaN) {TEST_F1222,43550
TEST_F(FloatTest, FloatEqCanDescribeSelf) {TEST_F1230,43793
TEST_F(FloatTest, NanSensitiveFloatEqCanDescribeSelf) {TEST_F1244,44270
typedef FloatingPointNearTest<float> FloatNearTest;FloatNearTest1260,44883
TEST_F(FloatNearTest, FloatNearMatches) { TestNearMatches(&FloatNear); }TEST_F1262,44936
TEST_F(FloatNearTest, NanSensitiveFloatNearApproximatelyMatchesFloats) {TEST_F1264,45010
TEST_F(FloatNearTest, FloatNearCanDescribeSelf) {TEST_F1268,45129
TEST_F(FloatNearTest, NanSensitiveFloatNearCanDescribeSelf) {TEST_F1284,45753
TEST_F(FloatNearTest, FloatNearCannotMatchNaN) {TEST_F1300,46417
TEST_F(FloatNearTest, NanSensitiveFloatNearCanMatchNaN) {TEST_F1308,46660
typedef FloatingPointTest<double> DoubleTest;DoubleTest1317,46973
TEST_F(DoubleTest, DoubleEqApproximatelyMatchesDoubles) {TEST_F1319,47020
TEST_F(DoubleTest, NanSensitiveDoubleEqApproximatelyMatchesDoubles) {TEST_F1323,47107
TEST_F(DoubleTest, DoubleEqCannotMatchNaN) {TEST_F1327,47218
TEST_F(DoubleTest, NanSensitiveDoubleEqCanMatchNaN) {TEST_F1335,47438
TEST_F(DoubleTest, DoubleEqCanDescribeSelf) {TEST_F1343,47686
TEST_F(DoubleTest, NanSensitiveDoubleEqCanDescribeSelf) {TEST_F1357,48169
typedef FloatingPointNearTest<double> DoubleNearTest;DoubleNearTest1373,48788
TEST_F(DoubleNearTest, DoubleNearMatches) { TestNearMatches(&DoubleNear); }TEST_F1375,48843
TEST_F(DoubleNearTest, NanSensitiveDoubleNearApproximatelyMatchesDoubles) {TEST_F1377,48920
TEST_F(DoubleNearTest, DoubleNearCanDescribeSelf) {TEST_F1381,49043
TEST_F(DoubleNearTest, ExplainsResultWhenMatchFails) {TEST_F1397,49671
TEST_F(DoubleNearTest, NanSensitiveDoubleNearCanDescribeSelf) {TEST_F1411,50310
TEST_F(DoubleNearTest, DoubleNearCannotMatchNaN) {TEST_F1427,50977
TEST_F(DoubleNearTest, NanSensitiveDoubleNearCanMatchNaN) {TEST_F1435,51224
TEST(NotTest, WorksOnMoveOnlyType) {TEST1443,51487
TEST(AllOfTest, HugeMatcher) {TEST1449,51638
TEST(AnyOfTest, HugeMatcher) {TEST1456,51938
namespace adl_test {adl_test1463,52238
bool AllOf(const T1& /*t1*/, const T2& /*t2*/) {AllOf1478,52768
TEST(AllOfTest, DoesNotCallAllOfUnqualified) {TEST1482,52835
bool AnyOf(const T1&, const T2&) {AnyOf1488,53020
TEST(AnyOfTest, DoesNotCallAnyOfUnqualified) {TEST1492,53073
TEST(AllOfTest, WorksOnMoveOnlyType) {TEST1499,53248
TEST(AnyOfTest, WorksOnMoveOnlyType) {TEST1505,53479

build/_deps/googletest-src/googlemock/test/gmock_test.cc,974
void TestInitGoogleMock(const Char* (&argv)[M], const Char* (&new_argv)[N],TestInitGoogleMock48,2038
TEST(InitGoogleMockTest, ParsesInvalidCommandLine) {TEST64,2612
TEST(InitGoogleMockTest, ParsesEmptyCommandLine) {TEST72,2805
TEST(InitGoogleMockTest, ParsesSingleFlag) {TEST80,3018
TEST(InitGoogleMockTest, ParsesMultipleFlags) {TEST88,3232
TEST(InitGoogleMockTest, ParsesUnrecognizedFlag) {TEST101,3745
TEST(InitGoogleMockTest, ParsesGoogleMockFlagAndUnrecognizedFlag) {TEST109,4008
TEST(WideInitGoogleMockTest, ParsesInvalidCommandLine) {TEST118,4321
TEST(WideInitGoogleMockTest, ParsesEmptyCommandLine) {TEST126,4524
TEST(WideInitGoogleMockTest, ParsesSingleFlag) {TEST134,4749
TEST(WideInitGoogleMockTest, ParsesMultipleFlags) {TEST142,4976
TEST(WideInitGoogleMockTest, ParsesUnrecognizedFlag) {TEST155,5493
TEST(WideInitGoogleMockTest, ParsesGoogleMockFlagAndUnrecognizedFlag) {TEST163,5770
TEST(FlagTest, IsAccessibleInCode) {TEST175,6220

build/_deps/googletest-src/googlemock/test/gmock_ex_test.cc,298
namespace {__anon75a6fca4011136,1699
class NonDefaultConstructible {NonDefaultConstructible43,1839
  explicit NonDefaultConstructible(int /* dummy */) {}NonDefaultConstructible45,1880
class MockFoo {MockFoo48,1939
TEST(DefaultValueTest, ThrowsRuntimeErrorWhenNoDefaultValue) {TEST55,2164

build/_deps/googletest-src/googlemock/test/gmock-cardinalities_test.cc,1918
namespace {__anon342d70d1011138,1747
class MockFoo {MockFoo51,2032
  MockFoo() {}MockFoo53,2057
TEST(CardinalityTest, IsDefaultConstructable) { Cardinality c; }TEST62,2271
TEST(CardinalityTest, IsCopyable) {TEST65,2385
TEST(CardinalityTest, IsOverSaturatedByCallCountWorks) {TEST79,2808
TEST(CardinalityTest, CanDescribeActualCallCount) {TEST88,3140
TEST(AnyNumber, Works) {TEST107,3664
TEST(AnyNumberTest, HasCorrectBounds) {TEST123,4115
TEST(AtLeastTest, OnNegativeNumber) {TEST131,4311
TEST(AtLeastTest, OnZero) {TEST139,4478
TEST(AtLeastTest, OnPositiveNumber) {TEST152,4834
TEST(AtLeastTest, HasCorrectBounds) {TEST176,5525
TEST(AtMostTest, OnNegativeNumber) {TEST184,5717
TEST(AtMostTest, OnZero) {TEST192,5882
TEST(AtMostTest, OnPositiveNumber) {TEST205,6228
TEST(AtMostTest, HasCorrectBounds) {TEST229,6930
TEST(BetweenTest, OnNegativeStart) {TEST237,7118
TEST(BetweenTest, OnNegativeEnd) {TEST245,7307
TEST(BetweenTest, OnStartBiggerThanEnd) {TEST253,7494
TEST(BetweenTest, OnZeroStartAndZeroEnd) {TEST262,7709
TEST(BetweenTest, OnZeroStartAndNonZeroEnd) {TEST276,8076
TEST(BetweenTest, OnSameStartAndEnd) {TEST293,8544
TEST(BetweenTest, OnDifferentStartAndEnd) {TEST310,9000
TEST(BetweenTest, HasCorrectBounds) {TEST330,9565
TEST(ExactlyTest, OnNegativeNumber) {TEST338,9755
TEST(ExactlyTest, OnZero) {TEST346,9922
TEST(ExactlyTest, OnPositiveNumber) {TEST359,10270
TEST(ExactlyTest, HasCorrectBounds) {TEST380,10863
class EvenCardinality : public CardinalityInterface {EvenCardinality389,11152
  bool IsSatisfiedByCallCount(int call_count) const override {IsSatisfiedByCallCount393,11301
  bool IsSaturatedByCallCount(int /* call_count */) const override {IsSaturatedByCallCount399,11490
  void DescribeTo(::std::ostream* ss) const override {DescribeTo404,11617
TEST(MakeCardinalityTest, ConstructsCardinalityFromInterface) {TEST409,11722

build/_deps/googletest-src/googlemock/test/gmock-internal-utils_test.cc,5560
#define GTEST_IMPLEMENTATION_ GTEST_IMPLEMENTATION_55,2241
namespace proto2 {proto263,2414
namespace testing {testing67,2472
namespace internal {internal68,2492
namespace {__anonc9d47e90011170,2514
TEST(JoinAsKeyValueTupleTest, JoinsEmptyTuple) {TEST72,2527
TEST(JoinAsKeyValueTupleTest, JoinsOneTuple) {TEST76,2632
TEST(JoinAsKeyValueTupleTest, JoinsTwoTuple) {TEST80,2740
TEST(JoinAsKeyValueTupleTest, JoinsTenTuple) {TEST84,2864
TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContainsNoWord) {TEST91,3157
TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContainsDigits) {TEST97,3386
TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContainsCamelCaseWords) {TEST104,3686
TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContains_SeparatedWords) {TEST112,4100
TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameIsMixture) {TEST119,4448
TEST(GetRawPointerTest, WorksForSmartPointers) {TEST125,4691
TEST(GetRawPointerTest, WorksForRawPointers) {TEST134,5029
TEST(GetRawPointerTest, WorksForStdReferenceWrapper) {TEST141,5192
class Base {};Base149,5375
class Derived : public Base {};Derived150,5390
TEST(KindOfTest, Bool) {TEST152,5423
TEST(KindOfTest, Integer) {TEST156,5504
TEST(KindOfTest, FloatingPoint) {TEST176,6634
TEST(KindOfTest, Other) {TEST182,6878
TEST(LosslessArithmeticConvertibleTest, BoolToBool) {TEST190,7122
TEST(LosslessArithmeticConvertibleTest, BoolToInteger) {TEST194,7246
TEST(LosslessArithmeticConvertibleTest, BoolToFloatingPoint) {TEST201,7533
TEST(LosslessArithmeticConvertibleTest, IntegerToBool) {TEST206,7736
TEST(LosslessArithmeticConvertibleTest, IntegerToInteger) {TEST211,7940
TEST(LosslessArithmeticConvertibleTest, IntegerToFloatingPoint) {TEST245,9554
TEST(LosslessArithmeticConvertibleTest, FloatingPointToBool) {TEST254,9980
TEST(LosslessArithmeticConvertibleTest, FloatingPointToInteger) {TEST259,10185
TEST(LosslessArithmeticConvertibleTest, FloatingPointToFloatingPoint) {TEST265,10481
TEST(TupleMatchesTest, WorksForSize0) {TEST290,11551
TEST(TupleMatchesTest, WorksForSize1) {TEST297,11690
TEST(TupleMatchesTest, WorksForSize2) {TEST305,11917
TEST(TupleMatchesTest, WorksForSize5) {TEST316,12322
TEST(AssertTest, SucceedsOnTrue) {TEST331,12919
TEST(AssertTest, FailsFatallyOnFalse) {TEST337,13142
TEST(ExpectTest, SucceedsOnTrue) {TEST345,13402
TEST(ExpectTest, FailsNonfatallyOnFalse) {TEST351,13629
class LogIsVisibleTest : public ::testing::Test {LogIsVisibleTest367,13975
  void SetUp() override { original_verbose_ = GMOCK_FLAG_GET(verbose); }SetUp369,14037
  void TearDown() override { GMOCK_FLAG_SET(verbose, original_verbose_); }TearDown371,14111
  std::string original_verbose_;original_verbose_373,14187
TEST_F(LogIsVisibleTest, AlwaysReturnsTrueIfVerbosityIsInfo) {TEST_F376,14224
TEST_F(LogIsVisibleTest, AlwaysReturnsFalseIfVerbosityIsError) {TEST_F382,14408
TEST_F(LogIsVisibleTest, WorksWhenVerbosityIsWarning) {TEST_F388,14597
void TestLogWithSeverity(const std::string& verbosity, LogSeverity severity,TestLogWithSeverity400,14934
TEST(LogTest, NoStackTraceWhenStackFramesToSkipIsNegative) {TEST420,15694
struct MockStackTraceGetter : testing::internal::OsStackTraceGetterInterface {MockStackTraceGetter429,16012
  std::string CurrentStackTrace(int max_depth, int skip_count) override {CurrentStackTrace430,16091
  void UponLeavingGTest() override {}UponLeavingGTest434,16266
TEST(LogTest, NoSkippingStackFrameInOptMode) {TEST439,16396
TEST(LogTest, AllLogsArePrintedWhenVerbosityIsInfo) {TEST478,17785
TEST(LogTest, OnlyWarningsArePrintedWhenVerbosityIsWarning) {TEST485,18049
TEST(LogTest, NoLogsArePrintedWhenVerbosityIsError) {TEST492,18320
TEST(LogTest, OnlyWarningsArePrintedWhenVerbosityIsInvalid) {TEST499,18586
std::string GrabOutput(void (*logger)(), const char* verbosity) {GrabOutput506,18841
class DummyMock {DummyMock515,19106
void ExpectCallLogger() {ExpectCallLogger521,19221
TEST(ExpectCallTest, LogsWhenVerbosityIsInfo) {TEST528,19404
TEST(ExpectCallTest, DoesNotLogWhenVerbosityIsWarning) {TEST535,19682
TEST(ExpectCallTest, DoesNotLogWhenVerbosityIsError) {TEST541,19910
void OnCallLogger() {OnCallLogger545,20043
TEST(OnCallTest, LogsWhenVerbosityIsInfo) {TEST551,20193
TEST(OnCallTest, DoesNotLogWhenVerbosityIsWarning) {TEST558,20455
TEST(OnCallTest, DoesNotLogWhenVerbosityIsError) {TEST564,20671
void OnCallAnyArgumentLogger() {OnCallAnyArgumentLogger568,20796
TEST(OnCallTest, LogsAnythingArgument) {TEST574,20938
TEST(StlContainerViewTest, WorksForStlContainer) {TEST583,21191
  typedef std::vector<char> Chars;Chars589,21477
TEST(StlContainerViewTest, WorksForStaticNativeArray) {TEST599,21711
TEST(StlContainerViewTest, WorksForDynamicNativeArray) {TEST625,22601
TEST(FunctionTest, Nullary) {TEST658,23648
  typedef Function<int()> F;  // NOLINTF659,23678
TEST(FunctionTest, Unary) {TEST668,24103
  typedef Function<int(bool)> F;  // NOLINTF669,24131
TEST(FunctionTest, Binary) {TEST681,24724
  typedef Function<int(bool, const long&)> F;  // NOLINTF682,24753
TEST(FunctionTest, LongArgumentList) {TEST698,25585
  typedef Function<char(bool, int, char*, int&, const long&)> F;  // NOLINTF699,25624
TEST(Base64Unescape, InvalidString) {TEST723,26767
TEST(Base64Unescape, ShortString) {TEST728,26890
TEST(Base64Unescape, ShortStringWithPadding) {TEST734,27057
TEST(Base64Unescape, ShortStringWithoutPadding) {TEST740,27234
TEST(Base64Unescape, LongStringWithWhiteSpaces) {TEST746,27413

build/_deps/googletest-src/googlemock/test/gmock-matchers-containers_test.cc,24140
namespace testing {testing44,1967
namespace gmock_matchers_test {gmock_matchers_test45,1987
namespace {__anon1f00856f011146,2019
std::vector<std::unique_ptr<int>> MakeUniquePtrs(const std::vector<int>& ints) {MakeUniquePtrs48,2032
std::string OfType(const std::string& type_name) {OfType54,2237
TEST(ContainsTest, WorksWithMoveOnly) {TEST62,2414
TEST(ElementsAreTest, HugeMatcher) {TEST71,2681
TEST(ElementsAreTest, HugeMatcherStr) {TEST80,3021
TEST(ElementsAreTest, HugeMatcherUnordered) {TEST89,3383
TEST(MatcherAssertionTest, WorksWhenMatcherIsSatisfied) {TEST99,3790
TEST(MatcherAssertionTest, WorksWhenMatcherIsNotSatisfied) {TEST108,4149
TEST(MatcherAssertionTest, WorksForByRefArguments) {TEST129,4968
TEST(MatcherAssertionTest, WorksForMonomorphicMatcher) {TEST145,5597
TEST(PointeeTest, RawPointer) {TEST164,6374
TEST(PointeeTest, RawPointerToConst) {TEST174,6572
TEST(PointeeTest, ReferenceToConstRawPointer) {TEST184,6789
TEST(PointeeTest, ReferenceToNonConstRawPointer) {TEST194,7010
TEST(PointeeTest, SmartPointer) {TEST206,7261
TEST(PointeeTest, SmartPointerToConst) {TEST213,7424
TEST(PointerTest, RawPointer) {TEST223,7763
TEST(PointerTest, RawPointerToConst) {TEST234,7972
TEST(PointerTest, SmartPointer) {TEST245,8194
TEST(PointerTest, SmartPointerToConst) {TEST253,8386
class ConstPropagatingPtr {ConstPropagatingPtr267,8866
  typedef T element_type;element_type269,8903
  ConstPropagatingPtr() : val_() {}ConstPropagatingPtr271,8930
  explicit ConstPropagatingPtr(T* t) : val_(t) {}ConstPropagatingPtr272,8966
  ConstPropagatingPtr(const ConstPropagatingPtr& other) : val_(other.val_) {}ConstPropagatingPtr273,9016
  T* get() { return val_; }get275,9095
  T& operator*() { return *val_; }operator *276,9123
  const T* get() const { return val_; }get278,9233
  const T& operator*() const { return *val_; }operator *279,9273
  T* val_;val_282,9331
TEST(PointeeTest, WorksWithConstPropagatingPointers) {TEST287,9394
TEST(PointeeTest, NeverMatchesNull) {TEST299,9768
TEST(PointeeTest, MatchesAgainstAValue) {TEST305,9963
TEST(PointeeTest, CanDescribeSelf) {TEST315,10167
TEST_P(PointeeTestP, CanExplainMatchResult) {TEST_P321,10383
TEST(PointeeTest, AlwaysExplainsPointee) {TEST332,10809
class Uncopyable {Uncopyable339,10998
  Uncopyable() : value_(-1) {}Uncopyable341,11026
  explicit Uncopyable(int a_value) : value_(a_value) {}Uncopyable342,11057
  int value() const { return value_; }value344,11114
  void set_value(int i) { value_ = i; }set_value345,11153
  int value_;value_348,11204
bool ValueIsPositive(const Uncopyable& x) { return x.value() > 0; }ValueIsPositive354,11371
struct AStruct {AStruct361,11608
  AStruct() : x(0), y(1.0), z(5), p(nullptr) {}AStruct362,11625
  AStruct(const AStruct& rhs)AStruct363,11673
  int x;           // A non-const field.x366,11762
  const double y;  // A const field.y367,11803
  Uncopyable z;    // An uncopyable field.z368,11840
  const char* p;   // A pointer field.p369,11883
struct DerivedStruct : public AStruct {DerivedStruct373,11967
  char ch;ch374,12007
TEST(FieldTest, WorksForNonConstField) {TEST380,12137
TEST(FieldTest, WorksForConstField) {TEST393,12525
TEST(FieldTest, WorksForUncopyableField) {TEST407,12994
TEST(FieldTest, WorksForPointerField) {TEST417,13304
TEST(FieldTest, WorksForByRefArgument) {TEST434,13785
TEST(FieldTest, WorksForArgumentOfSubType) {TEST445,14065
TEST(FieldTest, WorksForCompatibleMatcherType) {TEST458,14474
TEST(FieldTest, CanDescribeSelf) {TEST469,14804
TEST(FieldTest, CanDescribeSelfWithFieldName) {TEST476,15047
TEST_P(FieldTestP, CanExplainMatchResult) {TEST_P485,15395
TEST_P(FieldTestP, CanExplainMatchResultWithFieldName) {TEST_P498,15749
TEST(FieldForPointerTest, WorksForPointerToConst) {TEST514,16298
TEST(FieldForPointerTest, WorksForPointerToNonConst) {TEST524,16570
TEST(FieldForPointerTest, WorksForReferenceToConstPointer) {TEST534,16847
TEST(FieldForPointerTest, DoesNotMatchNull) {TEST544,17111
TEST(FieldForPointerTest, WorksForArgumentOfSubType) {TEST551,17350
TEST(FieldForPointerTest, CanDescribeSelf) {TEST563,17719
TEST(FieldForPointerTest, CanDescribeSelfWithFieldName) {TEST570,17972
TEST_P(FieldForPointerTestP, CanExplainMatchResult) {TEST_P579,18346
TEST_P(FieldForPointerTestP, CanExplainMatchResultWithFieldName) {TEST_P594,18858
class AClass {AClass611,19474
  AClass() : n_(0) {}AClass613,19498
  int n() const { return n_; }n616,19565
  void set_n(int new_n) { n_ = new_n; }set_n618,19597
  const std::string& s() const { return s_; }s621,19687
  const std::string& s_ref() const& { return s_; }s_ref623,19734
  void set_s(const std::string& new_s) { s_ = new_s; }set_s625,19786
  double& x() const { return x_; }x628,19895
  int n_;n_631,19941
  std::string s_;s_632,19951
  static double x_;x_634,19970
double AClass::x_ = 0.0;x_637,19994
class DerivedClass : public AClass {DerivedClass640,20063
  int k() const { return k_; }k642,20109
  int k_;k_645,20151
TEST(PropertyTest, WorksForNonReferenceProperty) {TEST652,20308
TEST(PropertyTest, WorksForReferenceToConstProperty) {TEST668,20773
TEST(PropertyTest, WorksForRefQualifiedProperty) {TEST685,21267
TEST(PropertyTest, WorksForReferenceToNonConstProperty) {TEST702,21781
TEST(PropertyTest, WorksForByValueArgument) {TEST715,22124
TEST(PropertyTest, WorksForArgumentOfSubType) {TEST728,22446
TEST(PropertyTest, WorksForCompatibleMatcherType) {TEST743,22882
TEST(PropertyTest, CanDescribeSelf) {TEST759,23400
TEST(PropertyTest, CanDescribeSelfWithPropertyName) {TEST767,23665
TEST_P(PropertyTestP, CanExplainMatchResult) {TEST_P776,24029
TEST_P(PropertyTestP, CanExplainMatchResultWithPropertyName) {TEST_P789,24397
TEST(PropertyForPointerTest, WorksForPointerToConst) {TEST805,24969
TEST(PropertyForPointerTest, WorksForPointerToNonConst) {TEST817,25265
TEST(PropertyForPointerTest, WorksForReferenceToConstPointer) {TEST830,25589
TEST(PropertyForPointerTest, WorksForReferenceToNonConstProperty) {TEST842,25897
TEST(PropertyForPointerTest, WorksForArgumentOfSubType) {TEST849,26165
TEST(PropertyForPointerTest, CanDescribeSelf) {TEST863,26562
TEST(PropertyForPointerTest, CanDescribeSelfWithPropertyDescription) {TEST871,26837
TEST_P(PropertyForPointerTestP, CanExplainMatchResult) {TEST_P880,27234
TEST_P(PropertyForPointerTestP, CanExplainMatchResultWithPropertyName) {TEST_P896,27760
std::string IntToStringFunction(int input) {IntToStringFunction916,28474
TEST(ResultOfTest, WorksForFunctionPointers) {TEST922,28608
TEST(ResultOfTest, CanDescribeItself) {TEST930,28857
TEST(ResultOfTest, CanDescribeItselfWithResultDescription) {TEST944,29314
int IntFunction(int input) { return input == 42 ? 80 : 90; }IntFunction954,29713
TEST_P(ResultOfTestP, CanExplainMatchResult) {TEST_P956,29775
TEST_P(ResultOfTestP, CanExplainMatchResultWithResultDescription) {TEST_P967,30202
TEST(ResultOfTest, WorksForNonReferenceResults) {TEST980,30776
double& DoubleFunction(double& input) { return input; }  // NOLINTDoubleFunction989,31069
Uncopyable& RefUncopyableFunction(Uncopyable& obj) {  // NOLINTRefUncopyableFunction991,31137
TEST(ResultOfTest, WorksForReferenceToNonConstResults) {TEST995,31218
const std::string& StringFunction(const std::string& input) { return input; }StringFunction1014,31811
TEST(ResultOfTest, WorksForReferenceToConstResults) {TEST1016,31890
TEST(ResultOfTest, WorksForCompatibleMatcherTypes) {TEST1027,32243
TEST(ResultOfDeathTest, DiesOnNullFunctionPointers) {TEST1037,32612
TEST(ResultOfTest, WorksForFunctionReferences) {TEST1046,32965
struct Functor {Functor1054,33252
  std::string operator()(int input) const { return IntToStringFunction(input); }operator ()1055,33269
TEST(ResultOfTest, WorksForFunctors) {TEST1058,33354
struct PolymorphicFunctor {PolymorphicFunctor1068,33715
  typedef int result_type;result_type1069,33743
  int operator()(int n) { return n; }operator ()1070,33770
  int operator()(const char* s) { return static_cast<int>(strlen(s)); }operator ()1071,33808
  std::string operator()(int* p) { return p ? "good ptr" : "null"; }operator ()1072,33880
TEST(ResultOfTest, WorksForPolymorphicFunctors) {TEST1075,33953
TEST(ResultOfTest, WorksForPolymorphicFunctorsIgnoringResultType) {TEST1087,34338
TEST(ResultOfTest, WorksForLambdas) {TEST1095,34571
      [](int str_len) {__anon1f00856f02021097,34644
TEST(ResultOfTest, WorksForNonCopyableArguments) {TEST1105,34828
      [](const std::unique_ptr<int>& str_len) {__anon1f00856f03021107,34931
const int* ReferencingFunction(const int& n) { return &n; }ReferencingFunction1115,35202
struct ReferencingFunctor {ReferencingFunctor1117,35263
  typedef const int* result_type;result_type1118,35291
  result_type operator()(const int& n) { return &n; }operator ()1119,35325
TEST(ResultOfTest, WorksForReferencingCallables) {TEST1122,35383
TEST(SizeIsTest, ImplementsSizeIs) {TEST1134,35770
TEST(SizeIsTest, WorksWithMap) {TEST1146,36124
TEST(SizeIsTest, WorksWithReferences) {TEST1158,36514
TEST(SizeIsTest, WorksWithMoveOnly) {TEST1166,36716
struct MinimalistCustomType {MinimalistCustomType1174,37012
  int size() const { return 1; }size1175,37042
TEST(SizeIsTest, WorksWithMinimalistCustomType) {TEST1177,37078
TEST(SizeIsTest, CanDescribeSelf) {TEST1183,37244
TEST(SizeIsTest, ExplainsResult) {TEST1189,37428
TEST(WhenSortedByTest, WorksForEmptyContainer) {TEST1207,38231
TEST(WhenSortedByTest, WorksForNonEmptyContainer) {TEST1213,38450
TEST(WhenSortedByTest, WorksForNonVectorContainer) {TEST1225,38830
TEST(WhenSortedByTest, WorksForNativeArray) {TEST1236,39262
TEST(WhenSortedByTest, CanDescribeSelf) {TEST1245,39650
TEST(WhenSortedByTest, ExplainsMatchResult) {TEST1259,40094
TEST(WhenSortedTest, WorksForEmptyContainer) {TEST1270,40563
TEST(WhenSortedTest, WorksForNonEmptyContainer) {TEST1276,40750
TEST(WhenSortedTest, WorksForMapTypes) {TEST1286,41065
TEST(WhenSortedTest, WorksForMultiMapTypes) {TEST1299,41549
TEST(WhenSortedTest, WorksForPolymorphicMatcher) {TEST1315,42164
TEST(WhenSortedTest, WorksForVectorConstRefMatcher) {TEST1323,42378
class Streamlike {Streamlike1336,42860
  typedef ConstIter const_iterator;const_iterator1341,42918
  typedef T value_type;value_type1342,42954
  Streamlike(InIter first, InIter last) : remainder_(first, last) {}Streamlike1345,43008
  const_iterator begin() const {begin1347,43078
  const_iterator end() const { return const_iterator(this, remainder_.end()); }end1350,43168
  class ConstIter {ConstIter1353,43259
    using iterator_category = std::input_iterator_tag;iterator_category1355,43290
    using value_type = T;value_type1356,43345
    using difference_type = ptrdiff_t;difference_type1357,43371
    using pointer = const value_type*;pointer1358,43410
    using reference = const value_type&;reference1359,43449
    ConstIter(const Streamlike* s, typename std::list<value_type>::iterator pos)ConstIter1361,43491
    const value_type& operator*() const { return *pos_; }operator *1364,43603
    const value_type* operator->() const { return &*pos_; }operator ->1365,43661
    ConstIter& operator++() {operator ++1366,43721
    class PostIncrProxy {PostIncrProxy1373,43927
      explicit PostIncrProxy(const value_type& value) : value_(value) {}PostIncrProxy1375,43966
      value_type operator*() const { return value_; }operator *1376,44039
      value_type value_;value_1379,44108
    PostIncrProxy operator++(int) {operator ++1381,44140
    friend bool operator==(const ConstIter& a, const ConstIter& b) {operator ==1387,44255
    friend bool operator!=(const ConstIter& a, const ConstIter& b) {operator !=1390,44377
    const Streamlike* s_;s_1395,44489
    typename std::list<value_type>::iterator pos_;pos_1396,44515
  friend std::ostream& operator<<(std::ostream& os, const Streamlike& s) {operator <<1399,44572
    typedef typename std::list<value_type>::const_iterator Iter;Iter1401,44662
  mutable std::list<value_type> remainder_;  // modified by iterationremainder_1411,44910
TEST(StreamlikeTest, Iteration) {TEST1414,44984
TEST(BeginEndDistanceIsTest, WorksWithForwardList) {TEST1427,45303
TEST(BeginEndDistanceIsTest, WorksWithNonStdList) {TEST1439,45758
TEST(BeginEndDistanceIsTest, CanDescribeSelf) {TEST1445,45921
TEST(BeginEndDistanceIsTest, WorksWithMoveOnly) {TEST1452,46201
TEST_P(BeginEndDistanceIsTestP, ExplainsResult) {TEST_P1458,46371
TEST(WhenSortedTest, WorksForStreamlike) {TEST1488,47648
TEST(WhenSortedTest, WorksForVectorConstRefMatcherOnStreamlike) {TEST1497,48023
TEST(IsSupersetOfTest, WorksForNativeArray) {TEST1505,48361
TEST(IsSupersetOfTest, WorksWithDuplicates) {TEST1516,48761
TEST(IsSupersetOfTest, WorksForEmpty) {TEST1524,49015
TEST(IsSupersetOfTest, WorksForStreamlike) {TEST1542,49571
TEST(IsSupersetOfTest, TakesStlContainer) {TEST1556,49919
TEST(IsSupersetOfTest, Describe) {TEST1568,50205
  typedef std::vector<int> IntVec;IntVec1569,50240
TEST(IsSupersetOfTest, DescribeNegation) {TEST1582,50645
  typedef std::vector<int> IntVec;IntVec1583,50688
TEST(IsSupersetOfTest, MatchAndExplain) {TEST1596,51102
TEST(IsSupersetOfTest, WorksForRhsInitializerList) {TEST1619,51908
TEST(IsSupersetOfTest, WorksWithMoveOnly) {TEST1625,52105
TEST(IsSubsetOfTest, WorksForNativeArray) {TEST1633,52384
TEST(IsSubsetOfTest, WorksWithDuplicates) {TEST1644,52772
TEST(IsSubsetOfTest, WorksForEmpty) {TEST1652,53014
TEST(IsSubsetOfTest, WorksForStreamlike) {TEST1670,53556
TEST(IsSubsetOfTest, TakesStlContainer) {TEST1682,53863
TEST(IsSubsetOfTest, Describe) {TEST1695,54168
  typedef std::vector<int> IntVec;IntVec1696,54201
TEST(IsSubsetOfTest, DescribeNegation) {TEST1710,54605
  typedef std::vector<int> IntVec;IntVec1711,54646
TEST(IsSubsetOfTest, MatchAndExplain) {TEST1724,55057
TEST(IsSubsetOfTest, WorksForRhsInitializerList) {TEST1747,55852
TEST(IsSubsetOfTest, WorksWithMoveOnly) {TEST1753,56040
TEST(ElemensAreStreamTest, WorksForStreamlike) {TEST1764,56397
TEST(ElemensAreArrayStreamTest, WorksForStreamlike) {TEST1771,56631
TEST(ElementsAreTest, WorksWithUncopyable) {TEST1787,57040
TEST(ElementsAreTest, WorksWithMoveOnly) {TEST1794,57235
TEST(ElementsAreTest, TakesStlContainer) {TEST1803,57525
TEST(UnorderedElementsAreArrayTest, SucceedsWhenExpected) {TEST1818,57885
TEST(UnorderedElementsAreArrayTest, VectorBool) {TEST1828,58242
TEST(UnorderedElementsAreArrayTest, WorksForStreamlike) {TEST1839,58667
TEST(UnorderedElementsAreArrayTest, TakesStlContainer) {TEST1858,59280
TEST(UnorderedElementsAreArrayTest, TakesInitializerList) {TEST1871,59630
TEST(UnorderedElementsAreArrayTest, TakesInitializerListOfCStrings) {TEST1877,59858
TEST(UnorderedElementsAreArrayTest, TakesInitializerListOfSameTypedMatchers) {TEST1883,60135
TEST(UnorderedElementsAreArrayTest,TEST1891,60443
TEST(UnorderedElementsAreArrayTest, WorksWithMoveOnly) {TEST1903,60993
class UnorderedElementsAreTest : public testing::Test {UnorderedElementsAreTest1910,61214
  typedef std::vector<int> IntVec;IntVec1912,61282
TEST_F(UnorderedElementsAreTest, WorksWithUncopyable) {TEST_F1915,61321
TEST_F(UnorderedElementsAreTest, SucceedsWhenExpected) {TEST_F1923,61550
TEST_F(UnorderedElementsAreTest, FailsWhenAnElementMatchesNoMatcher) {TEST_F1933,61899
TEST_F(UnorderedElementsAreTest, WorksForStreamlike) {TEST_F1946,62344
TEST_F(UnorderedElementsAreTest, WorksWithMoveOnly) {TEST_F1957,62772
TEST_F(UnorderedElementsAreTest, Performance) {TEST_F1969,63362
TEST_F(UnorderedElementsAreTest, PerformanceHalfStrict) {TEST_F1985,63902
TEST_F(UnorderedElementsAreTest, FailMessageCountWrong) {TEST_F2001,64299
TEST_F(UnorderedElementsAreTest, FailMessageCountWrongZero) {TEST_F2010,64601
TEST_F(UnorderedElementsAreTest, FailMessageUnmatchedMatchers) {TEST_F2018,64870
TEST_F(UnorderedElementsAreTest, FailMessageUnmatchedElements) {TEST_F2030,65290
TEST_F(UnorderedElementsAreTest, FailMessageUnmatchedMatcherAndElement) {TEST_F2042,65698
static std::string EMString(int element, int matcher) {EMString2060,66378
TEST_F(UnorderedElementsAreTest, FailMessageImperfectMatchOnly) {TEST_F2066,66543
TEST_F(UnorderedElementsAreTest, Describe) {TEST_F2094,67635
TEST_F(UnorderedElementsAreTest, DescribeNegation) {TEST_F2106,68230
TEST_P(EachTestP, ExplainsMatchResultCorrectly) {TEST_P2124,68961
TEST(EachTest, DescribesItselfCorrectly) {TEST2149,69526
TEST(EachTest, MatchesVectorWhenAllElementsMatch) {TEST2157,69790
TEST(EachTest, MatchesMapWhenAllElementsMatch) {TEST2177,70455
TEST(EachTest, AcceptsMatcher) {TEST2195,71112
TEST(EachTest, WorksForNativeArrayAsTuple) {TEST2201,71244
TEST(EachTest, WorksWithMoveOnly) {TEST2208,71469
class IsHalfOfMatcher {IsHalfOfMatcher2215,71652
  bool MatchAndExplain(const std::tuple<T1, T2>& a_pair,MatchAndExplain2218,71723
  void DescribeTo(ostream* os) const {DescribeTo2229,72101
  void DescribeNegationTo(ostream* os) const {DescribeNegationTo2233,72208
PolymorphicMatcher<IsHalfOfMatcher> IsHalfOf() {IsHalfOf2238,72329
TEST(PointwiseTest, DescribesSelf) {TEST2242,72433
TEST(PointwiseTest, MakesCopyOfRhs) {TEST2259,73033
TEST(PointwiseTest, WorksForLhsNativeArray) {TEST2273,73362
TEST(PointwiseTest, WorksForRhsNativeArray) {TEST2283,73610
TEST(PointwiseTest, WorksForVectorOfBool) {TEST2294,73901
TEST(PointwiseTest, WorksForRhsInitializerList) {TEST2303,74127
TEST(PointwiseTest, RejectsWrongSize) {TEST2309,74315
TEST(PointwiseTest, RejectsWrongContent) {TEST2319,74621
TEST(PointwiseTest, AcceptsCorrectContent) {TEST2329,74944
TEST(PointwiseTest, AllowsMonomorphicInnerMatcher) {TEST2336,75166
TEST(PointwiseTest, WorksWithMoveOnly) {TEST2355,75920
TEST(UnorderedPointwiseTest, DescribesSelf) {TEST2361,76110
TEST(UnorderedPointwiseTest, MakesCopyOfRhs) {TEST2387,77106
TEST(UnorderedPointwiseTest, WorksForLhsNativeArray) {TEST2401,77453
TEST(UnorderedPointwiseTest, WorksForRhsNativeArray) {TEST2411,77728
TEST(UnorderedPointwiseTest, WorksForRhsInitializerList) {TEST2421,78003
TEST(UnorderedPointwiseTest, RejectsWrongSize) {TEST2427,78218
TEST(UnorderedPointwiseTest, RejectsWrongContent) {TEST2438,78569
TEST(UnorderedPointwiseTest, AcceptsCorrectContentInSameOrder) {TEST2448,78912
TEST(UnorderedPointwiseTest, AcceptsCorrectContentInDifferentOrder) {TEST2454,79104
TEST(UnorderedPointwiseTest, AllowsMonomorphicInnerMatcher) {TEST2460,79301
TEST(UnorderedPointwiseTest, WorksWithMoveOnly) {TEST2472,79782
TEST(PointeeTest, WorksOnMoveOnlyType) {TEST2479,80036
class PredicateFormatterFromMatcherTest : public ::testing::Test {PredicateFormatterFromMatcherTest2485,80191
  enum Behavior { kInitialSuccess, kAlwaysFail, kFlaky };Behavior2487,80270
  enum Behavior { kInitialSuccess, kAlwaysFail, kFlaky };kInitialSuccess2487,80270
  enum Behavior { kInitialSuccess, kAlwaysFail, kFlaky };kAlwaysFail2487,80270
  enum Behavior { kInitialSuccess, kAlwaysFail, kFlaky };kFlaky2487,80270
  class MockMatcher : public MatcherInterface<Behavior> {MockMatcher2492,80539
    bool MatchAndExplain(Behavior behavior,MatchAndExplain2494,80608
    void DescribeTo(ostream* os) const override { *os << "[DescribeTo]"; }DescribeTo2519,81535
    void DescribeNegationTo(ostream* os) const override {DescribeNegationTo2521,81611
  AssertionResult RunPredicateFormatter(Behavior behavior) {RunPredicateFormatter2526,81718
TEST_F(PredicateFormatterFromMatcherTest, ShortCircuitOnSuccess) {TEST_F2534,81984
TEST_F(PredicateFormatterFromMatcherTest, NoShortCircuitOnFailure) {TEST_F2541,82232
TEST_F(PredicateFormatterFromMatcherTest, DetectsFlakyShortCircuit) {TEST_F2551,82630
TEST(ElementsAreTest, CanDescribeExpectingNoElement) {TEST2565,83168
TEST(ElementsAreTest, CanDescribeExpectingOneElement) {TEST2570,83313
TEST(ElementsAreTest, CanDescribeExpectingManyElements) {TEST2575,83474
TEST(ElementsAreTest, CanDescribeNegationOfExpectingNoElement) {TEST2584,83748
TEST(ElementsAreTest, CanDescribeNegationOfExpectingOneElement) {TEST2589,83907
TEST(ElementsAreTest, CanDescribeNegationOfExpectingManyElements) {TEST2597,84136
TEST(ElementsAreTest, DoesNotExplainTrivialMatch) {TEST2606,84444
TEST_P(ElementsAreTestP, ExplainsNonTrivialMatch) {TEST_P2615,84703
TEST(ElementsAreTest, CanExplainMismatchWrongSize) {TEST2627,85102
TEST_P(ElementsAreTestP, CanExplainMismatchRightSize) {TEST_P2638,85412
TEST(ElementsAreTest, MatchesOneElementVector) {TEST2651,85764
TEST(ElementsAreTest, MatchesOneElementList) {TEST2658,85955
TEST(ElementsAreTest, MatchesThreeElementVector) {TEST2665,86129
TEST(ElementsAreTest, MatchesOneElementEqMatcher) {TEST2674,86382
TEST(ElementsAreTest, MatchesOneElementAnyMatcher) {TEST2681,86541
TEST(ElementsAreTest, MatchesOneElementValue) {TEST2688,86697
TEST(ElementsAreTest, MatchesThreeElementsMixedMatchers) {TEST2695,86848
TEST(ElementsAreTest, MatchesTenElementVector) {TEST2704,87076
TEST(ElementsAreTest, DoesNotMatchWrongSize) {TEST2714,87437
TEST(ElementsAreTest, DoesNotMatchWrongValue) {TEST2723,87713
TEST(ElementsAreTest, DoesNotMatchWrongOrder) {TEST2731,87951
TEST(ElementsAreTest, WorksForNestedContainer) {TEST2742,88274
TEST(ElementsAreTest, WorksWithByRefElementMatchers) {TEST2756,88773
TEST(ElementsAreTest, WorksWithContainerPointerUsingPointee) {TEST2764,89033
TEST(ElementsAreTest, WorksWithNativeArrayPassedByReference) {TEST2772,89273
class NativeArrayPassedAsPointerAndSize {NativeArrayPassedAsPointerAndSize2779,89505
  NativeArrayPassedAsPointerAndSize() {}NativeArrayPassedAsPointerAndSize2781,89556
TEST(ElementsAreTest, WorksWithNativeArrayPassedAsPointerAndSize) {TEST2792,89866
TEST(ElementsAreTest, WorksWithTwoDimensionalNativeArray) {TEST2803,90251
TEST(ElementsAreTest, AcceptsStringLiteral) {TEST2812,90654
TEST(ElementsAreTest, AcceptsArrayWithUnknownSize) {TEST2821,90965
const char kHi[] = "hi";kHi2832,91271
TEST(ElementsAreTest, MakesCopyOfArguments) {TEST2834,91297
TEST(ElementsAreArrayTest, CanBeCreatedWithValueArray) {TEST2852,91926
TEST(ElementsAreArrayTest, CanBeCreatedWithArraySize) {TEST2862,92197
TEST(ElementsAreArrayTest, CanBeCreatedWithoutArraySize) {TEST2873,92564
TEST(ElementsAreArrayTest, CanBeCreatedWithMatcherArray) {TEST2883,92863
TEST(ElementsAreArrayTest, CanBeCreatedWithVector) {TEST2897,93362
TEST(ElementsAreArrayTest, TakesInitializerList) {TEST2906,93705
TEST(ElementsAreArrayTest, TakesInitializerListOfCStrings) {TEST2913,93964
TEST(ElementsAreArrayTest, TakesInitializerListOfSameTypedMatchers) {TEST2920,94282
TEST(ElementsAreArrayTest, TakesInitializerListOfDifferentTypedMatchers) {TEST2926,94542
TEST(ElementsAreArrayTest, CanBeCreatedWithMatcherVector) {TEST2937,95045
TEST(ElementsAreArrayTest, CanBeCreatedWithIteratorRange) {TEST2948,95516
TEST(ElementsAreArrayTest, WorksWithNativeArray) {TEST2963,96273
TEST(ElementsAreArrayTest, SourceLifeSpan) {TEST2972,96528
TEST(ContainsTest, ListMatchesWhenElementIsInContainer) {TEST2993,97240
TEST(ContainsTest, ListDoesNotMatchWhenElementIsNotInContainer) {TEST3011,97784
TEST(ContainsTest, SetMatchesWhenElementIsInContainer) {TEST3018,97972
TEST(ContainsTest, SetDoesNotMatchWhenElementIsNotInContainer) {TEST3035,98457
TEST_P(ContainsTestP, ExplainsMatchResultCorrectly) {TEST_P3046,98767
TEST(ContainsTest, DescribesItselfCorrectly) {TEST3061,99182
TEST(ContainsTest, MapMatchesWhenElementIsInContainer) {TEST3069,99464
TEST(ContainsTest, MapDoesNotMatchWhenElementIsNotInContainer) {TEST3085,100003
TEST(ContainsTest, ArrayMatchesWhenElementIsInContainer) {TEST3092,100206
TEST(ContainsTest, ArrayDoesNotMatchWhenElementIsNotInContainer) {TEST3097,100392
TEST(ContainsTest, AcceptsMatcher) {TEST3102,100540
TEST(ContainsTest, WorksForNativeArrayAsTuple) {TEST3108,100684
TEST(ContainsTest, WorksForTwoDimensionalNativeArray) {TEST3115,100917

build/_deps/googletest-src/googlemock/test/gmock-pp_test.cc,838
#define GMOCK_TEST_REPLACE_comma_WITH_COMMA_I_comma GMOCK_TEST_REPLACE_comma_WITH_COMMA_I_comma4,112
#define GMOCK_TEST_REPLACE_comma_WITH_COMMA(GMOCK_TEST_REPLACE_comma_WITH_COMMA5,166
namespace testing {testing9,296
namespace internal {internal10,316
namespace gmockpp {gmockpp11,337
struct Test {Test55,2318
  static constexpr int kArgs = sizeof...(Args);kArgs56,2332
#define GMOCK_PP_INTERNAL_TYPE_TEST(GMOCK_PP_INTERNAL_TYPE_TEST58,2383
#define GMOCK_PP_INTERNAL_VAR_TEST_1(GMOCK_PP_INTERNAL_VAR_TEST_163,2642
#define GMOCK_PP_INTERNAL_VAR_TEST_2(GMOCK_PP_INTERNAL_VAR_TEST_264,2685
#define GMOCK_PP_INTERNAL_VAR_TEST_3(GMOCK_PP_INTERNAL_VAR_TEST_365,2732
#define GMOCK_PP_INTERNAL_VAR_TEST(GMOCK_PP_INTERNAL_VAR_TEST67,2784
#define GMOCK_PP_INTERNAL_IS_EMPTY_TEST_1GMOCK_PP_INTERNAL_IS_EMPTY_TEST_174,3135

build/_deps/googletest-src/googlemock/test/gmock_link_test.h,3759
#define GOOGLEMOCK_TEST_GMOCK_LINK_TEST_H_GOOGLEMOCK_TEST_GMOCK_LINK_TEST_H_115,4010
class Interface {Interface195,5770
  virtual ~Interface() {}~Interface197,5797
class Mock : public Interface {Mock209,6276
  Mock() {}Mock211,6317
class InvokeHelper {InvokeHelper228,6892
  static void StaticVoidFromVoid() {}StaticVoidFromVoid230,6922
  void VoidFromVoid() {}VoidFromVoid231,6960
  static void StaticVoidFromString(char* /* str */) {}StaticVoidFromString232,6985
  void VoidFromString(char* /* str */) {}VoidFromString233,7040
  static int StaticIntFromString(char* /* str */) { return 1; }StaticIntFromString234,7082
  static bool StaticBoolFromString(const char* /* str */) { return true; }StaticBoolFromString235,7146
class FieldHelper {FieldHelper238,7225
  explicit FieldHelper(int a_field) : field_(a_field) {}FieldHelper240,7254
  int field() const { return field_; }field241,7311
  int field_;  // NOLINT -- need external access to field_ to testfield_242,7350
TEST(LinkTest, TestReturnVoid) {TEST247,7515
TEST(LinkTest, TestReturn) {TEST255,7699
TEST(LinkTest, TestReturnNull) {TEST264,7907
TEST(LinkTest, TestReturnRef) {TEST272,8094
TEST(LinkTest, TestAssign) {TEST281,8299
TEST(LinkTest, TestSetArgPointee) {TEST290,8511
TEST(LinkTest, TestSetArrayArgument) {TEST299,8734
TEST(LinkTest, TestSetErrnoAndReturn) {TEST312,9030
TEST(LinkTest, TestInvoke) {TEST324,9360
TEST(LinkTest, TestInvokeWithoutArgs) {TEST336,9736
TEST(LinkTest, TestInvokeArgument) {TEST349,10149
TEST(LinkTest, TestWithArg) {TEST358,10392
TEST(LinkTest, TestWithArgs) {TEST367,10629
TEST(LinkTest, TestWithoutArgs) {TEST376,10871
TEST(LinkTest, TestDoAll) {TEST384,11068
TEST(LinkTest, TestDoDefault) {TEST394,11300
TEST(LinkTest, TestIgnoreResult) {TEST404,11565
TEST(LinkTest, TestThrow) {TEST413,11791
namespace {__anon4bf98cb70111432,12421
ACTION(Return1) { return 1; }ACTION433,12433
TEST(LinkTest, TestActionMacro) {TEST436,12480
namespace {__anon4bf98cb70211444,12683
ACTION_P(ReturnArgument, ret_value) { return ret_value; }ACTION_P445,12695
TEST(LinkTest, TestActionPMacro) {TEST448,12770
namespace {__anon4bf98cb70311456,12984
ACTION_P2(ReturnEqualsEitherOf, first, second) {ACTION_P2457,12996
TEST(LinkTest, TestActionP2Macro) {TEST466,13151
TEST(LinkTest, TestMatcherAnything) {TEST476,13380
TEST(LinkTest, TestMatcherA) {TEST483,13534
TEST(LinkTest, TestMatchersEq) {TEST490,13712
TEST(LinkTest, TestMatchersRelations) {TEST499,13991
TEST(LinkTest, TestMatcherNotNull) {TEST510,14423
TEST(LinkTest, TestMatcherIsNull) {TEST517,14589
TEST(LinkTest, TestMatcherRef) {TEST524,14750
TEST(LinkTest, TestMatcherTypedEq) {TEST532,14923
TEST(LinkTest, TestMatchersFloatingPoint) {TEST541,15171
TEST(LinkTest, TestMatcherContainsRegex) {TEST553,15605
TEST(LinkTest, TestMatcherMatchesRegex) {TEST560,15793
TEST(LinkTest, TestMatchersSubstrings) {TEST567,16003
TEST(LinkTest, TestMatchersStringEquality) {TEST576,16357
TEST(LinkTest, TestMatcherElementsAre) {TEST585,16751
TEST(LinkTest, TestMatcherElementsAreArray) {TEST592,16941
TEST(LinkTest, TestMatcherIsSubsetOf) {TEST600,17159
TEST(LinkTest, TestMatcherIsSupersetOf) {TEST608,17367
TEST(LinkTest, TestMatcherContainerEq) {TEST616,17578
TEST(LinkTest, TestMatcherField) {TEST624,17774
TEST(LinkTest, TestMatcherProperty) {TEST635,18096
TEST(LinkTest, TestMatcherResultOf) {TEST646,18425
TEST(LinkTest, TestMatcherPointee) {TEST652,18621
TEST(LinkTest, TestMatcherTruly) {TEST660,18784
TEST(LinkTest, TestMatcherAllOf) {TEST666,18971
TEST(LinkTest, TestMatcherAnyOf) {TEST672,19117
TEST(LinkTest, TestMatcherNot) {TEST678,19261
TEST(LinkTest, TestMatcherCast) {TEST684,19409

build/_deps/googletest-src/googlemock/test/gmock-port_test.cc,39
TEST(DummyTest, Dummy) {}TEST42,1951

build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc,15148
namespace testing {testing50,1955
namespace gmock_more_actions_test {gmock_more_actions_test51,1975
inline short Short(short n) { return n; }  // NOLINTShort68,2419
inline char Char(char ch) { return ch; }Char69,2472
int Nullary() { return 1; }Nullary72,2577
bool g_done = false;g_done74,2606
bool Unary(int x) { return x < 0; }Unary76,2628
bool ByConstRef(const std::string& s) { return s == "Hi"; }ByConstRef78,2665
const double g_double = 0;g_double80,2726
bool ReferencesGlobalDouble(const double& x) { return &x == &g_double; }ReferencesGlobalDouble81,2753
struct UnaryFunctor {UnaryFunctor83,2827
  int operator()(bool x) { return x ? 1 : -1; }operator ()84,2849
const char* Binary(const char* input, short n) { return input + n; }  // NOLINTBinary87,2901
int Ternary(int x, char y, short z) { return x + y + z; }  // NOLINTTernary89,2982
int SumOf4(int a, int b, int c, int d) { return a + b + c + d; }SumOf491,3052
int SumOfFirst2(int a, int b, Unused, Unused) { return a + b; }SumOfFirst293,3118
int SumOf5(int a, int b, int c, int d, int e) { return a + b + c + d + e; }SumOf595,3183
struct SumOf5Functor {SumOf5Functor97,3260
  int operator()(int a, int b, int c, int d, int e) {operator ()98,3283
int SumOf6(int a, int b, int c, int d, int e, int f) {SumOf6103,3375
struct SumOf6Functor {SumOf6Functor107,3465
  int operator()(int a, int b, int c, int d, int e, int f) {operator ()108,3488
std::string Concat7(const char* s1, const char* s2, const char* s3,Concat7113,3591
std::string Concat8(const char* s1, const char* s2, const char* s3,Concat8119,3824
std::string Concat9(const char* s1, const char* s2, const char* s3,Concat9125,4078
std::string Concat10(const char* s1, const char* s2, const char* s3,Concat10131,4353
class Foo {Foo138,4675
  Foo() : value_(123) {}Foo140,4696
  int Nullary() const { return value_; }Nullary142,4722
  short Unary(long x) { return static_cast<short>(value_ + x); }  // NOLINTUnary144,4764
  std::string Binary(const std::string& str, char c) const { return str + c; }Binary146,4841
  int Ternary(int x, bool y, char z) { return value_ + x + y * z; }Ternary148,4921
  int SumOf4(int a, int b, int c, int d) const {SumOf4150,4990
  int SumOfLast2(Unused, Unused, int a, int b) const { return a + b; }SumOfLast2154,5079
  int SumOf5(int a, int b, int c, int d, int e) { return a + b + c + d + e; }SumOf5156,5151
  int SumOf6(int a, int b, int c, int d, int e, int f) {SumOf6158,5230
  std::string Concat7(const char* s1, const char* s2, const char* s3,Concat7162,5326
  std::string Concat8(const char* s1, const char* s2, const char* s3,Concat8168,5569
  std::string Concat9(const char* s1, const char* s2, const char* s3,Concat9174,5833
  std::string Concat10(const char* s1, const char* s2, const char* s3,Concat10180,6118
  int value_;value_188,6462
TEST(InvokeTest, Nullary) {TEST192,6529
TEST(InvokeTest, Unary) {TEST198,6701
TEST(InvokeTest, Binary) {TEST205,6922
TEST(InvokeTest, Ternary) {TEST212,7162
TEST(InvokeTest, FunctionThatTakes4Arguments) {TEST218,7372
TEST(InvokeTest, FunctionThatTakes5Arguments) {TEST224,7605
TEST(InvokeTest, FunctionThatTakes6Arguments) {TEST230,7851
inline const char* CharPtr(const char* s) { return s; }CharPtr238,8163
TEST(InvokeTest, FunctionThatTakes7Arguments) {TEST241,8272
TEST(InvokeTest, FunctionThatTakes8Arguments) {TEST252,8774
TEST(InvokeTest, FunctionThatTakes9Arguments) {TEST263,9304
TEST(InvokeTest, FunctionThatTakes10Arguments) {TEST275,9884
TEST(InvokeTest, FunctionWithUnusedParameters) {TEST288,10554
TEST(InvokeTest, MethodWithUnusedParameters) {TEST300,11056
TEST(InvokeTest, Functor) {TEST310,11450
TEST(InvokeTest, FunctionWithCompatibleType) {TEST316,11655
TEST(InvokeMethodTest, Nullary) {TEST324,11973
TEST(InvokeMethodTest, Unary) {TEST331,12174
TEST(InvokeMethodTest, Binary) {TEST338,12383
TEST(InvokeMethodTest, Ternary) {TEST347,12687
TEST(InvokeMethodTest, MethodThatTakes4Arguments) {TEST354,12928
TEST(InvokeMethodTest, MethodThatTakes5Arguments) {TEST361,13186
TEST(InvokeMethodTest, MethodThatTakes6Arguments) {TEST369,13463
TEST(InvokeMethodTest, MethodThatTakes7Arguments) {TEST378,13766
TEST(InvokeMethodTest, MethodThatTakes8Arguments) {TEST390,14293
TEST(InvokeMethodTest, MethodThatTakes9Arguments) {TEST402,14848
TEST(InvokeMethodTest, MethodThatTakes10Arguments) {TEST415,15453
TEST(InvokeMethodTest, MethodWithCompatibleType) {TEST429,16135
TEST(WithoutArgsTest, NoArg) {TEST437,16435
TEST(WithArgTest, OneArg) {TEST443,16643
TEST(ReturnArgActionTest, WorksForOneArgIntArg0) {TEST449,16852
TEST(ReturnArgActionTest, WorksForMultiArgBoolArg0) {TEST454,16998
TEST(ReturnArgActionTest, WorksForMultiArgStringArg2) {TEST459,17177
TEST(ReturnArgActionTest, WorksForNonConstRefArg0) {TEST464,17393
TEST(SaveArgActionTest, WorksForSameType) {TEST470,17594
TEST(SaveArgActionTest, WorksForCompatibleType) {TEST477,17771
TEST(SaveArgPointeeActionTest, WorksForSameType) {TEST484,17969
TEST(SaveArgPointeeActionTest, WorksForCompatibleType) {TEST492,18193
TEST(SetArgRefereeActionTest, WorksForSameType) {TEST500,18429
TEST(SetArgRefereeActionTest, WorksForCompatibleType) {TEST507,18614
TEST(SetArgRefereeActionTest, WorksWithExtraArguments) {TEST514,18822
class DeletionTester {DeletionTester523,19226
  explicit DeletionTester(bool* is_deleted) : is_deleted_(is_deleted) {DeletionTester525,19258
  ~DeletionTester() { *is_deleted_ = true; }~DeletionTester530,19403
  bool* is_deleted_;is_deleted_533,19459
TEST(DeleteArgActionTest, OneArg) {TEST536,19484
TEST(DeleteArgActionTest, TenArgs) {TEST545,19764
TEST(ThrowActionTest, ThrowsGivenExceptionInVoidFunction) {TEST558,20188
class MyException {};MyException563,20348
TEST(ThrowActionTest, ThrowsGivenExceptionInNonVoidFunction) {TEST565,20371
TEST(ThrowActionTest, ThrowsGivenExceptionInNullaryFunction) {TEST570,20557
class Object {Object575,20733
  virtual ~Object() {}~Object577,20757
  virtual void Func() {}Func578,20780
class MockObject : public Object {MockObject581,20809
  ~MockObject() override {}~MockObject583,20853
TEST(ThrowActionTest, Times0) {TEST587,20928
      [] {__anoneb35e2860102589,20987
          ON_CALL(m, Func()).WillByDefault([] { throw "something"; });__anoneb35e2860202592,21036
TEST(SetArrayArgumentTest, SetsTheNthArray) {TEST606,21491
  using MyFunction = void(bool, int*, char*);MyFunction607,21537
TEST(SetArrayArgumentTest, SetsTheNthArrayWithEmptyRange) {TEST642,22471
  using MyFunction = void(bool, int*);MyFunction643,22531
TEST(SetArrayArgumentTest, SetsTheNthArrayWithConvertibleType) {TEST658,22938
  using MyFunction = void(bool, int*);MyFunction659,23003
TEST(SetArrayArgumentTest, SetsTheNthArrayWithIteratorArgument) {TEST673,23424
  using MyFunction = void(bool, std::back_insert_iterator<std::string>);MyFunction674,23490
TEST(ReturnPointeeTest, Works) {TEST683,23772
TEST(InvokeArgumentTest, Function0) {TEST695,24061
TEST(InvokeArgumentTest, Functor1) {TEST701,24278
TEST(InvokeArgumentTest, Function5) {TEST707,24499
TEST(InvokeArgumentTest, Functor5) {TEST714,24762
TEST(InvokeArgumentTest, Function6) {TEST721,25014
TEST(InvokeArgumentTest, Functor6) {TEST728,25291
TEST(InvokeArgumentTest, Function7) {TEST735,25552
TEST(InvokeArgumentTest, Function8) {TEST744,25973
TEST(InvokeArgumentTest, Function9) {TEST753,26413
TEST(InvokeArgumentTest, Function10) {TEST762,26873
TEST(InvokeArgumentTest, ByPointerFunction) {TEST771,27318
TEST(InvokeArgumentTest, FunctionWithCStringLiteral) {TEST779,27682
TEST(InvokeArgumentTest, ByConstReferenceFunction) {TEST786,27997
TEST(InvokeArgumentTest, ByExplicitConstReferenceFunction) {TEST797,28495
TEST(DoAllTest, TwoActions) {TEST809,28962
TEST(DoAllTest, ThreeActions) {TEST818,29207
TEST(DoAllTest, FourActions) {TEST828,29521
TEST(DoAllTest, FiveActions) {TEST841,29895
TEST(DoAllTest, SixActions) {TEST855,30338
TEST(DoAllTest, SevenActions) {TEST870,30845
TEST(DoAllTest, EightActions) {TEST887,31431
TEST(DoAllTest, NineActions) {TEST907,32113
TEST(DoAllTest, TenActions) {TEST928,32881
TEST(DoAllTest, NoArgs) {TEST952,33688
      DoAll([&] { ran_first = true; }, [&] { return ran_first; });__anoneb35e2860302955,33761
      DoAll([&] { ran_first = true; }, [&] { return ran_first; });__anoneb35e2860402955,33761
TEST(DoAllTest, MoveOnlyArgs) {TEST959,33861
      DoAll(InvokeWithoutArgs([&] { ran_first = true; }),__anoneb35e2860502962,33959
            [](std::unique_ptr<int> p) { return *p; });__anoneb35e2860602963,34017
TEST(DoAllTest, ImplicitlyConvertsActionArguments) {TEST968,34180
  Action<void(std::vector<int>)> first = [&] { ran_first = true; };__anoneb35e2860702972,34368
      DoAll(first, [](std::vector<int> arg) { return arg.front(); });__anoneb35e2860802974,34472
ACTION(Return5) { return 5; }ACTION994,35260
TEST(ActionMacroTest, WorksWhenNotReferencingArguments) {TEST996,35291
ACTION(IncrementArg1) { (*arg1)++; }ACTION1005,35603
TEST(ActionMacroTest, WorksWhenReturningVoid) {TEST1007,35641
ACTION(IncrementArg2) {ACTION1016,35888
TEST(ActionMacroTest, CanReferenceArgumentType) {TEST1022,35994
ACTION(Sum2) {ACTION1031,36273
TEST(ActionMacroTest, CanReferenceArgumentTuple) {TEST1037,36443
namespace {__anoneb35e28609111043,36624
int Dummy(bool flag) { return flag ? 1 : 0; }Dummy1047,36713
ACTION(InvokeDummy) {ACTION1051,36777
TEST(ActionMacroTest, CanReferenceMockFunctionType) {TEST1057,36904
ACTION(InvokeDummy2) {ACTION1065,37189
TEST(ActionMacroTest, CanReferenceMockFunctionReturnType) {TEST1071,37310
ACTION(ReturnAddrOfConstBoolReferenceArg) {ACTION1078,37587
TEST(ActionMacroTest, WorksForConstReferenceArg) {TEST1083,37698
ACTION(ReturnAddrOfIntReferenceArg) {ACTION1090,37995
TEST(ActionMacroTest, WorksForNonConstReferenceArg) {TEST1095,38093
namespace action_test {action_test1102,38350
ACTION(Sum) { return arg0 + arg1; }ACTION1103,38374
TEST(ActionMacroTest, WorksInNamespace) {TEST1106,38439
ACTION(PlusTwo) { return arg0 + 2; }ACTION1113,38686
TEST(ActionMacroTest, WorksForDifferentArgumentNumbers) {TEST1115,38724
ACTION_P(Plus, n) { return arg0 + n; }ACTION_P1125,39053
TEST(ActionPMacroTest, DefinesParameterizedAction) {TEST1127,39093
ACTION_P(TypedPlus, n) {ACTION_P1134,39342
TEST(ActionPMacroTest, CanReferenceArgumentAndParameterTypes) {TEST1140,39428
TEST(ActionPMacroTest, WorksInCompatibleMockFunction) {TEST1147,39704
ACTION(OverloadedAction) { return arg0 ? arg1 : "hello"; }ACTION1157,40057
ACTION_P(OverloadedAction, default_value) {ACTION_P1159,40117
ACTION_P2(OverloadedAction, true_value, false_value) {ACTION_P21163,40202
TEST(ActionMacroTest, CanDefineOverloadedActions) {TEST1167,40302
  using MyAction = Action<const char*(bool, const char*)>;MyAction1168,40354
ACTION_P3(Plus, m, n, k) { return arg0 + m + n + k; }ACTION_P31185,41057
TEST(ActionPnMacroTest, WorksFor3Parameters) {TEST1187,41112
ACTION_P4(Plus, p0, p1, p2, p3) { return arg0 + p0 + p1 + p2 + p3; }ACTION_P41197,41498
TEST(ActionPnMacroTest, WorksFor4Parameters) {TEST1199,41568
ACTION_P5(Plus, p0, p1, p2, p3, p4) { return arg0 + p0 + p1 + p2 + p3 + p4; }ACTION_P51204,41726
TEST(ActionPnMacroTest, WorksFor5Parameters) {TEST1206,41805
ACTION_P6(Plus, p0, p1, p2, p3, p4, p5) {ACTION_P61211,41970
TEST(ActionPnMacroTest, WorksFor6Parameters) {TEST1215,42060
ACTION_P7(Plus, p0, p1, p2, p3, p4, p5, p6) {ACTION_P71220,42232
TEST(ActionPnMacroTest, WorksFor7Parameters) {TEST1224,42331
ACTION_P8(Plus, p0, p1, p2, p3, p4, p5, p6, p7) {ACTION_P81229,42510
TEST(ActionPnMacroTest, WorksFor8Parameters) {TEST1233,42618
ACTION_P9(Plus, p0, p1, p2, p3, p4, p5, p6, p7, p8) {ACTION_P91239,42816
TEST(ActionPnMacroTest, WorksFor9Parameters) {TEST1243,42933
ACTION_P10(Plus, p0, p1, p2, p3, p4, p5, p6, p7, p8, last_param) {ACTION_P101249,43138
TEST(ActionPnMacroTest, WorksFor10Parameters) {TEST1255,43329
ACTION_P2(PadArgument, prefix, suffix) {ACTION_P21263,43608
TEST(ActionPnMacroTest, SimpleTypePromotion) {TEST1270,43846
ACTION_P3(ConcatImpl, a, b, c) {ACTION_P31284,44397
ConcatImplActionP3<std::string, T1, T2> Concat(const std::string& a, T1 b,Concat1299,44916
ConcatImplActionP3<T1, int, T2> Concat(T1 a, int b, T2 c) {Concat1318,45672
TEST(ActionPnMacroTest, CanPartiallyRestrictParameterTypes) {TEST1322,45765
ACTION(DoFoo) {}ACTION1332,46058
ACTION_P(DoFoo, p) {}ACTION_P1333,46075
ACTION_P2(DoFoo, p0, p1) {}ACTION_P21334,46097
TEST(ActionPnMacroTest, TypesAreCorrect) {TEST1336,46126
ACTION_P(Plus1, x) { return x; }ACTION_P1376,47443
ACTION_P2(Plus2, x, y) { return x + y; }ACTION_P21377,47476
ACTION_P3(Plus3, x, y, z) { return x + y + z; }ACTION_P31378,47517
ACTION_P10(Plus10, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {ACTION_P101379,47565
TEST(ActionPnMacroTest, CanExplicitlyInstantiateWithReferenceTypes) {TEST1383,47687
class TenArgConstructorClass {TenArgConstructorClass1403,48356
  TenArgConstructorClass(int a1, int a2, int a3, int a4, int a5, int a6, int a7,TenArgConstructorClass1405,48396
  int value_;value_1408,48595
ACTION_TEMPLATE(CreateNew, HAS_1_TEMPLATE_PARAMS(typename, T),ACTION_TEMPLATE1412,48683
TEST(ActionTemplateTest, WorksWithoutValueParam) {TEST1417,48805
ACTION_TEMPLATE(CreateNew, HAS_1_TEMPLATE_PARAMS(typename, T),ACTION_TEMPLATE1424,49026
TEST(ActionTemplateTest, WorksWithValueParams) {TEST1429,49154
ACTION_TEMPLATE(MyDeleteArg, HAS_1_TEMPLATE_PARAMS(int, k),ACTION_TEMPLATE1437,49397
class BoolResetter {BoolResetter1443,49573
  explicit BoolResetter(bool* value) : value_(value) {}BoolResetter1445,49603
  ~BoolResetter() { *value_ = false; }~BoolResetter1446,49659
  bool* value_;value_1449,49709
TEST(ActionTemplateTest, WorksForIntegralTemplateParams) {TEST1452,49729
ACTION_TEMPLATE(ReturnSmartPointer,ACTION_TEMPLATE1462,50099
TEST(ActionTemplateTest, WorksForTemplateTemplateParameters) {TEST1469,50365
struct GiantTemplate {GiantTemplate1479,50795
  explicit GiantTemplate(int a_value) : value(a_value) {}GiantTemplate1481,50827
  int value;value1482,50885
ACTION_TEMPLATE(ReturnGiant,ACTION_TEMPLATE1485,50902
TEST(ActionTemplateTest, WorksFor10TemplateParameters) {TEST1494,51354
  using Giant = GiantTemplate<std::shared_ptr<int>, bool, double, 5, true, 6,Giant1495,51411
ACTION_TEMPLATE(ReturnSum, HAS_1_TEMPLATE_PARAMS(typename, Number),ACTION_TEMPLATE1504,51835
TEST(ActionTemplateTest, WorksFor10ValueParameters) {TEST1509,52066
ACTION(ReturnSum) { return 0; }ACTION1517,52351
ACTION_P(ReturnSum, x) { return x; }ACTION_P1519,52384
ACTION_TEMPLATE(ReturnSum, HAS_1_TEMPLATE_PARAMS(typename, Number),ACTION_TEMPLATE1521,52422
ACTION_TEMPLATE(ReturnSum, HAS_1_TEMPLATE_PARAMS(typename, Number),ACTION_TEMPLATE1526,52578
ACTION_TEMPLATE(ReturnSum, HAS_2_TEMPLATE_PARAMS(typename, Number, int, k),ACTION_TEMPLATE1531,52743
TEST(ActionTemplateTest, CanBeOverloadedOnNumberOfValueParameters) {TEST1536,52929

build/_deps/googletest-src/googlemock/test/gmock-matchers-comparisons_test.cc,29312
namespace testing {testing46,1986
namespace gmock_matchers_test {gmock_matchers_test47,2006
namespace {__anone734d3e7011148,2038
TEST_P(MonotonicMatcherTestP, IsPrintable) {TEST_P52,2108
TEST(MatchResultListenerTest, StreamingWorks) {TEST58,2232
TEST(MatchResultListenerTest, CanAccessUnderlyingStream) {TEST74,2615
TEST(MatchResultListenerTest, IsInterestedWorks) {TEST81,2885
class EvenMatcherImpl : public MatcherInterface<int> {EvenMatcherImpl91,3266
  bool MatchAndExplain(int x,MatchAndExplain93,3330
  void DescribeTo(ostream* os) const override { *os << "is an even number"; }DescribeTo98,3465
TEST(MatcherInterfaceTest, CanBeImplementedUsingPublishedAPI) {TEST106,3768
class NewEvenMatcherImpl : public MatcherInterface<int> {NewEvenMatcherImpl112,3926
  bool MatchAndExplain(int x, MatchResultListener* listener) const override {MatchAndExplain114,3993
  void DescribeTo(ostream* os) const override { *os << "is an even number"; }DescribeTo126,4402
TEST(MatcherInterfaceTest, CanBeImplementedUsingNewAPI) {TEST129,4484
TEST(MatcherTest, CanBeDefaultConstructed) { Matcher<double> m; }TEST140,4841
TEST(MatcherTest, CanBeConstructedFromMatcherInterface) {TEST143,4981
TEST(MatcherTest, CanBeImplicitlyConstructedFromValue) {TEST151,5239
TEST(MatcherTest, CanBeImplicitlyConstructedFromNULL) {TEST158,5436
struct Undefined {Undefined167,5763
  static const int kInt = 1;kInt169,5810
TEST(MatcherTest, CanBeConstructedFromUndefinedVariable) {TEST172,5843
TEST(MatcherTest, CanAcceptAbstractClass) { Matcher<const Undefined&> m = _; }TEST179,6073
TEST(MatcherTest, IsCopyable) {TEST182,6190
TEST(MatcherTest, CanDescribeItself) {TEST196,6563
TEST_P(MatcherTestP, MatchAndExplain) {TEST_P201,6724
TEST(StringMatcherTest, CanBeImplicitlyConstructedFromCStringLiteral) {TEST214,7217
TEST(StringMatcherTest, CanBeImplicitlyConstructedFromString) {TEST226,7627
TEST(StringViewMatcherTest, CanBeImplicitlyConstructedFromCStringLiteral) {TEST239,8091
TEST(StringViewMatcherTest, CanBeImplicitlyConstructedFromString) {TEST251,8532
TEST(StringViewMatcherTest, CanBeImplicitlyConstructedFromStringView) {TEST263,8990
TEST(StringMatcherTest,TEST276,9548
TEST(MakeMatcherTest, ConstructsMatcherFromMatcherInterface) {TEST291,10056
const int g_bar = 1;g_bar298,10352
class ReferencesBarOrIsZeroImpl {ReferencesBarOrIsZeroImpl299,10373
  bool MatchAndExplain(const T& x, MatchResultListener* /* listener */) const {MatchAndExplain302,10440
  void DescribeTo(ostream* os) const { *os << "g_bar or zero"; }DescribeTo307,10583
  void DescribeNegationTo(ostream* os) const {DescribeNegationTo309,10649
PolymorphicMatcher<ReferencesBarOrIsZeroImpl> ReferencesBarOrIsZero() {ReferencesBarOrIsZero316,10881
TEST(MakePolymorphicMatcherTest, ConstructsMatcherUsingOldAPI) {TEST320,11018
class PolymorphicIsEvenImpl {PolymorphicIsEvenImpl338,11694
  void DescribeTo(ostream* os) const { *os << "is even"; }DescribeTo340,11733
  void DescribeNegationTo(ostream* os) const { *os << "is odd"; }DescribeNegationTo342,11793
  bool MatchAndExplain(const T& x, MatchResultListener* listener) const {MatchAndExplain345,11884
PolymorphicMatcher<PolymorphicIsEvenImpl> PolymorphicIsEven() {PolymorphicIsEven357,12262
TEST(MakePolymorphicMatcherTest, ConstructsMatcherUsingNewAPI) {TEST361,12387
TEST_P(MatcherCastTestP, FromPolymorphicMatcher) {TEST_P388,13238
class IntValue {IntValue400,13580
  explicit IntValue(int a_value) : value_(a_value) {}IntValue404,13687
  int value() const { return value_; }value406,13742
  int value_;value_409,13792
bool IsPositiveIntValue(const IntValue& foo) { return foo.value() > 0; }IsPositiveIntValue413,13868
TEST(MatcherCastTest, FromCompatibleType) {TEST417,14048
TEST(MatcherCastTest, FromConstReferenceToNonReference) {TEST433,14611
TEST(MatcherCastTest, FromReferenceToNonReference) {TEST441,14872
TEST(MatcherCastTest, FromNonReferenceToConstReference) {TEST449,15128
TEST(MatcherCastTest, FromNonReferenceToReference) {TEST457,15396
TEST(MatcherCastTest, FromSameType) {TEST467,15668
TEST(MatcherCastTest, FromAValue) {TEST476,15949
TEST(MatcherCastTest, FromAnImplicitlyConvertibleValue) {TEST484,16219
struct NonImplicitlyConstructibleTypeWithOperatorEq {NonImplicitlyConstructibleTypeWithOperatorEq491,16430
  friend bool operator==(operator ==492,16484
  friend bool operator==(operator ==497,16626
TEST(MatcherCastTest, NonImplicitlyConstructibleTypeWithOperatorEq) {TEST507,16980
namespace convertible_from_any {convertible_from_any538,18464
struct ConvertibleFromAny {ConvertibleFromAny540,18538
  ConvertibleFromAny(int a_value) : value(a_value) {}ConvertibleFromAny541,18566
  ConvertibleFromAny(const T& /*a_value*/) : value(-1) {ConvertibleFromAny543,18644
  int value;value546,18759
bool operator==(const ConvertibleFromAny& a, const ConvertibleFromAny& b) {operator ==549,18776
ostream& operator<<(ostream& os, const ConvertibleFromAny& a) {operator <<553,18884
TEST(MatcherCastTest, ConversionConstructorIsUsed) {TEST557,18975
TEST(MatcherCastTest, FromConvertibleFromAny) {TEST563,19200
struct IntReferenceWrapper {IntReferenceWrapper573,19517
  IntReferenceWrapper(const int& a_value) : value(&a_value) {}IntReferenceWrapper574,19546
  const int* value;value575,19609
bool operator==(const IntReferenceWrapper& a, const IntReferenceWrapper& b) {operator ==578,19633
TEST(MatcherCastTest, ValueIsNotCopied) {TEST582,19743
class Base {Base589,19983
  virtual ~Base() {}~Base591,20005
  Base() {}Base592,20026
class Derived : public Base {Derived599,20124
  Derived() : Base() {}Derived601,20163
  int i;i602,20187
class OtherDerived : public Base {};OtherDerived605,20200
TEST_P(SafeMatcherCastTestP, FromPolymorphicMatcher) {TEST_P610,20369
TEST(SafeMatcherCastTest, FromLosslesslyConvertibleArithmeticType) {TEST624,20796
TEST(SafeMatcherCastTest, FromBaseClass) {TEST637,21309
TEST(SafeMatcherCastTest, FromConstReferenceToReference) {TEST651,21745
TEST(SafeMatcherCastTest, FromNonReferenceToConstReference) {TEST661,22048
TEST(SafeMatcherCastTest, FromNonReferenceToReference) {TEST670,22437
TEST(SafeMatcherCastTest, FromSameType) {TEST680,22721
namespace convertible_from_any {convertible_from_any689,22923
TEST(SafeMatcherCastTest, ConversionConstructorIsUsed) {TEST690,22956
TEST(SafeMatcherCastTest, FromConvertibleFromAny) {TEST696,23189
TEST(SafeMatcherCastTest, ValueIsNotCopied) {TEST706,23514
TEST(ExpectThat, TakesLiterals) {TEST713,23762
TEST(ExpectThat, TakesFunctions) {TEST719,23879
  struct Helper {Helper720,23914
    static void Func() {}Func721,23932
TEST(ATest, MatchesAnyValue) {TEST729,24120
TEST(ATest, WorksForDerivedClass) {TEST743,24461
TEST(ATest, CanDescribeSelf) { EXPECT_EQ("is anything", Describe(A<bool>())); }TEST753,24755
TEST(AnTest, MatchesAnyValue) {TEST756,24887
TEST(AnTest, CanDescribeSelf) { EXPECT_EQ("is anything", Describe(An<int>())); }TEST771,25272
TEST(UnderscoreTest, MatchesAnyValue) {TEST775,25447
TEST(UnderscoreTest, CanDescribeSelf) {TEST790,25844
TEST(EqTest, MatchesEqualValue) {TEST796,26000
class Unprintable {Unprintable808,26297
  Unprintable() : c_('a') {}Unprintable810,26326
  bool operator==(const Unprintable& /* rhs */) const { return true; }operator ==812,26356
  char dummy_c() { return c_; }dummy_c814,26481
  char c_;c_817,26524
TEST(EqTest, CanDescribeSelf) {TEST820,26539
TEST(EqTest, IsPolymorphic) {TEST827,26791
TEST(TypedEqTest, ChecksEqualityForGivenType) {TEST838,27079
TEST(TypedEqTest, CanDescribeSelf) {TEST849,27387
struct Type {Type859,27791
  static bool IsTypeOf(const T& /* v */) { return true; }IsTypeOf860,27805
TEST(TypedEqTest, HasSpecifiedType) {TEST866,27923
TEST(GeTest, ImplementsGreaterThanOrEqual) {TEST873,28170
TEST(GeTest, CanDescribeSelf) {TEST881,28384
TEST(GtTest, ImplementsGreaterThan) {TEST887,28524
TEST(GtTest, CanDescribeSelf) {TEST895,28741
TEST(LeTest, ImplementsLessThanOrEqual) {TEST901,28881
TEST(LeTest, CanDescribeSelf) {TEST909,29100
TEST(LtTest, ImplementsLessThan) {TEST915,29240
TEST(LtTest, CanDescribeSelf) {TEST923,29489
TEST(NeTest, ImplementsNotEqual) {TEST929,29629
TEST(NeTest, CanDescribeSelf) {TEST937,29833
class MoveOnly {MoveOnly942,29940
  explicit MoveOnly(int i) : i_(i) {}MoveOnly944,29966
  bool operator==(const MoveOnly& other) const { return i_ == other.i_; }operator ==950,30171
  bool operator!=(const MoveOnly& other) const { return i_ != other.i_; }operator !=951,30245
  bool operator<(const MoveOnly& other) const { return i_ < other.i_; }operator <952,30319
  bool operator<=(const MoveOnly& other) const { return i_ <= other.i_; }operator <=953,30391
  bool operator>(const MoveOnly& other) const { return i_ > other.i_; }operator >954,30465
  bool operator>=(const MoveOnly& other) const { return i_ >= other.i_; }operator >=955,30537
  int i_;i_958,30622
struct MoveHelper {MoveHelper961,30636
TEST(ComparisonBaseTest, DISABLED_WorksWithMoveOnly) {TEST967,30822
TEST(IsEmptyTest, MatchesContainer) {TEST988,31405
TEST(IsEmptyTest, MatchesStdString) {TEST996,31609
TEST(IsEmptyTest, MatchesCString) {TEST1004,31798
TEST(IsNullTest, MatchesNullPointer) {TEST1013,32048
TEST(IsNullTest, StdFunction) {TEST1031,32497
  EXPECT_FALSE(m.Matches([] {}));__anone734d3e702021035,32634
TEST(IsNullTest, CanDescribeSelf) {TEST1039,32721
TEST(NotNullTest, MatchesNonNullPointer) {TEST1046,32941
TEST(NotNullTest, LinkedPtr) {TEST1059,33249
TEST(NotNullTest, ReferenceToConstLinkedPtr) {TEST1068,33497
TEST(NotNullTest, StdFunction) {TEST1077,33780
  EXPECT_TRUE(m.Matches([] {}));__anone734d3e703021080,33868
TEST(NotNullTest, CanDescribeSelf) {TEST1085,34007
TEST(RefTest, MatchesSameVariable) {TEST1092,34197
TEST(RefTest, CanDescribeSelf) {TEST1101,34405
TEST(RefTest, CanBeUsedAsMatcherForConstReference) {TEST1111,34676
TEST(RefTest, IsCovariant) {TEST1123,35023
TEST(RefTest, ExplainsResult) {TEST1137,35365
std::string FromStringLike(internal::StringLike<T> str) {FromStringLike1150,35709
TEST(StringLike, TestConversions) {TEST1154,35797
TEST(StrEqTest, MatchesEqualString) {TEST1168,36274
TEST(StrEqTest, CanDescribeSelf) {TEST1192,37174
TEST(StrNeTest, MatchesUnequalString) {TEST1206,37692
TEST(StrNeTest, CanDescribeSelf) {TEST1224,38332
TEST(StrCaseEqTest, MatchesEqualStringIgnoringCase) {TEST1229,38461
TEST(StrCaseEqTest, MatchesEqualStringWith0IgnoringCase) {TEST1250,39237
TEST(StrCaseEqTest, CanDescribeSelf) {TEST1275,40043
TEST(StrCaseNeTest, MatchesUnequalStringIgnoringCase) {TEST1280,40193
TEST(StrCaseNeTest, CanDescribeSelf) {TEST1301,40961
TEST(HasSubstrTest, WorksForStringClasses) {TEST1307,41180
TEST(HasSubstrTest, WorksForCStrings) {TEST1322,41778
TEST(HasSubstrTest, WorksForStringViewClasses) {TEST1341,42473
TEST(HasSubstrTest, CanDescribeSelf) {TEST1361,43355
TEST(KeyTest, CanDescribeSelf) {TEST1368,43548
TEST_P(KeyTestP, ExplainsResult) {TEST_P1374,43786
TEST(KeyTest, MatchesCorrectly) {TEST1382,44104
TEST(KeyTest, WorksWithMoveOnly) {TEST1390,44306
struct Tag {};Tag1398,44499
struct PairWithGet {PairWithGet1400,44515
  int member_1;member_11401,44536
  std::string member_2;member_21402,44552
  using first_type = int;first_type1403,44576
  using second_type = std::string;second_type1404,44602
  const int& GetImpl(Tag<0>) const { return member_1; }GetImpl1406,44638
  const std::string& GetImpl(Tag<1>) const { return member_2; }GetImpl1407,44694
auto get(const PairWithGet& value) -> decltype(value.GetImpl(Tag<I>())) {get1410,44781
TEST(PairTest, MatchesPairWithGetCorrectly) {TEST1413,44891
TEST(KeyTest, SafelyCastsInnerMatcher) {TEST1424,45203
TEST(KeyTest, InsideContainsUsingMap) {TEST1432,45429
TEST(KeyTest, InsideContainsUsingMultimap) {TEST1441,45710
TEST(PairTest, Typing) {TEST1457,46223
TEST(PairTest, CanDescribeSelf) {TEST1467,46622
TEST_P(PairTestP, CanExplainMatchResultTo) {TEST_P1485,47300
TEST(PairTest, MatchesCorrectly) {TEST1526,49010
TEST(PairTest, WorksWithMoveOnly) {TEST1546,49588
TEST(PairTest, SafelyCastsInnerMatchers) {TEST1552,49761
TEST(PairTest, InsideContainsUsingMap) {TEST1562,50082
TEST(FieldsAreTest, MatchesCorrectly) {TEST1575,50522
TEST(FieldsAreTest, CanDescribeSelf) {TEST1588,50927
TEST_P(FieldsAreTestP, CanExplainMatchResultTo) {TEST_P1600,51306
TEST(FieldsAreTest, StructuredBindings) {TEST1637,52859
  struct MyType {MyType1639,52979
    int i;i1640,52997
    std::string str;str1641,53008
  struct MyVarType1 {MyVarType11646,53144
    int a;a1647,53166
  struct MyVarType2 {MyVarType21650,53225
    int a, b;a1651,53247
    int a, b;b1651,53247
  struct MyVarType3 {MyVarType31654,53312
    int a, b, c;a1655,53334
    int a, b, c;b1655,53334
    int a, b, c;c1655,53334
  struct MyVarType4 {MyVarType41658,53405
    int a, b, c, d;a1659,53427
    int a, b, c, d;b1659,53427
    int a, b, c, d;c1659,53427
    int a, b, c, d;d1659,53427
  struct MyVarType5 {MyVarType51662,53504
    int a, b, c, d, e;a1663,53526
    int a, b, c, d, e;b1663,53526
    int a, b, c, d, e;c1663,53526
    int a, b, c, d, e;d1663,53526
    int a, b, c, d, e;e1663,53526
  struct MyVarType6 {MyVarType61666,53609
    int a, b, c, d, e, f;a1667,53631
    int a, b, c, d, e, f;b1667,53631
    int a, b, c, d, e, f;c1667,53631
    int a, b, c, d, e, f;d1667,53631
    int a, b, c, d, e, f;e1667,53631
    int a, b, c, d, e, f;f1667,53631
  struct MyVarType7 {MyVarType71670,53720
    int a, b, c, d, e, f, g;a1671,53742
    int a, b, c, d, e, f, g;b1671,53742
    int a, b, c, d, e, f, g;c1671,53742
    int a, b, c, d, e, f, g;d1671,53742
    int a, b, c, d, e, f, g;e1671,53742
    int a, b, c, d, e, f, g;f1671,53742
    int a, b, c, d, e, f, g;g1671,53742
  struct MyVarType8 {MyVarType81674,53837
    int a, b, c, d, e, f, g, h;a1675,53859
    int a, b, c, d, e, f, g, h;b1675,53859
    int a, b, c, d, e, f, g, h;c1675,53859
    int a, b, c, d, e, f, g, h;d1675,53859
    int a, b, c, d, e, f, g, h;e1675,53859
    int a, b, c, d, e, f, g, h;f1675,53859
    int a, b, c, d, e, f, g, h;g1675,53859
    int a, b, c, d, e, f, g, h;h1675,53859
  struct MyVarType9 {MyVarType91678,53960
    int a, b, c, d, e, f, g, h, i;a1679,53982
    int a, b, c, d, e, f, g, h, i;b1679,53982
    int a, b, c, d, e, f, g, h, i;c1679,53982
    int a, b, c, d, e, f, g, h, i;d1679,53982
    int a, b, c, d, e, f, g, h, i;e1679,53982
    int a, b, c, d, e, f, g, h, i;f1679,53982
    int a, b, c, d, e, f, g, h, i;g1679,53982
    int a, b, c, d, e, f, g, h, i;h1679,53982
    int a, b, c, d, e, f, g, h, i;i1679,53982
  struct MyVarType10 {MyVarType101682,54089
    int a, b, c, d, e, f, g, h, i, j;a1683,54112
    int a, b, c, d, e, f, g, h, i, j;b1683,54112
    int a, b, c, d, e, f, g, h, i, j;c1683,54112
    int a, b, c, d, e, f, g, h, i, j;d1683,54112
    int a, b, c, d, e, f, g, h, i, j;e1683,54112
    int a, b, c, d, e, f, g, h, i, j;f1683,54112
    int a, b, c, d, e, f, g, h, i, j;g1683,54112
    int a, b, c, d, e, f, g, h, i, j;h1683,54112
    int a, b, c, d, e, f, g, h, i, j;i1683,54112
    int a, b, c, d, e, f, g, h, i, j;j1683,54112
  struct MyVarType11 {MyVarType111686,54226
    int a, b, c, d, e, f, g, h, i, j, k;a1687,54249
    int a, b, c, d, e, f, g, h, i, j, k;b1687,54249
    int a, b, c, d, e, f, g, h, i, j, k;c1687,54249
    int a, b, c, d, e, f, g, h, i, j, k;d1687,54249
    int a, b, c, d, e, f, g, h, i, j, k;e1687,54249
    int a, b, c, d, e, f, g, h, i, j, k;f1687,54249
    int a, b, c, d, e, f, g, h, i, j, k;g1687,54249
    int a, b, c, d, e, f, g, h, i, j, k;h1687,54249
    int a, b, c, d, e, f, g, h, i, j, k;i1687,54249
    int a, b, c, d, e, f, g, h, i, j, k;j1687,54249
    int a, b, c, d, e, f, g, h, i, j, k;k1687,54249
  struct MyVarType12 {MyVarType121690,54369
    int a, b, c, d, e, f, g, h, i, j, k, l;a1691,54392
    int a, b, c, d, e, f, g, h, i, j, k, l;b1691,54392
    int a, b, c, d, e, f, g, h, i, j, k, l;c1691,54392
    int a, b, c, d, e, f, g, h, i, j, k, l;d1691,54392
    int a, b, c, d, e, f, g, h, i, j, k, l;e1691,54392
    int a, b, c, d, e, f, g, h, i, j, k, l;f1691,54392
    int a, b, c, d, e, f, g, h, i, j, k, l;g1691,54392
    int a, b, c, d, e, f, g, h, i, j, k, l;h1691,54392
    int a, b, c, d, e, f, g, h, i, j, k, l;i1691,54392
    int a, b, c, d, e, f, g, h, i, j, k, l;j1691,54392
    int a, b, c, d, e, f, g, h, i, j, k, l;k1691,54392
    int a, b, c, d, e, f, g, h, i, j, k, l;l1691,54392
  struct MyVarType13 {MyVarType131694,54518
    int a, b, c, d, e, f, g, h, i, j, k, l, m;a1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;b1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;c1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;d1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;e1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;f1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;g1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;h1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;i1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;j1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;k1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;l1695,54541
    int a, b, c, d, e, f, g, h, i, j, k, l, m;m1695,54541
  struct MyVarType14 {MyVarType141698,54673
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;a1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;b1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;c1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;d1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;e1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;f1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;g1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;h1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;i1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;j1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;k1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;l1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;m1699,54696
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n;n1699,54696
  struct MyVarType15 {MyVarType151703,54848
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;a1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;b1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;c1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;d1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;e1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;f1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;g1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;h1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;i1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;j1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;k1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;l1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;m1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;n1704,54871
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o;o1704,54871
  struct MyVarType16 {MyVarType161708,55029
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;a1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;b1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;c1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;d1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;e1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;f1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;g1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;h1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;i1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;j1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;k1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;l1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;m1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;n1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;o1709,55052
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;p1709,55052
  struct MyVarType17 {MyVarType171713,55216
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;a1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;b1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;c1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;d1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;e1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;f1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;g1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;h1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;i1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;j1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;k1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;l1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;m1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;n1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;o1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;p1714,55239
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;q1714,55239
  struct MyVarType18 {MyVarType181718,55409
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;a1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;b1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;c1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;d1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;e1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;f1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;g1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;h1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;i1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;j1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;k1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;l1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;m1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;n1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;o1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;p1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;q1719,55432
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;r1719,55432
  struct MyVarType19 {MyVarType191723,55608
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;a1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;b1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;c1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;d1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;e1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;f1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;g1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;h1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;i1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;j1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;k1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;l1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;m1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;n1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;o1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;p1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;q1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;r1724,55631
    int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;s1724,55631
TEST(PairTest, UseGetInsteadOfMembers) {TEST1731,55848
TEST(StartsWithTest, MatchesStringWithGivenPrefix) {TEST1744,56251
TEST(StartsWithTest, CanDescribeSelf) {TEST1766,57055
TEST(EndsWithTest, MatchesStringWithGivenSuffix) {TEST1773,57220
TEST(EndsWithTest, CanDescribeSelf) {TEST1796,58012
TEST(WhenBase64UnescapedTest, MatchesUnescapedBase64Strings) {TEST1803,58179
TEST(WhenBase64UnescapedTest, CanDescribeSelf) {TEST1823,59088
TEST(MatchesRegexTest, MatchesStringMatchingGivenRegex) {TEST1830,59309
TEST(MatchesRegexTest, CanDescribeSelf) {TEST1854,60279
TEST(ContainsRegexTest, MatchesStringContainingGivenRegex) {TEST1869,60824
TEST(ContainsRegexTest, CanDescribeSelf) {TEST1893,61822
TEST(StdWideStrEqTest, MatchesEqual) {TEST1908,62387
TEST(StdWideStrEqTest, CanDescribeSelf) {TEST1931,63181
TEST(StdWideStrNeTest, MatchesUnequalString) {TEST1948,63866
TEST(StdWideStrNeTest, CanDescribeSelf) {TEST1959,64206
TEST(StdWideStrCaseEqTest, MatchesEqualStringIgnoringCase) {TEST1964,64347
TEST(StdWideStrCaseEqTest, MatchesEqualStringWith0IgnoringCase) {TEST1976,64752
TEST(StdWideStrCaseEqTest, CanDescribeSelf) {TEST2001,65598
TEST(StdWideStrCaseNeTest, MatchesUnequalStringIgnoringCase) {TEST2006,65760
TEST(StdWideStrCaseNeTest, CanDescribeSelf) {TEST2018,66158
TEST(StdWideHasSubstrTest, WorksForStringClasses) {TEST2024,66390
TEST(StdWideHasSubstrTest, WorksForCStrings) {TEST2035,66864
TEST(StdWideHasSubstrTest, CanDescribeSelf) {TEST2048,67355
TEST(StdWideStartsWithTest, MatchesStringWithGivenPrefix) {TEST2055,67541
TEST(StdWideStartsWithTest, CanDescribeSelf) {TEST2069,68019
TEST(StdWideEndsWithTest, MatchesStringWithGivenSuffix) {TEST2076,68196
TEST(StdWideEndsWithTest, CanDescribeSelf) {TEST2090,68675
TEST(ExplainMatchResultTest, WorksWithPolymorphicMatcher) {TEST2097,68857
TEST(ExplainMatchResultTest, WorksWithMonomorphicMatcher) {TEST2107,69208
TEST(MatcherConstruct, ExplicitVsImplicit) {TEST2123,69806
    using M = Construct1ArgMatcherP<int>;M2135,70152
TEST(ExplainMatchResultTest, WorksInsideMATCHER) {TEST2150,70577
TEST(DescribeMatcherTest, WorksWithValue) {TEST2154,70664
TEST(DescribeMatcherTest, WorksWithMonomorphicMatcher) {TEST2159,70834
TEST(DescribeMatcherTest, WorksWithPolymorphicMatcher) {TEST2165,71063
TEST(WhenDynamicCastToTest, SameType) {TEST2175,71393
TEST(WhenDynamicCastToTest, WrongTypes) {TEST2187,71797
TEST(WhenDynamicCastToTest, AlreadyNull) {TEST2203,72424
struct AmbiguousCastTypes {AmbiguousCastTypes2209,72587
  class VirtualDerived : public virtual Base {};VirtualDerived2210,72615
  class DerivedSub1 : public VirtualDerived {};DerivedSub12211,72664
  class DerivedSub2 : public VirtualDerived {};DerivedSub22212,72712
  class ManyDerivedInHierarchy : public DerivedSub1, public DerivedSub2 {};ManyDerivedInHierarchy2213,72760
TEST(WhenDynamicCastToTest, AmbiguousCast) {TEST2216,72840
TEST(WhenDynamicCastToTest, Describe) {TEST2230,73382
TEST(WhenDynamicCastToTest, Explain) {TEST2239,73782
TEST(WhenDynamicCastToTest, GoodReference) {TEST2253,74363
TEST(WhenDynamicCastToTest, BadReference) {TEST2261,74635
class DivisibleByImpl {DivisibleByImpl2268,74834
  explicit DivisibleByImpl(int a_divider) : divider_(a_divider) {}DivisibleByImpl2270,74867
  bool MatchAndExplain(const T& n, MatchResultListener* listener) const {MatchAndExplain2274,75032
  void DescribeTo(ostream* os) const { *os << "is divisible by " << divider_; }DescribeTo2279,75217
  void DescribeNegationTo(ostream* os) const {DescribeNegationTo2281,75298
  void set_divider(int a_divider) { divider_ = a_divider; }set_divider2285,75397
  int divider() const { return divider_; }divider2286,75457
  int divider_;divider_2289,75511
PolymorphicMatcher<DivisibleByImpl> DivisibleBy(int n) {DivisibleBy2292,75531
TEST(ExplainMatchResultTest, AllOf_False_False) {TEST2298,75737
TEST(ExplainMatchResultTest, AllOf_False_True) {TEST2305,75998
TEST(ExplainMatchResultTest, AllOf_True_False) {TEST2312,76258
TEST(ExplainMatchResultTest, AllOf_True_True) {TEST2319,76495
TEST(ExplainMatchResultTest, AllOf_True_True_2) {TEST2324,76686
TEST_P(ExplainmatcherResultTestP, MonomorphicMatcher) {TEST_P2331,76878
TEST(PolymorphicMatcherTest, CanAccessMutableImpl) {TEST2337,77077
TEST(PolymorphicMatcherTest, CanAccessImpl) {TEST2347,77377

build/_deps/googletest-src/googlemock/test/gmock_output_test_.cc,1826
class MockFoo {MockFoo56,2104
  MockFoo() {}MockFoo58,2129
class GMockOutputTest : public testing::Test {GMockOutputTest69,2393
  NaggyMock<MockFoo> foo_;foo_71,2452
TEST_F(GMockOutputTest, ExpectedCall) {TEST_F74,2483
TEST_F(GMockOutputTest, ExpectedCallToVoidFunction) {TEST_F83,2671
TEST_F(GMockOutputTest, ExplicitActionsRunOut) {TEST_F92,2873
TEST_F(GMockOutputTest, UnexpectedCall) {TEST_F98,3074
TEST_F(GMockOutputTest, UnexpectedCallToVoidFunction) {TEST_F105,3229
TEST_F(GMockOutputTest, ExcessiveCall) {TEST_F112,3398
TEST_F(GMockOutputTest, ExcessiveCallToVoidFunction) {TEST_F119,3551
TEST_F(GMockOutputTest, UninterestingCall) {TEST_F126,3718
TEST_F(GMockOutputTest, UninterestingCallToVoidFunction) {TEST_F130,3808
TEST_F(GMockOutputTest, RetiredExpectation) {TEST_F134,3912
TEST_F(GMockOutputTest, UnsatisfiedPrerequisite) {TEST_F143,4141
TEST_F(GMockOutputTest, UnsatisfiedPrerequisites) {TEST_F157,4458
TEST_F(GMockOutputTest, UnsatisfiedWith) {TEST_F170,4814
TEST_F(GMockOutputTest, UnsatisfiedExpectation) {TEST_F174,4904
TEST_F(GMockOutputTest, MismatchArguments) {TEST_F181,5054
TEST_F(GMockOutputTest, MismatchWith) {TEST_F189,5248
TEST_F(GMockOutputTest, MismatchArgumentsAndWith) {TEST_F196,5402
TEST_F(GMockOutputTest, UnexpectedCallWithDefaultAction) {TEST_F203,5591
TEST_F(GMockOutputTest, ExcessiveCallWithDefaultAction) {TEST_F213,6015
TEST_F(GMockOutputTest, UninterestingCallWithDefaultAction) {TEST_F226,6508
TEST_F(GMockOutputTest, ExplicitActionsRunOutWithDefaultAction) {TEST_F234,6870
TEST_F(GMockOutputTest, CatchesLeakedMocks) {TEST_F242,7168
TEST_F(GMockOutputTest, PrintsMatcher) {TEST_F263,7721
void TestCatchesLeakedMocksInAdHocTests() {TestCatchesLeakedMocksInAdHocTests268,7875
int main(int argc, char** argv) {main278,8072

build/_deps/googletest-src/googlemock/test/gmock-matchers-misc_test.cc,13305
namespace testing {testing44,1967
namespace gmock_matchers_test {gmock_matchers_test45,1987
namespace {__anon47f4a265011146,2019
TEST(AddressTest, NonConst) {TEST48,2032
TEST(AddressTest, Const) {TEST63,2256
TEST(AddressTest, MatcherDoesntCopy) {TEST74,2430
TEST(AddressTest, Describe) {TEST81,2599
class NotCopyable {NotCopyable92,2995
  explicit NotCopyable(int a_value) : value_(a_value) {}NotCopyable94,3024
  int value() const { return value_; }value96,3082
  bool operator==(const NotCopyable& rhs) const {operator ==98,3122
  bool operator>=(const NotCopyable& rhs) const {operator >=102,3212
  int value_;value_107,3312
TEST(ByRefTest, AllowsNotCopyableConstValueInMatchers) {TEST113,3430
TEST(ByRefTest, AllowsNotCopyableValueInMatchers) {TEST122,3688
TEST(IsEmptyTest, ImplementsIsEmpty) {TEST131,3911
TEST(IsEmptyTest, WorksWithString) {TEST140,4151
TEST(IsEmptyTest, CanDescribeSelf) {TEST149,4364
TEST(IsEmptyTest, ExplainsResult) {TEST155,4529
TEST(IsEmptyTest, WorksWithMoveOnly) {TEST163,4752
TEST(IsTrueTest, IsTrueIsFalse) {TEST169,4879
class ContainerEqTest : public testing::Test {};ContainerEqTest210,6242
    ContainerEqTestTypes;ContainerEqTestTypes213,6370
TYPED_TEST(ContainerEqTest, EqualsSelf) {TYPED_TEST218,6510
TYPED_TEST(ContainerEqTest, ValueMissing) {TYPED_TEST227,6805
TYPED_TEST(ContainerEqTest, ValueAdded) {TYPED_TEST239,7257
TYPED_TEST(ContainerEqTest, ValueAddedAndRemoved) {TYPED_TEST250,7724
TYPED_TEST(ContainerEqTest, DuplicateDifference) {TYPED_TEST264,8249
TEST(ContainerEqExtraTest, MultipleValuesMissing) {TEST278,8832
TEST(ContainerEqExtraTest, MultipleValuesAdded) {TEST291,9350
TEST(ContainerEqExtraTest, MultipleValuesAddedAndRemoved) {TEST303,9854
TEST(ContainerEqExtraTest, MultiSetOfIntDuplicateDifference) {TEST318,10463
TEST(ContainerEqExtraTest, WorksForMaps) {TEST332,11041
TEST(ContainerEqExtraTest, WorksForNativeArray) {TEST351,11543
TEST(ContainerEqExtraTest, WorksForTwoDimensionalNativeArray) {TEST360,11744
TEST(ContainerEqExtraTest, WorksForNativeArrayAsTuple) {TEST374,12258
TEST(ContainerEqExtraTest, CopiesNativeArrayParameter) {TEST387,12645
namespace {__anon47f4a2650211399,12994
class BacktrackingMaxBPMState {BacktrackingMaxBPMState406,13278
  explicit BacktrackingMaxBPMState(const Graph* g) : graph_(g) {}BacktrackingMaxBPMState409,13356
  ElementMatcherPairs Compute() {Compute411,13423
  static const size_t kUnused = static_cast<size_t>(-1);kUnused426,13866
  void PushMatch(size_t lhs, size_t rhs) {PushMatch428,13924
  void PopMatch() {PopMatch437,14164
  bool RecurseInto(size_t irhs) {RecurseInto444,14343
  const Graph* graph_;  // not ownedgraph_467,14912
  std::vector<size_t> lhs_used_;lhs_used_468,14949
  std::vector<size_t> rhs_used_;rhs_used_469,14982
  ElementMatcherPairs matches_;matches_470,15015
  ElementMatcherPairs best_so_far_;best_so_far_471,15047
const size_t BacktrackingMaxBPMState<Graph>::kUnused;kUnused475,15113
ElementMatcherPairs FindBacktrackingMaxBPM(const Graph& g) {FindBacktrackingMaxBPM482,15349
class BacktrackingBPMTest : public ::testing::Test {};BacktrackingBPMTest486,15468
class BipartiteTest : public ::testing::TestWithParam<size_t> {};BipartiteTest490,15669
TEST_P(BipartiteTest, Exhaustive) {TEST_P493,15800
class BipartiteNonSquareTestBipartiteNonSquareTest521,16903
TEST_F(BipartiteNonSquareTest, SimpleBacktracking) {TEST_F524,17002
TEST_P(BipartiteNonSquareTest, Exhaustive) {TEST_P544,17575
class BipartiteRandomTestBipartiteRandomTest565,18420
TEST_P(BipartiteRandomTest, LargerNets) {TEST_P569,18555
TEST(IsReadableTypeNameTest, ReturnsTrueForShortNames) {TEST601,19787
TEST(IsReadableTypeNameTest, ReturnsTrueForLongNonTemplateNonFunctionNames) {TEST608,20062
TEST(IsReadableTypeNameTest, ReturnsFalseForLongTemplateNames) {TEST614,20357
TEST(IsReadableTypeNameTest, ReturnsFalseForLongFunctionTypeNames) {TEST620,20596
TEST(FormatMatcherDescriptionTest, WorksForEmptyDescription) {TEST626,20778
TEST_P(MatcherTupleTestP, ExplainsMatchFailure) {TEST_P642,21315
class SampleOptional {SampleOptional674,22479
  using value_type = T;value_type676,22511
  explicit SampleOptional(T value)SampleOptional677,22535
  SampleOptional() : value_(), has_value_(false) {}SampleOptional679,22624
  operator bool() const { return has_value_; }operator bool680,22676
  const T& operator*() const { return value_; }operator *681,22723
  T value_;value_684,22782
  bool has_value_;has_value_685,22794
TEST(OptionalTest, DescribesSelf) {TEST688,22817
TEST(OptionalTest, ExplainsSelf) {TEST693,22963
TEST(OptionalTest, MatchesNonEmptyOptional) {TEST699,23213
TEST(OptionalTest, DoesNotMatchNullopt) {TEST709,23562
TEST(OptionalTest, WorksWithMoveOnly) {TEST715,23724
class SampleVariantIntString {SampleVariantIntString720,23915
  SampleVariantIntString(int i) : i_(i), has_int_(true) {}SampleVariantIntString722,23955
  SampleVariantIntString(const std::string& s) : s_(s), has_int_(false) {}SampleVariantIntString723,24014
  friend bool holds_alternative(const SampleVariantIntString& value) {holds_alternative726,24114
  friend const T& get(const SampleVariantIntString& value) {get731,24272
  const int& get_impl(int*) const { return i_; }get_impl736,24401
  const std::string& get_impl(std::string*) const { return s_; }get_impl737,24450
  int i_;i_739,24516
  std::string s_;s_740,24526
  bool has_int_;has_int_741,24544
TEST(VariantTest, DescribesSelf) {TEST744,24565
TEST(VariantTest, ExplainsSelf) {TEST750,24829
TEST(VariantTest, FullMatch) {TEST760,25247
TEST(VariantTest, TypeDoesNotMatch) {TEST768,25494
TEST(VariantTest, InnerDoesNotMatch) {TEST776,25750
class SampleAnyType {SampleAnyType784,26007
  explicit SampleAnyType(int i) : index_(0), i_(i) {}SampleAnyType786,26038
  explicit SampleAnyType(const std::string& s) : index_(1), s_(s) {}SampleAnyType787,26092
  friend const T* any_cast(const SampleAnyType* any) {any_cast790,26186
  int index_;index_795,26308
  int i_;i_796,26322
  std::string s_;s_797,26332
  const int* get_impl(int*) const { return index_ == 0 ? &i_ : nullptr; }get_impl799,26351
  const std::string* get_impl(std::string*) const {get_impl800,26425
TEST(AnyWithTest, FullMatch) {TEST805,26525
TEST(AnyWithTest, TestBadCastType) {TEST810,26653
TEST(AnyWithTest, TestUseInContainers) {TEST815,26801
TEST(AnyWithTest, TestCompare) {TEST831,27354
TEST(AnyWithTest, DescribesSelf) {TEST835,27444
TEST(AnyWithTest, ExplainsSelf) {TEST841,27704
TEST(ArgsTest, AcceptsZeroTemplateArg) {TEST852,28094
TEST(ArgsTest, AcceptsOneTemplateArg) {TEST858,28277
TEST(ArgsTest, AcceptsTwoTemplateArgs) {TEST865,28527
TEST(ArgsTest, AcceptsRepeatedTemplateArgs) {TEST873,28750
TEST(ArgsTest, AcceptsDecreasingTemplateArgs) {TEST879,28939
TEST(ArgsTest, AcceptsMoreTemplateArgsThanArityOfOriginalTuple) {TEST889,29228
TEST(ArgsTest, CanBeNested) {TEST894,29437
TEST(ArgsTest, CanMatchTupleByValue) {TEST900,29645
  typedef std::tuple<char, int, int> Tuple3;Tuple3901,29684
TEST(ArgsTest, CanMatchTupleByReference) {TEST907,29869
  typedef std::tuple<char, char, int> Tuple3;Tuple3908,29912
TEST(ArgsTest, AcceptsTenTemplateArgs) {TEST917,30227
TEST(ArgsTest, DescirbesSelfCorrectly) {TEST926,30632
TEST(ArgsTest, DescirbesNestedArgsCorrectly) {TEST934,30868
TEST(ArgsTest, DescribesNegationCorrectly) {TEST943,31181
TEST(ArgsTest, ExplainsMatchResultWithoutInnerExplanation) {TEST951,31426
class LessThanMatcher : public MatcherInterface<std::tuple<char, int>> {LessThanMatcher960,31807
  void DescribeTo(::std::ostream* /*os*/) const override {}DescribeTo962,31889
  bool MatchAndExplain(std::tuple<char, int> value,MatchAndExplain964,31950
Matcher<std::tuple<char, int>> LessThan() {LessThan975,32289
TEST(ArgsTest, ExplainsMatchResultWithInnerExplanation) {TEST979,32379
TEST(MatcherMacroTest, Works) {TEST995,32941
TEST(MatcherMacroTest, DescriptionCanReferenceNegationAndParameters) {TEST1039,34280
TEST(MatcherMacroTest, CanExplainMatchResult) {TEST1050,34697
TEST(MatcherMacroTest, CanReferenceArgType) {TEST1073,35290
namespace matcher_test {matcher_test1083,35573
TEST(MatcherMacroTest, WorksInNamespace) {TEST1087,35674
TEST(MatcherMacroTest, CanBeComposedUsingValue) {TEST1098,35963
TEST(MatcherPMacroTest, Works) {TEST1108,36256
TEST(MatcherPMacroTest, GeneratesCorrectDescription) {TEST1122,36749
class UncopyableFoo {UncopyableFoo1134,37159
  explicit UncopyableFoo(char value) : value_(value) { (void)value_; }UncopyableFoo1136,37190
  char value_;value_1142,37370
TEST(MatcherPMacroTest, WorksWhenExplicitlyInstantiatedWithReference) {TEST1147,37466
TEST(MatcherPnMacroTest, CanReferenceParamTypes) {TEST1173,38344
TEST(MatcherPnMacroTest, WorksWhenExplicitlyInstantiatedWithReferences) {TEST1184,38671
TEST(MatcherPnMacroTest,TEST1201,39242
TEST(MatcherPnMacroTest, Works) {TEST1221,39996
TEST(MatcherPnMacroTest, CanBeOverloadedOnNumberOfParameters) {TEST1258,41421
TEST(MatcherPnMacroTest, WorksForDifferentParameterTypes) {TEST1298,43492
  char suffix_char = static_cast<char>(suffix);suffix_char1311,44051
TEST(MatcherPnMacroTest, SimpleTypePromotion) {TEST1315,44144
TEST(MatcherPnMacroTest, TypesAreCorrect) {TEST1326,44539
  const int count = static_cast<int>(Value(arg, m1)) +count1370,46153
TEST(MatcherPnMacroTest, CanUseMatcherTypedParameterInValue) {TEST1376,46341
TEST(ContainsTimes, ListMatchesWhenElementQuantityMatches) {TEST1385,46588
TEST_P(ContainsTimesP, ExplainsMatchResultCorrectly) {TEST_P1404,47360
TEST(ContainsTimes, DescribesItselfCorrectly) {TEST1444,48594
TEST(AllOfArrayTest, BasicForms) {TEST1456,48960
TEST(AllOfArrayTest, Matchers) {TEST1498,50407
TEST(AnyOfArrayTest, BasicForms) {TEST1511,50807
TEST(AnyOfArrayTest, Matchers) {TEST1551,52204
TEST_P(AnyOfArrayTestP, ExplainsMatchResultCorrectly) {TEST_P1563,52593
TEST(MatcherMacroTest, WorksOnMoveOnlyType) {TEST1602,54285
TEST(MatcherPMacroTest, WorksOnMoveOnlyType) {TEST1612,54613
TEST(ThrowsTest, Examples) {TEST1624,54986
      std::function<void()>([]() { throw std::runtime_error("message"); }),__anon47f4a26503021626,55030
      std::function<void()>([]() { throw std::runtime_error("message"); }),__anon47f4a26504021630,55159
TEST(ThrowsTest, PrintsExceptionWhat) {TEST1634,55302
      std::function<void()>([]() { throw std::runtime_error("ABC123XYZ"); }),__anon47f4a26505021636,55357
TEST(ThrowsTest, DoesNotGenerateDuplicateCatchClauseWarning) {TEST1640,55504
  EXPECT_THAT(std::function<void()>([]() { throw std::exception(); }),__anon47f4a26506021641,55567
TEST(ThrowsTest, CallableExecutedExactlyOnce) {TEST1645,55682
  EXPECT_THAT(std::function<void()>([&a]() {__anon47f4a26507021648,55747
  EXPECT_THAT(std::function<void()>([&a]() {__anon47f4a26508021655,55908
  EXPECT_THAT(std::function<void()>([&a]() {__anon47f4a26509021662,56111
  EXPECT_THAT(std::function<void()>([&a]() {__anon47f4a2650a021669,56341
TEST(ThrowsTest, Describe) {TEST1678,56622
TEST(ThrowsTest, Success) {TEST1686,56870
      []() { throw std::runtime_error("error message"); }, &listener));__anon47f4a2650b021690,57048
TEST(ThrowsTest, FailWrongType) {TEST1694,57187
      []() { throw std::logic_error("error message"); }, &listener));__anon47f4a2650c021698,57372
TEST(ThrowsTest, FailWrongTypeNonStd) {TEST1703,57570
  EXPECT_FALSE(matcher.MatchAndExplain([]() { throw 10; }, &listener));__anon47f4a2650d021706,57721
TEST(ThrowsTest, FailNoThrow) {TEST1711,57894
  EXPECT_FALSE(matcher.MatchAndExplain([]() { (void)0; }, &listener));__anon47f4a2650e021714,58037
class ThrowsPredicateTestThrowsPredicateTest1718,58185
TEST_P(ThrowsPredicateTest, Describe) {TEST_P1721,58275
TEST_P(ThrowsPredicateTest, Success) {TEST_P1730,58572
      []() { throw std::runtime_error("error message"); }, &listener));__anon47f4a2650f021734,58743
TEST_P(ThrowsPredicateTest, FailWrongType) {TEST_P1738,58882
      []() { throw std::logic_error("error message"); }, &listener));__anon47f4a26510021742,59060
TEST_P(ThrowsPredicateTest, FailWrongTypeNonStd) {TEST_P1747,59258
  EXPECT_FALSE(matcher.MatchAndExplain([]() { throw 10; }, &listener));__anon47f4a26511021750,59402
TEST_P(ThrowsPredicateTest, FailNoThrow) {TEST_P1755,59575
  EXPECT_FALSE(matcher.MatchAndExplain([]() {}, &listener));__anon47f4a26512021758,59711
TEST(ThrowsPredicateCompilesTest, ExceptionMatcherAcceptsBroadType) {TEST1768,60116
        matcher.Matches([]() { throw std::runtime_error("error message"); }));__anon47f4a26513021773,60323
        matcher.Matches([]() { throw std::runtime_error("wrong message"); }));__anon47f4a26514021775,60420
    EXPECT_TRUE(matcher.Matches([]() { throw(uint32_t) 10; }));__anon47f4a26515021781,60616
    EXPECT_FALSE(matcher.Matches([]() { throw(uint32_t) 11; }));__anon47f4a26516021782,60680
TEST(ThrowsPredicateCompilesTest, MessageMatcherAcceptsNonMatcher) {TEST1788,60854
      matcher.Matches([]() { throw std::runtime_error("error message"); }));__anon47f4a26517021792,61039
      []() { throw std::runtime_error("wrong error message"); }));__anon47f4a26518021794,61148

build/_deps/googletest-src/googlemock/test/gmock-nice-strict_test.cc,3443
class Mock {Mock41,1815
  Mock() {}Mock43,1837
namespace testing {testing52,1968
namespace gmock_nice_strict_test {gmock_nice_strict_test53,1988
class NotDefaultConstructible {NotDefaultConstructible66,2292
  explicit NotDefaultConstructible(int) {}NotDefaultConstructible68,2333
class CallsMockMethodInDestructor {CallsMockMethodInDestructor71,2380
  ~CallsMockMethodInDestructor() { OnDestroy(); }~CallsMockMethodInDestructor73,2425
class Foo {Foo79,2566
  virtual ~Foo() {}~Foo81,2587
class MockFoo : public Foo {MockFoo87,2678
  MockFoo() {}MockFoo89,2716
  void Delete() { delete this; }Delete90,2731
class MockBar {MockBar101,3009
  explicit MockBar(const std::string& s) : str_(s) {}MockBar103,3034
  MockBar(char a1, char a2, std::string a3, std::string a4, int a5, int a6,MockBar105,3089
  virtual ~MockBar() {}~MockBar112,3412
  const std::string& str() const { return str_; }str114,3437
  std::string str_;str_120,3574
class MockBaz {MockBaz126,3682
  class MoveOnly {MoveOnly128,3707
  MockBaz(MoveOnly) {}MockBaz139,3945
TEST(RawMockTest, WarningForUninterestingCall) {TEST145,4075
TEST(RawMockTest, WarningForUninterestingCallAfterDeath) {TEST162,4544
TEST(RawMockTest, InfoForUninterestingCall) {TEST180,5084
TEST(RawMockTest, IsNaggy_IsNice_IsStrict) {TEST193,5422
TEST(NiceMockTest, NoWarningForUninterestingCall) {TEST201,5683
TEST(NiceMockTest, NoWarningForUninterestingCallAfterDeath) {TEST212,5975
TEST(NiceMockTest, InfoForUninterestingCall) {TEST225,6354
TEST(NiceMockTest, AllowsExpectedCall) {TEST241,6795
TEST(NiceMockTest, ThrowsExceptionForUnknownReturnTypes) {TEST251,7093
TEST(NiceMockTest, UnexpectedCallFails) {TEST266,7543
TEST(NiceMockTest, NonDefaultConstructor) {TEST275,7830
TEST(NiceMockTest, NonDefaultConstructor10) {TEST285,8087
TEST(NiceMockTest, AllowLeak) {TEST294,8337
TEST(NiceMockTest, MoveOnlyConstructor) {TEST301,8506
TEST(NiceMockTest, AcceptsClassNamedMock) {TEST307,8711
TEST(NiceMockTest, IsNiceInDestructor) {TEST313,8832
TEST(NiceMockTest, IsNaggy_IsNice_IsStrict) {TEST320,9023
TEST(NaggyMockTest, WarningForUninterestingCall) {TEST330,9332
TEST(NaggyMockTest, WarningForUninterestingCallAfterDeath) {TEST347,9826
TEST(NaggyMockTest, AllowsExpectedCall) {TEST367,10414
TEST(NaggyMockTest, UnexpectedCallFails) {TEST375,10606
TEST(NaggyMockTest, NonDefaultConstructor) {TEST385,10925
TEST(NaggyMockTest, NonDefaultConstructor10) {TEST395,11189
TEST(NaggyMockTest, AllowLeak) {TEST404,11447
TEST(NaggyMockTest, MoveOnlyConstructor) {TEST411,11619
TEST(NaggyMockTest, AcceptsClassNamedMock) {TEST417,11828
TEST(NaggyMockTest, IsNaggyInDestructor) {TEST423,11954
TEST(NaggyMockTest, IsNaggy_IsNice_IsStrict) {TEST439,12403
TEST(StrictMockTest, AllowsExpectedCall) {TEST447,12664
TEST(StrictMockTest, UnexpectedCallFails) {TEST455,12862
TEST(StrictMockTest, UninterestingCallFails) {TEST464,13159
TEST(StrictMockTest, UninterestingCallFailsAfterDeath) {TEST473,13459
TEST(StrictMockTest, NonDefaultConstructor) {TEST485,13880
TEST(StrictMockTest, NonDefaultConstructor10) {TEST495,14217
TEST(StrictMockTest, AllowLeak) {TEST504,14549
TEST(StrictMockTest, MoveOnlyConstructor) {TEST511,14724
TEST(StrictMockTest, AcceptsClassNamedMock) {TEST517,14937
TEST(StrictMockTest, IsStrictInDestructor) {TEST523,15068
TEST(StrictMockTest, IsNaggy_IsNice_IsStrict) {TEST533,15365

build/_deps/googletest-src/googlemock/test/gmock-matchers_test.h,1783
#define GOOGLEMOCK_TEST_GMOCK_MATCHERS_TEST_H_GOOGLEMOCK_TEST_GMOCK_MATCHERS_TEST_H_35,1724
namespace testing {testing66,2333
namespace gmock_matchers_test {gmock_matchers_test67,2353
struct ContainerHelper {ContainerHelper98,3447
struct GtestGreaterThanMatcher {GtestGreaterThanMatcher104,3600
  using is_gtest_matcher = void;is_gtest_matcher105,3633
  void DescribeTo(ostream* os) const { *os << "is > " << rhs; }DescribeTo107,3667
  void DescribeNegationTo(ostream* os) const { *os << "is <= " << rhs; }DescribeNegationTo108,3731
  bool MatchAndExplain(T lhs, MatchResultListener* listener) const {MatchAndExplain110,3805
  T rhs;rhs122,4164
GtestGreaterThanMatcher<typename std::decay<T>::type> GtestGreaterThan(GtestGreaterThan126,4199
class GreaterThanMatcher : public MatcherInterface<T> {GreaterThanMatcher133,4401
  explicit GreaterThanMatcher(T rhs) : impl_{rhs} {}GreaterThanMatcher135,4466
  void DescribeTo(ostream* os) const override { impl_.DescribeTo(os); }DescribeTo137,4520
  void DescribeNegationTo(ostream* os) const override {DescribeNegationTo138,4592
  bool MatchAndExplain(T lhs, MatchResultListener* listener) const override {MatchAndExplain142,4687
  const GtestGreaterThanMatcher<T> impl_;impl_147,4829
#define INSTANTIATE_GTEST_MATCHER_TEST_P(INSTANTIATE_GTEST_MATCHER_TEST_P151,4938
class GTestMatcherTestP : public testing::TestWithParam<bool> {GTestMatcherTestP156,5242
  Matcher<T> GreaterThan(T n) {GreaterThan159,5339
  const bool use_gtest_matcher_ = GetParam();use_gtest_matcher_166,5514
std::string Describe(const Matcher<T>& m) {Describe171,5635
std::string DescribeNegation(const Matcher<T>& m) {DescribeNegation177,5801
std::string Explain(const MatcherType& m, const Value& x) {Explain183,6000

build/_deps/googletest-src/googlemock/test/gmock-actions_test.cc,20855
namespace testing {testing62,2330
namespace {__anonebb6c626011163,2350
TEST(TypeTraits, Negation) {TEST67,2412
struct MyFalse : std::integral_constant<int, 0> {};MyFalse104,3846
struct MyTrue : std::integral_constant<int, -1> {};MyTrue107,3914
TEST(TypeTraits, Conjunction) {TEST109,3967
  struct Empty {};Empty135,4956
TEST(TypeTraits, Disjunction) {TEST148,5388
  struct Empty {};Empty174,6365
TEST(TypeTraits, IsInvocableRV) {TEST187,6801
  struct C {C188,6835
    int operator()() const { return 0; }operator ()189,6848
    void operator()(int) & {}operator ()190,6889
    std::string operator()(int) && { return ""; };operator ()191,6919
    struct NonMoveable {NonMoveable227,8708
    struct Callable {Callable234,8879
      NonMoveable operator()() { return NonMoveable(); }operator ()235,8901
TEST(BuiltInDefaultValueTest, IsNullForPointerTypes) {TEST256,9802
TEST(BuiltInDefaultValueTest, ExistsForPointerTypes) {TEST263,10109
TEST(BuiltInDefaultValueTest, IsZeroForNumericTypes) {TEST271,10423
TEST(BuiltInDefaultValueTest, ExistsForNumericTypes) {TEST300,11874
TEST(BuiltInDefaultValueTest, IsFalseForBool) {TEST324,13214
TEST(BuiltInDefaultValueTest, BoolExists) {TEST329,13379
TEST(BuiltInDefaultValueTest, IsEmptyStringForString) {TEST335,13561
TEST(BuiltInDefaultValueTest, ExistsForString) {TEST341,13768
TEST(BuiltInDefaultValueTest, WorksForConstTypes) {TEST347,13996
class MyDefaultConstructible {MyDefaultConstructible355,14333
  MyDefaultConstructible() : value_(42) {}MyDefaultConstructible357,14373
  int value() const { return value_; }value359,14417
  int value_;value_362,14467
class MyNonDefaultConstructible {MyNonDefaultConstructible366,14529
  explicit MyNonDefaultConstructible(int a_value) : value_(a_value) {}MyNonDefaultConstructible369,14607
  int value() const { return value_; }value371,14679
  int value_;value_374,14729
TEST(BuiltInDefaultValueTest, ExistsForDefaultConstructibleType) {TEST377,14747
TEST(BuiltInDefaultValueTest, IsDefaultConstructedForDefaultConstructibleType) {TEST381,14887
TEST(BuiltInDefaultValueTest, DoesNotExistForNonDefaultConstructibleType) {TEST385,15048
TEST(BuiltInDefaultValueDeathTest, IsUndefinedForReferences) {TEST390,15266
TEST(BuiltInDefaultValueDeathTest, IsUndefinedForNonDefaultConstructibleType) {TEST395,15483
TEST(DefaultValueTest, IsInitiallyUnset) {TEST401,15725
TEST(DefaultValueTest, CanBeSetAndUnset) {TEST408,16007
TEST(DefaultValueDeathTest, GetReturnsBuiltInDefaultValueWhenUnset) {TEST435,16980
TEST(DefaultValueTest, GetWorksForMoveOnlyIfSet) {TEST447,17432
      [] { return std::unique_ptr<int>(new int(42)); });__anonebb6c6260202451,17663
TEST(DefaultValueTest, GetWorksForVoid) { return DefaultValue<void>::Get(); }TEST458,17929
TEST(DefaultValueOfReferenceTest, IsInitiallyUnset) {TEST463,18120
TEST(DefaultValueOfReferenceTest, IsInitiallyNotExisting) {TEST470,18412
TEST(DefaultValueOfReferenceTest, CanBeSetAndUnset) {TEST477,18712
TEST(DefaultValueOfReferenceDeathTest, GetReturnsBuiltInDefaultValueWhenUnset) {TEST502,19606
typedef int MyGlobalFunction(bool, int);MyGlobalFunction514,20067
class MyActionImpl : public ActionInterface<MyGlobalFunction> {MyActionImpl516,20109
  int Perform(const std::tuple<bool, int>& args) override {Perform518,20182
TEST(ActionInterfaceTest, CanBeImplementedByDefiningPerform) {TEST523,20304
TEST(ActionInterfaceTest, MakeAction) {TEST528,20425
TEST(ActionTest, CanBeConstructedFromActionInterface) {TEST541,20980
TEST(ActionTest, DelegatesWorkToActionInterface) {TEST546,21161
TEST(ActionTest, IsCopyable) {TEST554,21431
class IsNotZero : public ActionInterface<bool(int)> {  // NOLINTIsNotZero580,22387
  bool Perform(const std::tuple<int>& arg) override {Perform582,22461
TEST(ActionTest, CanBeConvertedToOtherActionType) {TEST587,22557
class ReturnSecondArgumentAction {ReturnSecondArgumentAction598,23006
  Result Perform(const ArgumentTuple& args) {Perform604,23297
class ReturnZeroFromNullaryFunctionAction {ReturnZeroFromNullaryFunctionAction611,23471
  Result Perform(const std::tuple<>&) const {Perform621,23902
PolymorphicAction<ReturnSecondArgumentAction> ReturnSecondArgument() {ReturnSecondArgument629,24092
ReturnZeroFromNullaryFunction() {ReturnZeroFromNullaryFunction634,24283
TEST(MakePolymorphicActionTest, ConstructsActionFromImpl) {TEST640,24507
TEST(MakePolymorphicActionTest, WorksWhenPerformHasOneTemplateParameter) {TEST647,24840
TEST(ReturnTest, WorksForVoid) {TEST657,25208
TEST(ReturnTest, ReturnsGivenValue) {TEST663,25374
TEST(ReturnTest, AcceptsStringLiteral) {TEST672,25623
TEST(ReturnTest, SupportsReferenceLikeReturnType) {TEST683,26062
  struct Result {Result685,26193
    const std::vector<int>* v;v686,26211
    Result(const std::vector<int>& v) : v(&v) {}  // NOLINTResult687,26242
TEST(ReturnTest, PrefersConversionOperator) {TEST710,27153
  struct Out {Out717,27363
    int x;x718,27378
    explicit Out(const int x) : x(x) {}Out720,27390
    explicit Out(const In&) : x(0) {}Out721,27430
  struct In {In724,27474
    operator Out() const { return Out{19}; }  // NOLINToperator Out725,27488
  EXPECT_THAT([]() -> Out { return In(); }(), Field(&Out::x, 19));__anonebb6c6260302731,27757
TEST(ReturnTest, ConversionRequiresConstLvalueReference) {TEST745,28414
  using R = int;R746,28473
  using U = std::reference_wrapper<const int>;U747,28490
TEST(ReturnTest, ConversionRequiresMutableLvalueReference) {TEST763,29094
  struct S {S769,29421
    S(std::string&) {}  // NOLINTS770,29434
  using RA = decltype(Return(std::string()));RA784,29960
TEST(ReturnTest, MoveOnlyResultType) {TEST792,30172
struct Base {Base812,30842
  bool operator==(const Base&) { return true; }operator ==813,30856
struct Derived : public Base {Derived816,30908
  bool operator==(const Derived&) { return true; }operator ==817,30939
TEST(ReturnTest, IsCovariant) {TEST820,30994
class FromType {FromType834,31491
  explicit FromType(bool* is_converted) : converted_(is_converted) {}FromType836,31517
  bool* converted() const { return converted_; }converted837,31587
  bool* const converted_;converted_840,31647
class ToType {ToType843,31677
  ToType(const FromType& x) { *x.converted() = true; }  // NOLINTToType846,31769
TEST(ReturnTest, ConvertsArgumentWhenConverted) {TEST849,31839
TEST(ReturnNullTest, WorksInPointerReturningFunction) {TEST862,32354
TEST(ReturnNullTest, WorksInSmartPointerReturningFunction) {TEST872,32732
TEST(ReturnRefTest, WorksForReference) {TEST881,33103
TEST(ReturnRefTest, IsCovariant) {TEST889,33326
bool CanCallReturnRef(T&&) {CanCallReturnRef900,33642
bool CanCallReturnRef(Unused) { return false; }CanCallReturnRef903,33688
TEST(ReturnRefTest, WorksForNonTemporary) {TEST906,33801
TEST(ReturnRefTest, DoesNotWorkForTemporary) {TEST921,34277
  auto scalar_value = []() -> int { return 123; };__anonebb6c6260402922,34324
  auto non_scalar_value = []() -> std::string { return "ABC"; };__anonebb6c6260502925,34426
  auto const_non_scalar_value = []() -> const std::string { return "CBA"; };__anonebb6c6260602932,34729
TEST(ReturnRefOfCopyTest, WorksForReference) {TEST937,34929
TEST(ReturnRefOfCopyTest, IsCovariant) {TEST950,35305
TEST(ReturnRoundRobinTest, WorksForInitList) {TEST961,35627
TEST(ReturnRoundRobinTest, WorksForVector) {TEST973,36070
class MockClass {MockClass987,36580
  MockClass() {}MockClass989,36607
TEST(DoDefaultTest, ReturnsBuiltInDefaultValueByDefault) {TEST1007,37263
TEST(DoDefaultDeathTest, DiesForUnknowType) {TEST1015,37583
void VoidFunc(bool /* flag */) {}VoidFunc1028,37915
TEST(DoDefaultDeathTest, DiesIfUsedInCompositeAction) {TEST1030,37950
TEST(DoDefaultTest, ReturnsUserSpecifiedPerTypeDefaultValueWhenThereIsOne) {TEST1044,38536
TEST(DoDefaultTest, DoesWhatOnCallSpecifies) {TEST1053,38851
TEST(DoDefaultTest, CannotBeUsedInOnCall) {TEST1061,39139
TEST(SetArgPointeeTest, SetsTheNthPointee) {TEST1072,39474
  typedef void MyFunction(bool, int*, char*);MyFunction1073,39519
TEST(SetArgPointeeTest, AcceptsStringLiteral) {TEST1091,39930
  typedef void MyFunction(std::string*, const char**);MyFunction1092,39978
TEST(SetArgPointeeTest, AcceptsWideStringLiteral) {TEST1107,40370
  typedef void MyFunction(const wchar_t**);MyFunction1108,40422
  typedef void MyStringFunction(std::wstring*);MyStringFunction1116,40646
TEST(SetArgPointeeTest, AcceptsCharPointer) {TEST1126,40913
  typedef void MyFunction(bool, std::string*, const char**);MyFunction1127,40959
TEST(SetArgPointeeTest, AcceptsWideCharPointer) {TEST1145,41458
  typedef void MyFunction(bool, const wchar_t**);MyFunction1146,41508
  typedef void MyStringFunction(bool, std::wstring*);MyStringFunction1155,41764
TEST(SetArgumentPointeeTest, SetsTheNthPointee) {TEST1167,42161
  typedef void MyFunction(bool, int*, char*);MyFunction1168,42211
int Nullary() { return 1; }Nullary1186,42636
class NullaryFunctor {NullaryFunctor1188,42665
  int operator()() { return 2; }operator ()1190,42697
bool g_done = false;g_done1193,42734
void VoidNullary() { g_done = true; }VoidNullary1194,42755
class VoidNullaryFunctor {VoidNullaryFunctor1196,42794
  void operator()() { g_done = true; }operator ()1198,42830
short Short(short n) { return n; }  // NOLINTShort1201,42873
char Char(char ch) { return ch; }Char1202,42919
const char* CharPtr(const char* s) { return s; }CharPtr1204,42954
bool Unary(int x) { return x < 0; }Unary1206,43004
const char* Binary(const char* input, short n) { return input + n; }  // NOLINTBinary1208,43041
void VoidBinary(int, char) { g_done = true; }VoidBinary1210,43122
int Ternary(int x, char y, short z) { return x + y + z; }  // NOLINTTernary1212,43169
int SumOf4(int a, int b, int c, int d) { return a + b + c + d; }SumOf41214,43239
class Foo {Foo1216,43305
  Foo() : value_(123) {}Foo1218,43326
  int Nullary() const { return value_; }Nullary1220,43352
  int value_;value_1223,43404
TEST(InvokeWithoutArgsTest, Function) {TEST1227,43460
TEST(InvokeWithoutArgsTest, Functor) {TEST1244,44042
TEST(InvokeWithoutArgsTest, Method) {TEST1262,44657
TEST(IgnoreResultTest, PolymorphicAction) {TEST1270,44908
int ReturnOne() {ReturnOne1277,45104
TEST(IgnoreResultTest, MonomorphicAction) {TEST1282,45154
MyNonDefaultConstructible ReturnMyNonDefaultConstructible(double /* x */) {ReturnMyNonDefaultConstructible1291,45399
TEST(IgnoreResultTest, ActionReturningClass) {TEST1296,45535
TEST(AssignTest, Int) {TEST1304,45755
TEST(AssignTest, String) {TEST1311,45886
TEST(AssignTest, CompatibleTypes) {TEST1318,46052
TEST(DoAll, SupportsRefQualifiedActions) {TEST1326,46275
  struct InitialAction {InitialAction1327,46318
    void operator()(const int arg) && { EXPECT_EQ(17, arg); }operator ()1328,46343
  struct FinalAction {FinalAction1331,46411
    int operator()() && { return 19; }operator ()1332,46434
TEST(DoAll, ProvidesLvalueReferencesToInitialActions) {TEST1344,46915
  struct Obj {};Obj1345,46971
    struct InitialAction {InitialAction1350,47134
      void operator()(Obj&) const { FAIL() << "Unexpected call"; }operator ()1351,47161
      void operator()(const Obj&) const {}operator ()1352,47228
      void operator()(Obj&&) const { FAIL() << "Unexpected call"; }operator ()1353,47271
      void operator()(const Obj&&) const { FAIL() << "Unexpected call"; }operator ()1354,47339
        .WillOnce(DoAll(InitialAction{}, InitialAction{}, [](Obj&&) {}))__anonebb6c62607021359,47483
        .WillRepeatedly(DoAll(InitialAction{}, InitialAction{}, [](Obj&&) {}));__anonebb6c62608021360,47556
    struct InitialAction {InitialAction1369,47823
      void operator()(Obj&) const { FAIL() << "Unexpected call"; }operator ()1370,47850
      void operator()(const Obj&) const {}operator ()1371,47917
      void operator()(Obj&&) const { FAIL() << "Unexpected call"; }operator ()1372,47960
      void operator()(const Obj&&) const { FAIL() << "Unexpected call"; }operator ()1373,48028
        .WillOnce(DoAll(InitialAction{}, InitialAction{}, [](const Obj&) {}))__anonebb6c62609021378,48179
            DoAll(InitialAction{}, InitialAction{}, [](const Obj&) {}));__anonebb6c6260a021380,48282
    struct InitialAction {InitialAction1389,48564
      void operator()(Obj&) const {}operator ()1390,48591
      void operator()(Obj&&) const { FAIL() << "Unexpected call"; }operator ()1391,48628
        .WillOnce(DoAll(InitialAction{}, InitialAction{}, [](Obj&) {}))__anonebb6c6260b021396,48767
        .WillRepeatedly(DoAll(InitialAction{}, InitialAction{}, [](Obj&) {}));__anonebb6c6260c021397,48839
    struct InitialAction {InitialAction1408,49181
      void operator()(Obj&) const {}operator ()1409,49208
      void operator()(Obj&&) const { FAIL() << "Unexpected call"; }operator ()1410,49245
        .WillOnce(DoAll(InitialAction{}, InitialAction{}, [](Obj&&) {}))__anonebb6c6260d021415,49386
        .WillRepeatedly(DoAll(InitialAction{}, InitialAction{}, [](Obj&&) {}));__anonebb6c6260e021416,49459
    struct InitialAction {InitialAction1424,49687
      void operator()(Obj&) && {}operator ()1425,49714
        .WillOnce(DoAll(InitialAction{}, InitialAction{}, [](Obj&) {}));__anonebb6c6260f021430,49819
    struct InitialAction {InitialAction1437,49946
      void operator()(Obj&) && {}operator ()1438,49973
        .WillOnce(DoAll(InitialAction{}, InitialAction{}, [](Obj&&) {}));__anonebb6c62610021443,50080
TEST(DoAll, SupportsTypeErasedActions) {TEST1451,50308
  const Action<void()> initial_action = [] {};__anonebb6c62611021453,50385
  const Action<int()> final_action = [] { return 17; };__anonebb6c62612021454,50432
    struct FinalAction {FinalAction1465,50786
      int operator()() && { return 17; }operator ()1469,50887
TEST(WithArgsTest, OneArg) {TEST1480,51154
TEST(WithArgsTest, TwoArgs) {TEST1487,51428
struct ConcatAll {ConcatAll1494,51673
  std::string operator()() const { return {}; }operator ()1495,51692
  std::string operator()(const char* a, I... i) const {operator ()1497,51767
TEST(WithArgsTest, TenArgs) {TEST1503,51929
class SubtractAction : public ActionInterface<int(int, int)> {SubtractAction1512,52329
  int Perform(const std::tuple<int, int>& args) override {Perform1514,52401
TEST(WithArgsTest, NonInvokeAction) {TEST1519,52518
TEST(WithArgsTest, Identity) {TEST1528,52866
TEST(WithArgsTest, RepeatedArguments) {TEST1535,53115
TEST(WithArgsTest, ReversedArgumentOrder) {TEST1542,53363
TEST(WithArgsTest, ArgsOfCompatibleTypes) {TEST1550,53687
TEST(WithArgsTest, VoidAction) {TEST1558,53993
TEST(WithArgsTest, ReturnReference) {TEST1565,54193
  Action<int&(int&, void*)> aa = WithArgs<0>([](int& a) -> int& { return a; });__anonebb6c62613021566,54231
TEST(WithArgsTest, InnerActionWithConversion) {TEST1572,54416
  Action<Derived*()> inner = [] { return nullptr; };__anonebb6c62614021573,54464
TEST(WithArgsTest, RefQualifiedInnerAction) {TEST1586,54890
  struct SomeAction {SomeAction1587,54936
    int operator()(const int arg) && {operator ()1588,54958
class SetErrnoAndReturnTest : public testing::Test {SetErrnoAndReturnTest1601,55229
  void SetUp() override { errno = 0; }SetUp1603,55294
  void TearDown() override { errno = 0; }TearDown1604,55333
TEST_F(SetErrnoAndReturnTest, Int) {TEST_F1607,55379
TEST_F(SetErrnoAndReturnTest, Ptr) {TEST_F1613,55549
TEST_F(SetErrnoAndReturnTest, CompatibleTypes) {TEST_F1620,55729
TEST(ByRefTest, IsCopyable) {TEST1631,56022
TEST(ByRefTest, ConstValue) {TEST1652,56554
TEST(ByRefTest, NonConstValue) {TEST1661,56824
TEST(ByRefTest, ExplicitType) {TEST1674,57112
TEST(ByRefTest, PrintsCorrectly) {TEST1703,57788
struct UnaryConstructorClass {UnaryConstructorClass1711,58051
  explicit UnaryConstructorClass(int v) : value(v) {}UnaryConstructorClass1712,58082
  int value;value1713,58136
TEST(ReturnNewTest, Unary) {TEST1717,58206
TEST(ReturnNewTest, UnaryWorksWhenMockMethodHasArgs) {TEST1724,58417
TEST(ReturnNewTest, UnaryWorksWhenMockMethodReturnsPointerToConst) {TEST1732,58677
class TenArgConstructorClass {TenArgConstructorClass1740,58946
  TenArgConstructorClass(int a1, int a2, int a3, int a4, int a5, int a6, int a7,TenArgConstructorClass1742,58986
  int value_;value_1745,59185
TEST(ReturnNewTest, ConstructorThatTakes10Arguments) {TEST1749,59262
std::unique_ptr<int> UniquePtrSource() {UniquePtrSource1758,59591
std::vector<std::unique_ptr<int>> VectorUniquePtrSource() {VectorUniquePtrSource1762,59679
TEST(MockMethodTest, CanReturnMoveOnlyValue_Return) {TEST1768,59829
TEST(MockMethodTest, CanReturnMoveOnlyValue_DoAllReturn) {TEST1790,60580
TEST(MockMethodTest, CanReturnMoveOnlyValue_Invoke) {TEST1804,61087
      [] { return std::unique_ptr<int>(new int(42)); });__anonebb6c62615021809,61235
TEST(MockMethodTest, CanTakeMoveOnlyValue) {TEST1827,61859
  auto make = [](int i) { return std::unique_ptr<int>(new int(i)); };__anonebb6c62616021829,61922
  EXPECT_CALL(mock, TakeUnique(_)).WillRepeatedly([](std::unique_ptr<int> i) {__anonebb6c62617021831,61993
      .WillOnce([](const std::unique_ptr<int>& i, std::unique_ptr<int> j) {__anonebb6c62618021854,62852
  EXPECT_CALL(mock, TakeUnique(_)).WillOnce([&saved](std::unique_ptr<int> i) {__anonebb6c62619021861,63092
TEST(MockMethodTest, ActionHasRvalueRefQualifiedCallOperator) {TEST1872,63486
  struct Return17 {Return171873,63550
    int operator()() && { return 17; }operator ()1874,63570
TEST(MockMethodTest, ActionHasMultipleCallOperators) {TEST1898,64305
  struct ReturnInt {ReturnInt1899,64360
    int operator()() && { return 17; }operator ()1900,64381
    int operator()() const& { return 19; }operator ()1901,64420
TEST(MockMethodTest, MoveOnlyAction) {TEST1927,65163
    struct Return17 {Return171930,65224
      int operator()() && { return 17; }operator ()1937,65408
    struct Return17 {Return171947,65611
      int operator()() const { return 17; }operator ()1954,65795
TEST(MockMethodTest, ActionReturnsIgnoredValue) {TEST1965,66120
  struct ReturnInt {ReturnInt1966,66170
    int operator()() const { return 0; }operator ()1967,66191
TEST(MockMethodTest, WillOnceCanAcceptLvalueReference) {TEST1979,66554
  const auto action = [] { return 17; };__anonebb6c6261a021982,66640
struct StaticAssertSingleArgument {StaticAssertSingleArgument1990,66914
  static constexpr bool CheckArgs() {CheckArgs1992,66980
  int operator()(Args...) const {operator ()1998,67144
TEST(MockMethodTest, ActionSwallowsAllArguments) {TEST2007,67500
struct ActionWithTemplatedConversionOperators {ActionWithTemplatedConversionOperators2017,67795
  operator OnceAction<int(Args...)>() && {  // NOLINToperator OnceAction<int(Args...)>2019,67873
    return [] { return 17; };__anonebb6c6261b022020,67927
  operator Action<int(Args...)>() const {  // NOLINToperator Action<int(Args...)>2024,67992
    return [] { return 19; };__anonebb6c6261c022025,68045
TEST(MockMethodTest, ActionHasTemplatedConversionOperators) {TEST2032,68279
int Add(int val, int& ref, int* ptr) {  // NOLINTAdd2044,68646
int Deref(std::unique_ptr<int> ptr) { return *ptr; }Deref2051,68774
struct Double {Double2053,68828
  T operator()(T t) {operator ()2055,68868
std::unique_ptr<int> UniqueInt(int i) {UniqueInt2060,68916
TEST(FunctorActionTest, ActionFromFunction) {TEST2064,69002
TEST(FunctorActionTest, ActionFromLambda) {TEST2075,69328
  Action<int(bool, int)> a1 = [](bool b, int i) { return b ? i : 0; };__anonebb6c6261d022076,69372
  Action<void(std::unique_ptr<int>)> a2 = [&saved](std::unique_ptr<int> p) {__anonebb6c6261e022081,69583
TEST(FunctorActionTest, PolymorphicFunctor) {TEST2088,69763
TEST(FunctorActionTest, TypeConversion) {TEST2095,70013
  const Action<bool(int)> a1 = [](int i) { return i > 1; };__anonebb6c6261f022097,70092
  const Action<bool(std::string)> s1 = [](std::string s) { return !s.empty(); };__anonebb6c62620022103,70345
  const Action<bool(std::string)> x1 = [](Unused) { return 42; };__anonebb6c62621022109,70650
  const Action<bool(std::string)> x2 = [] { return 42; };__anonebb6c62622022110,70716
  std::function<int()> f = [] { return 7; };__anonebb6c62623022115,70922
TEST(FunctorActionTest, UnusedArguments) {TEST2124,71139
  Action<int(int, double y, double z)> a = [](int i, Unused, Unused) {__anonebb6c62624022126,71241
TEST(MoveOnlyArgumentsTest, ReturningActions) {TEST2134,71512
  a = testing::WithoutArgs([]() { return 7; });__anonebb6c62625022138,71665
ACTION(ReturnArity) { return std::tuple_size<args_type>::value; }ACTION2147,71924
TEST(ActionMacro, LargeArity) {TEST2149,71991

build/_deps/googletest-src/googlemock/cmake/gmock_main.pc.in,0

build/_deps/googletest-src/googlemock/cmake/gmock.pc.in,0

build/_deps/googletest-src/googlemock/CMakeLists.txt,411
option(gmock_build_tests "Build all of Google Mock's own tests." OFF)gmock_build_tests11,384
  set(gtest_dir gtest)gtest_dir15,561
  set(gtest_dir ../googletest)gtest_dir17,591
project(gmock VERSION ${GOOGLETEST_VERSION} LANGUAGES CXX C)gmock41,1404
  option(BUILD_SHARED_LIBS "Build shared libraries (DLLs)." OFF)BUILD_SHARED_LIBS58,2115
set(gmock_build_include_dirsgmock_build_include_dirs69,2547

build/_deps/googletest-src/googlemock/README.md,107
# Googletest Mocking (gMock) FrameworkGoogletest Mocking (gMock) Framework1,0
### OverviewOverview3,40

build/_deps/googletest-src/googlemock/include/gmock/gmock-spec-builders.h,16158
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_SPEC_BUILDERS_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_SPEC_BUILDERS_H_62,2608
namespace testing {testing89,3254
namespace internal {internal99,3503
class GTEST_API_ UntypedFunctionMockerBase {UntypedFunctionMockerBase139,4918
  typedef std::vector<const void*> UntypedOnCallSpecs;UntypedOnCallSpecs202,7689
  using UntypedExpectations = std::vector<std::shared_ptr<ExpectationBase>>;UntypedExpectations204,7745
  const void* mock_obj_;  // Protected by g_gmock_mutex.mock_obj_213,8167
  const char* name_;  // Protected by g_gmock_mutex.name_217,8322
  UntypedOnCallSpecs untyped_on_call_specs_;untyped_on_call_specs_220,8432
  UntypedExpectations untyped_expectations_;untyped_expectations_231,8950
class UntypedOnCallSpecBase {UntypedOnCallSpecBase235,9076
  UntypedOnCallSpecBase(const char* a_file, int a_line)UntypedOnCallSpecBase238,9179
  const char* file() const { return file_; }file242,9364
  int line() const { return line_; }line243,9409
  enum Clause {Clause247,9517
    kNone,kNone250,9636
    kWith,kWith251,9647
    kWillByDefaultkWillByDefault252,9658
  void AssertSpecProperty(bool property,AssertSpecProperty256,9749
  void ExpectSpecProperty(bool property,ExpectSpecProperty262,9984
  const char* file_;file_267,10153
  int line_;line_268,10174
  Clause last_clause_;last_clause_272,10313
class OnCallSpec : public UntypedOnCallSpecBase {OnCallSpec277,10445
  typedef typename Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple279,10504
  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;ArgumentMatcherTuple280,10565
  OnCallSpec(const char* a_file, int a_line,OnCallSpec284,10754
  OnCallSpec& With(const Matcher<const ArgumentTuple&>& m) {With294,11234
  OnCallSpec& WillByDefault(const Action<F>& action) {WillByDefault306,11613
  bool Matches(const ArgumentTuple& args) const {Matches319,12102
  const Action<F>& GetAction() const {GetAction324,12278
  ArgumentMatcherTuple matchers_;matchers_345,13033
  Matcher<const ArgumentTuple&> extra_matcher_;extra_matcher_346,13067
  Action<F> action_;action_347,13115
enum CallReaction {CallReaction351,13207
  kAllow,kAllow352,13227
  kWarn,kWarn353,13237
  kFail,kFail354,13246
class GTEST_API_ Mock {Mock360,13329
class GTEST_API_ Expectation {Expectation477,18262
  bool operator==(const Expectation& rhs) const {operator ==503,19297
  bool operator!=(const Expectation& rhs) const { return !(*this == rhs); }operator !=507,19407
  class Less {Less522,19898
    bool operator()(const Expectation& lhs, const Expectation& rhs) const {operator ()524,19924
  typedef ::std::set<Expectation, Less> Set;Set529,20084
  const std::shared_ptr<internal::ExpectationBase>& expectation_base() const {expectation_base535,20274
  std::shared_ptr<internal::ExpectationBase> expectation_base_;expectation_base_540,20459
class ExpectationSet {ExpectationSet556,20975
  typedef Expectation::Set::const_iterator const_iterator;const_iterator559,21079
  typedef Expectation::Set::value_type value_type;value_type562,21207
  ExpectationSet() {}ExpectationSet565,21289
  ExpectationSet(internal::ExpectationBase& exp) {  // NOLINTExpectationSet570,21447
  ExpectationSet(const Expectation& e) {  // NOLINTExpectationSet577,21745
  bool operator==(const ExpectationSet& rhs) const {operator ==586,22035
  bool operator!=(const ExpectationSet& rhs) const { return !(*this == rhs); }operator !=590,22140
  ExpectationSet& operator+=(const Expectation& e) {operator +=594,22291
  int size() const { return static_cast<int>(expectations_.size()); }size599,22396
  const_iterator begin() const { return expectations_.begin(); }begin601,22467
  const_iterator end() const { return expectations_.end(); }end602,22532
  Expectation::Set expectations_;expectations_605,22604
class GTEST_API_ Sequence {Sequence611,22852
  Sequence() : last_expectation_(new Expectation) {}Sequence614,22924
  std::shared_ptr<Expectation> last_expectation_;last_expectation_622,23222
class GTEST_API_ InSequence {InSequence649,24276
  bool sequence_created_;sequence_created_655,24359
} GTEST_ATTRIBUTE_UNUSED_;GTEST_ATTRIBUTE_UNUSED_659,24481
namespace internal {internal661,24509
class GTEST_API_ ExpectationBase {ExpectationBase681,25306
  const char* file() const { return file_; }file689,25604
  int line() const { return line_; }line690,25649
  const char* source_text() const { return source_text_.c_str(); }source_text691,25686
  const Cardinality& cardinality() const { return cardinality_; }cardinality693,25817
  void DescribeLocationTo(::std::ostream* os) const {DescribeLocationTo696,25945
  enum Clause {Clause713,26522
    kNone,kNone715,26589
    kWith,kWith716,26600
    kTimes,kTimes717,26611
    kInSequence,kInSequence718,26623
    kAfter,kAfter719,26640
    kWillOnce,kWillOnce720,26652
    kWillRepeatedly,kWillRepeatedly721,26667
    kRetiresOnSaturationkRetiresOnSaturation722,26688
  typedef std::vector<const void*> UntypedActions;UntypedActions725,26719
  void AssertSpecProperty(bool property,AssertSpecProperty732,26967
  void ExpectSpecProperty(bool property,ExpectSpecProperty738,27206
  bool cardinality_specified() const { return cardinality_specified_; }cardinality_specified749,27663
  void set_cardinality(const Cardinality& a_cardinality) {set_cardinality752,27788
  bool is_retired() const GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {is_retired764,28244
  void Retire() GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {Retire770,28407
  bool IsSatisfied() const GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {IsSatisfied776,28593
  bool IsSaturated() const GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {IsSaturated782,28831
  bool IsOverSaturated() const GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {IsOverSaturated788,29074
  int call_count() const GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {call_count803,29695
  void IncrementCallCount() GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {IncrementCallCount809,29891
  const char* file_;               // The file that contains the expectation.file_831,30679
  int line_;                       // The line number of the expectation.line_832,30757
  const std::string source_text_;  // The EXPECT_CALL(...) source text.source_text_833,30831
  bool cardinality_specified_;cardinality_specified_835,30969
  Cardinality cardinality_;  // The cardinality of the expectation.cardinality_836,31000
  ExpectationSet immediate_prerequisites_;immediate_prerequisites_843,31429
  int call_count_;  // How many times this expectation has been invoked.call_count_847,31593
  bool retired_;    // True if and only if this expectation has retired.retired_848,31666
  UntypedActions untyped_actions_;untyped_actions_849,31739
  bool extra_matcher_specified_;extra_matcher_specified_850,31774
  bool repeated_action_specified_;  // True if a WillRepeatedly() was specified.repeated_action_specified_851,31807
  bool retires_on_saturation_;retires_on_saturation_852,31888
  Clause last_clause_;last_clause_853,31919
  mutable bool action_count_checked_;  // Under mutex_.action_count_checked_854,31942
  mutable Mutex mutex_;                // Protects action_count_checked_.mutex_855,31998
class TypedExpectation<R(Args...)> : public ExpectationBase {TypedExpectation863,32282
  using F = R(Args...);F865,32354
  typedef typename Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple868,32388
  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;ArgumentMatcherTuple869,32449
  typedef typename Function<F>::Result Result;Result870,32524
  TypedExpectation(FunctionMocker<F>* owner, const char* a_file, int a_line,TypedExpectation872,32572
  ~TypedExpectation() override {~TypedExpectation884,33164
  TypedExpectation& With(const Matcher<const ArgumentTuple&>& m) {With895,33574
  TypedExpectation& Times(const Cardinality& a_cardinality) {Times913,34146
  TypedExpectation& Times(int n) { return Times(Exactly(n)); }Times919,34318
  TypedExpectation& InSequence(const Sequence& s) {InSequence922,34424
  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2) {InSequence932,34800
  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2,InSequence935,34919
  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2,InSequence939,35093
  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2,InSequence943,35291
  TypedExpectation& After(const ExpectationSet& s) {After950,35583
  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2) {After962,36024
  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2,After965,36140
  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2,After969,36312
  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2,After973,36514
  TypedExpectation& WillOnce(OnceAction<F> once_action) {WillOnce981,36920
  TypedExpectation& WillOnce(Action<F> action) {WillOnce996,37612
  TypedExpectation& WillRepeatedly(const Action<F>& action) {WillRepeatedly1011,38125
  TypedExpectation& RetiresOnSaturation() {RetiresOnSaturation1036,39020
  const ArgumentMatcherTuple& matchers() const { return matchers_; }matchers1051,39563
  const Matcher<const ArgumentTuple&>& extra_matcher() const {extra_matcher1054,39691
  const Action<F>& repeated_action() const { return repeated_action_; }repeated_action1059,39853
  void MaybeDescribeExtraMatcherTo(::std::ostream* os) override {MaybeDescribeExtraMatcherTo1063,40029
  struct ActionAdaptor {ActionAdaptor1077,40425
    std::shared_ptr<OnceAction<R(Args...)>> once_action;once_action1078,40450
    R operator()(Args&&... args) const {operator ()1080,40508
  Expectation GetHandle() override { return owner_->GetHandleOf(this); }GetHandle1087,40719
  bool Matches(const ArgumentTuple& args) constMatches1094,41022
  bool ShouldHandleArguments(const ArgumentTuple& args) constShouldHandleArguments1102,41325
  void ExplainMatchResultTo(const ArgumentTuple& args, ::std::ostream* os) constExplainMatchResultTo1116,41939
  const Action<F>& GetCurrentAction(const FunctionMocker<F>* mocker,GetCurrentAction1159,43735
  const Action<F>* GetActionForArguments(const FunctionMocker<F>* mocker,GetActionForArguments1196,45436
  FunctionMocker<F>* const owner_;owner_1226,46443
  ArgumentMatcherTuple matchers_;matchers_1227,46478
  Matcher<const ArgumentTuple&> extra_matcher_;extra_matcher_1228,46512
  Action<F> repeated_action_;repeated_action_1229,46560
class MockSpec {MockSpec1251,47480
  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple1253,47506
      typename internal::Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;ArgumentMatcherTuple1255,47587
  MockSpec(internal::FunctionMocker<F>* function_mocker,MockSpec1259,47776
  internal::OnCallSpec<F>& InternalDefaultActionSetAt(const char* file,InternalDefaultActionSetAt1265,48049
  internal::TypedExpectation<F>& InternalExpectedAt(const char* file, int line,InternalExpectedAt1275,48577
  MockSpec<F>& operator()(const internal::WithoutMatchers&, void* const) {operator ()1288,49308
  internal::FunctionMocker<F>* const function_mocker_;function_mocker_1297,49535
  ArgumentMatcherTuple matchers_;matchers_1299,49640
class ReferenceOrValueWrapper {ReferenceOrValueWrapper1312,50240
  explicit ReferenceOrValueWrapper(T value) : value_(std::move(value)) {}ReferenceOrValueWrapper1315,50339
  T Unwrap() { return std::move(value_); }Unwrap1320,50590
  const T& Peek() const { return value_; }Peek1326,50898
  T value_;value_1329,50952
class ReferenceOrValueWrapper<T&> {ReferenceOrValueWrapper1335,51079
  typedef T& reference;reference1339,51247
  explicit ReferenceOrValueWrapper(reference ref) : value_ptr_(&ref) {}ReferenceOrValueWrapper1340,51271
  T& Unwrap() { return *value_ptr_; }Unwrap1341,51343
  const T& Peek() const { return *value_ptr_; }Peek1342,51381
  T* value_ptr_;value_ptr_1345,51440
void PrintAsActionResult(const T& result, std::ostream& os) {PrintAsActionResult1350,51537
class Cleanup final {Cleanup1362,52055
  explicit Cleanup(std::function<void()> f) : f_(std::move(f)) {}Cleanup1364,52086
  ~Cleanup() { f_(); }~Cleanup1365,52152
  std::function<void()> f_;f_1368,52186
class FunctionMocker<R(Args...)> final : public UntypedFunctionMockerBase {FunctionMocker1375,52303
  using F = R(Args...);F1376,52379
  using Result = R;Result1379,52413
  using ArgumentTuple = std::tuple<Args...>;ArgumentTuple1380,52433
  using ArgumentMatcherTuple = std::tuple<Matcher<Args>...>;ArgumentMatcherTuple1381,52478
  FunctionMocker() {}FunctionMocker1383,52540
  ~FunctionMocker() override GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {~FunctionMocker1403,53329
  const OnCallSpec<F>* FindOnCallSpec(const ArgumentTuple& args) const {FindOnCallSpec1413,53691
  Result PerformDefaultAction(ArgumentTuple&& args,PerformDefaultAction1431,54439
  void ClearDefaultActionsLocked() overrideClearDefaultActionsLocked1453,55260
  Result Invoke(Args... args) GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {Invoke1481,56475
  MockSpec<F> With(Matcher<Args>... m) {With1485,56615
  OnCallSpec<F>& AddNewOnCallSpec(const char* file, int line,AddNewOnCallSpec1494,56864
  TypedExpectation<F>& AddNewExpectation(const char* file, int line,AddNewExpectation1504,57327
  void DescribeDefaultActionTo(const ArgumentTuple& args,DescribeDefaultActionTo1534,58531
  void UntypedDescribeUninterestingCall(const void* untyped_args,UntypedDescribeUninterestingCall1550,59171
  const ExpectationBase* UntypedFindMatchingExpectation(UntypedFindMatchingExpectation1577,60487
  void UntypedPrintArgs(const void* untyped_args,UntypedPrintArgs1602,61578
  TypedExpectation<F>* FindMatchingExpectationLocked(const ArgumentTuple& args)FindMatchingExpectationLocked1611,61916
  void FormatUnexpectedCallMessageLocked(const ArgumentTuple& args,FormatUnexpectedCallMessageLocked1629,62624
  void PrintTriedExpectationsLocked(const ArgumentTuple& args,PrintTriedExpectationsLocked1641,63146
  R PerformAction(const void* untyped_action, ArgumentTuple&& args,PerformAction1667,64224
  using can_print_result = internal::conjunction<can_print_result1682,64898
  R PerformActionAndPrintResult(const void* const untyped_action,PerformActionAndPrintResult1692,65405
  R PerformActionAndPrintResult(const void* const untyped_action,PerformActionAndPrintResult1707,66064
R FunctionMocker<R(Args...)>::InvokeWith(ArgumentTuple&& args)InvokeWith1723,66801
        [&] { ReportUninterestingCall(reaction, ss.str()); });__anon5cbcbdce01021770,68903
  const Cleanup handle_failures([&] {__anon5cbcbdce02021814,70489
namespace internal {internal1837,71201
class MockFunction<R(Args...)> {MockFunction1843,71306
  std::function<R(Args...)> AsStdFunction() {AsStdFunction1848,71452
    return [this](Args... args) -> R {__anon5cbcbdce03021849,71498
  R Call(Args... args) {Call1855,71671
  MockSpec<R(Args...)> gmock_Call(Matcher<Args>... m) {gmock_Call1860,71796
  MockSpec<R(Args...)> gmock_Call(const WithoutMatchers&, R (*)(Args...)) {gmock_Call1865,71928
  FunctionMocker<R(Args...)> mock_;mock_1874,72143
struct SignatureOf<R(Args...)> {SignatureOf1893,72683
  using type = R(Args...);type1894,72716
struct SignatureOf<C<F>,SignatureOf1898,72798
using SignatureOfT = typename SignatureOf<F>::type;SignatureOfT1903,72949
class MockFunction : public internal::MockFunction<internal::SignatureOfT<F>> {MockFunction1968,75216
  using Base = internal::MockFunction<internal::SignatureOfT<F>>;Base1969,75296
inline const T& Const(const T& x) {Const1998,76262
inline Expectation::Expectation(internal::ExpectationBase& exp)  // NOLINTExpectation2003,76382
#define GMOCK_ON_CALL_IMPL_(GMOCK_ON_CALL_IMPL_2072,79302
#define ON_CALL(ON_CALL2077,79578
#define EXPECT_CALL(EXPECT_CALL2080,79669

build/_deps/googletest-src/googlemock/include/gmock/gmock.h,120
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_H_35,1717
namespace testing {testing71,2791

build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h,23236
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_ACTIONS_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_ACTIONS_H_131,5352
namespace testing {testing154,5792
namespace internal {internal165,6228
struct BuiltInDefaultValueGetter {BuiltInDefaultValueGetter173,6529
  static T Get() { return T(); }Get174,6564
struct BuiltInDefaultValueGetter<T, false> {BuiltInDefaultValueGetter177,6622
  static T Get() {Get178,6667
class BuiltInDefaultValue {BuiltInDefaultValue195,7415
  static bool Exists() { return ::std::is_default_constructible<T>::value; }Exists199,7541
  static T Get() {Get201,7619
class BuiltInDefaultValue<const T> {BuiltInDefaultValue210,7870
  static bool Exists() { return BuiltInDefaultValue<T>::Exists(); }Exists212,7916
  static T Get() { return BuiltInDefaultValue<T>::Get(); }Get213,7984
class BuiltInDefaultValue<T*> {BuiltInDefaultValue219,8149
  static bool Exists() { return true; }Exists221,8190
  static T* Get() { return nullptr; }Get222,8230
#define GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_(GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_227,8368
struct negationnegation269,10440
struct conjunction : std::true_type {};conjunction275,10620
struct conjunction<P1> : P1 {};conjunction279,10742
struct conjunction<P1, Ps...>conjunction284,10923
struct disjunction : std::false_type {};disjunction288,11051
struct disjunction<P1> : P1 {};disjunction291,11116
struct disjunction<P1, Ps...>disjunction294,11188
using void_t = void;void_t299,11339
struct is_implicitly_convertible {is_implicitly_convertible324,12300
  using type = decltype(TestImplicitConversion<From>(0));type344,12974
  static constexpr bool value = type::value;value345,13032
using call_result_t = decltype(std::declval<F>()(std::declval<Args>()...));call_result_t352,13346
struct is_callable_r_impl : std::false_type {};is_callable_r_impl355,13490
struct is_callable_r_impl<void_t<call_result_t<F, Args...>>, R, F, Args...>is_callable_r_impl361,13770
using is_callable_r = is_callable_r_impl<void, R, F, Args...>;is_callable_r370,14198
typename std::add_const<T>::type& as_const(T& t) {as_const374,14318
class OnceAction<Result(Args...)> final {OnceAction420,16000
  using IsDirectlyCompatible = internal::conjunction<IsDirectlyCompatible425,16192
  using IsCompatibleAfterIgnoringArguments = internal::conjunction<IsCompatibleAfterIgnoringArguments435,16719
  OnceAction(Callable&& callable)  // NOLINTOnceAction458,17935
  OnceAction(Callable&& callable)  // NOLINTOnceAction477,19017
  Result Call(Args... args) && {Call491,19716
  class StdFunctionAdaptor final {StdFunctionAdaptor504,20251
    struct CallableTag final {};CallableTag509,20469
    explicit StdFunctionAdaptor(CallableTag, F&& callable)StdFunctionAdaptor512,20529
    internal::call_result_t<Callable, ArgRefs...> operator()(operator ()534,21539
    std::shared_ptr<Callable> callable_;callable_542,21826
  struct IgnoreIncomingArguments {IgnoreIncomingArguments548,22011
    internal::call_result_t<Callable> operator()(Args&&...) {operator ()549,22046
    Callable callable;callable553,22151
  std::function<Result(Args...)> function_;function_556,22180
class DefaultValue {DefaultValue573,22862
  static void Set(T x) {Set577,23003
  typedef T (*FactoryFunction)();FactoryFunction585,23283
  static void SetFactory(FactoryFunction factory) {SetFactory586,23317
  static void Clear() {Clear592,23489
  static bool IsSet() { return producer_ != nullptr; }IsSet598,23645
  static bool Exists() {Exists602,23814
  static T Get() {Get609,24118
  class ValueProducer {ValueProducer615,24282
    virtual ~ValueProducer() {}~ValueProducer617,24317
  class FixedValueProducer : public ValueProducer {FixedValueProducer621,24384
    explicit FixedValueProducer(T value) : value_(value) {}FixedValueProducer623,24447
    T Produce() override { return value_; }Produce624,24507
    const T value_;value_627,24564
  class FactoryValueProducer : public ValueProducer {FactoryValueProducer632,24721
    explicit FactoryValueProducer(FactoryFunction factory)FactoryValueProducer634,24786
    T Produce() override { return factory_(); }Produce636,24876
    const FactoryFunction factory_;factory_639,24937
  static ValueProducer* producer_;producer_644,25118
class DefaultValue<T&> {DefaultValue650,25270
  static void Set(T& x) {  // NOLINTSet653,25345
  static void Clear() { address_ = nullptr; }Clear658,25449
  static bool IsSet() { return address_ != nullptr; }IsSet661,25577
  static bool Exists() {Exists665,25745
  static T& Get() {Get672,26012
  static T* address_;address_678,26165
class DefaultValue<void> {DefaultValue684,26274
  static bool Exists() { return true; }Exists686,26310
  static void Get() {}Get687,26350
typename DefaultValue<T>::ValueProducer* DefaultValue<T>::producer_ = nullptr;producer_692,26451
T* DefaultValue<T&>::address_ = nullptr;address_696,26606
class ActionInterface {ActionInterface700,26739
  typedef typename internal::Function<F>::Result Result;Result702,26772
  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple703,26829
  ActionInterface() {}ActionInterface705,26901
  virtual ~ActionInterface() {}~ActionInterface706,26924
class Action<R(Args...)> {Action729,27910
  using F = R(Args...);F731,27947
  struct ActionAdapter {ActionAdapter735,28110
    typename internal::Function<F>::Result operator()(InArgs&&... args) {operator ()740,28290
  using IsCompatibleFunctor = std::is_constructible<std::function<F>, G>;IsCompatibleFunctor747,28498
  typedef typename internal::Function<F>::Result Result;Result750,28582
  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple751,28639
  Action() {}Action755,28801
  Action(G&& fun) {  // NOLINTAction765,29274
  explicit Action(ActionInterface<F>* impl)Action770,29421
  Action(const Action<Func>& action)  // NOLINTAction777,29783
  bool IsDoDefault() const { return fun_ == nullptr; }IsDoDefault781,29926
  Result Perform(ArgumentTuple args) const {Perform789,30365
  operator OnceAction<F>() const {  // NOLINToperator OnceAction<F>798,30645
    struct OA {OA802,30905
      Action<F> action;action803,30921
      R operator()(Args... args) && {operator ()805,30946
  void Init(G&& g, ::std::true_type) {Init819,31205
  void Init(G&& g, ::std::false_type) {Init824,31306
  struct IgnoreArgs {IgnoreArgs829,31463
    Result operator()(const InArgs&...) const {operator ()831,31519
    FunctionImpl function_impl;function_impl835,31604
class PolymorphicAction {PolymorphicAction864,32635
  explicit PolymorphicAction(const Impl& impl) : impl_(impl) {}PolymorphicAction866,32670
  operator Action<F>() const {operator Action<F>869,32759
  class MonomorphicImpl : public ActionInterface<F> {MonomorphicImpl875,32882
    typedef typename internal::Function<F>::Result Result;Result877,32947
    typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple878,33006
    explicit MonomorphicImpl(const Impl& impl) : impl_(impl) {}MonomorphicImpl880,33080
    Result Perform(const ArgumentTuple& args) override {Perform882,33145
    Impl impl_;impl_887,33272
  Impl impl_;impl_890,33294
Action<F> MakeAction(ActionInterface<F>* impl) {MakeAction896,33450
inline PolymorphicAction<Impl> MakePolymorphicAction(const Impl& impl) {MakePolymorphicAction908,33840
namespace internal {internal912,33956
struct ByMoveWrapper {ByMoveWrapper917,34153
  explicit ByMoveWrapper(T value) : payload(std::move(value)) {}ByMoveWrapper918,34176
  T payload;payload919,34241
class ReturnAction final {ReturnAction924,34354
  explicit ReturnAction(R value) : value_(std::move(value)) {}ReturnAction926,34390
  operator OnceAction<U(Args...)>() && {  // NOLINToperator OnceAction<U(Args...)>935,34839
  operator Action<U(Args...)>() const {  // NOLINToperator Action<U(Args...)>946,35323
  class Impl final {Impl953,35519
    explicit Impl(R&& input_value)Impl957,35688
    explicit Impl(const R& input_value) : state_(new State(input_value)) {}Impl962,35916
    U operator()() && { return std::move(state_->value); }operator ()964,35993
    U operator()() const& { return state_->value; }operator ()965,36052
    struct State {State979,36838
      explicit State(const R& input_value_in)State980,36857
      explicit State(R&& input_value_in)State994,37630
      R input_value;input_value1008,38413
      U value;value1075,41574
    const std::shared_ptr<State> state_;state_1078,41597
  R value_;value_1081,41644
class ReturnAction<ByMoveWrapper<T>> final {ReturnAction1090,41998
  explicit ReturnAction(ByMoveWrapper<T> wrapper)ReturnAction1092,42052
  T operator()() const {operator ()1095,42160
  struct State {State1106,42516
    explicit State(T&& value_in) : value(std::move(value_in)) {}State1107,42533
    T value;value1109,42599
    bool called = false;called1110,42612
  const std::shared_ptr<State> state_;state_1113,42643
class ReturnNullAction {ReturnNullAction1117,42725
  static Result Perform(const ArgumentTuple&) {Perform1123,43003
class ReturnVoidAction {ReturnVoidAction1129,43114
  static void Perform(const ArgumentTuple&) {Perform1133,43265
class ReturnRefAction {ReturnRefAction1142,43583
  explicit ReturnRefAction(T& ref) : ref_(ref) {}  // NOLINTReturnRefAction1145,43692
  operator Action<F>() const {operator Action<F>1150,43912
    typedef typename Function<F>::Result Result;Result1151,43943
  class Impl : public ActionInterface<F> {Impl1163,44469
    typedef typename Function<F>::Result Result;Result1165,44523
    typedef typename Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple1166,44572
    explicit Impl(T& ref) : ref_(ref) {}  // NOLINTImpl1168,44636
    Result Perform(const ArgumentTuple&) override { return ref_; }Perform1170,44689
    T& ref_;ref_1173,44769
  T& ref_;ref_1176,44788
class ReturnRefOfCopyAction {ReturnRefOfCopyAction1183,44999
  explicit ReturnRefOfCopyAction(const T& value) : value_(value) {}  // NOLINTReturnRefOfCopyAction1187,45125
  operator Action<F>() const {operator Action<F>1192,45369
    typedef typename Function<F>::Result Result;Result1193,45400
  class Impl : public ActionInterface<F> {Impl1205,45946
    typedef typename Function<F>::Result Result;Result1207,46000
    typedef typename Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple1208,46049
    explicit Impl(const T& value) : value_(value) {}  // NOLINTImpl1210,46113
    Result Perform(const ArgumentTuple&) override { return value_; }Perform1212,46178
    T value_;value_1215,46260
  const T value_;value_1218,46280
class ReturnRoundRobinAction {ReturnRoundRobinAction1224,46455
  explicit ReturnRoundRobinAction(std::vector<T> values) {ReturnRoundRobinAction1226,46495
  T operator()(Args&&...) const {operator ()1233,46725
  struct State {State1238,46801
    T Next() {Next1239,46818
    std::vector<T> values;values1245,46930
    size_t i = 0;i1246,46957
  std::shared_ptr<State> state_ = std::make_shared<State>();state_1248,46980
class DoDefaultAction {DoDefaultAction1252,47095
  operator Action<F>() const {operator Action<F>1257,47248
class AssignAction {AssignAction1265,47448
  AssignAction(T1* ptr, T2 value) : ptr_(ptr), value_(value) {}AssignAction1267,47478
  void Perform(const ArgumentTuple& /* args */) const {Perform1270,47596
  T1* const ptr_;ptr_1275,47687
  const T2 value_;value_1276,47705
class SetErrnoAndReturnAction {SetErrnoAndReturnAction1284,47891
  SetErrnoAndReturnAction(int errno_value, T result)SetErrnoAndReturnAction1286,47932
  Result Perform(const ArgumentTuple& /* args */) const {Perform1289,48086
  const int errno_;errno_1295,48199
  const T result_;result_1296,48219
struct SetArgumentPointeeAction {SetArgumentPointeeAction1304,48454
  A value;value1305,48488
  void operator()(const Args&... args) const {operator ()1308,48530
struct InvokeMethodAction {InvokeMethodAction1315,48736
  Class* const obj_ptr;obj_ptr1316,48764
  const MethodPtr method_ptr;method_ptr1317,48788
  auto operator()(Args&&... args) constoperator ()1320,48849
struct InvokeWithoutArgsAction {InvokeWithoutArgsAction1331,49337
  FunctionImpl function_impl;function_impl1332,49370
  auto operator()(const Args&...) -> decltype(function_impl()) {operator ()1337,49527
struct InvokeMethodWithoutArgsAction {InvokeMethodWithoutArgsAction1344,49743
  Class* const obj_ptr;obj_ptr1345,49782
  const MethodPtr method_ptr;method_ptr1346,49806
  using ReturnType =ReturnType1348,49837
  ReturnType operator()(const Args&...) const {operator ()1352,49961
class IgnoreResultAction {IgnoreResultAction1359,50123
  explicit IgnoreResultAction(const A& action) : action_(action) {}IgnoreResultAction1361,50159
  operator Action<F>() const {operator Action<F>1364,50252
    typedef typename internal::Function<F>::Result Result;Result1373,50811
  class Impl : public ActionInterface<F> {Impl1383,51086
    typedef typename internal::Function<F>::Result Result;Result1385,51140
    typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple1386,51199
    explicit Impl(const A& action) : action_(action) {}Impl1388,51273
    void Perform(const ArgumentTuple& args) override {Perform1390,51330
        typename internal::Function<F>::MakeResultIgnoredValue OriginalFunction;OriginalFunction1399,51596
    const Action<OriginalFunction> action_;action_1401,51678
  const A action_;action_1404,51728
struct WithArgsAction {WithArgsAction1408,51796
  InnerAction inner_action;inner_action1409,51820
  using InnerSignature =InnerSignature1414,52022
  operator OnceAction<R(Args...)>() && {  // NOLINToperator OnceAction<R(Args...)>1436,53161
    struct OA {OA1437,53213
      OnceAction<InnerSignature<R, Args...>> inner_action;inner_action1438,53229
      R operator()(Args&&... args) && {operator ()1440,53289
  operator Action<R(Args...)>() const {  // NOLINToperator Action<R(Args...)>1463,54230
    return [converted](Args&&... args) -> R {__anone3d9a90d01021466,54346
class DoAllAction<FinalAction> {DoAllAction1478,54660
  struct UserConstructorTag {};UserConstructorTag1480,54702
  explicit DoAllAction(UserConstructorTag, T&& action)DoAllAction1483,54759
  operator OnceAction<R(Args...)>() && {  // NOLINToperator OnceAction<R(Args...)>1496,55401
  operator Action<R(Args...)>() const {  // NOLINToperator Action<R(Args...)>1505,55679
  FinalAction final_action_;final_action_1510,55771
class DoAllAction<InitialAction, OtherActions...>DoAllAction1516,56001
  using Base = DoAllAction<OtherActions...>;Base1519,56106
  using InitialActionArgType =InitialActionArgType1567,58363
  struct UserConstructorTag {};UserConstructorTag1571,58482
  explicit DoAllAction(UserConstructorTag, T&& initial_action,DoAllAction1574,58554
  operator OnceAction<R(Args...)>() && {  // NOLINToperator OnceAction<R(Args...)>1589,59271
    struct OA {OA1593,59538
      OnceAction<void(InitialActionArgType<Args>...)> initial_action;initial_action1594,59554
      OnceAction<R(Args...)> remaining_actions;remaining_actions1595,59624
      R operator()(Args... args) && {operator ()1597,59673
  operator Action<R(Args...)>() const {  // NOLINToperator Action<R(Args...)>1621,60466
    struct OA {OA1625,60732
      Action<void(InitialActionArgType<Args>...)> initial_action;initial_action1626,60748
      Action<R(Args...)> remaining_actions;remaining_actions1627,60814
      R operator()(Args... args) const {operator ()1629,60859
  InitialAction initial_action_;initial_action_1645,61245
struct ReturnNewAction {ReturnNewAction1649,61324
  T* operator()() const {operator ()1650,61349
        [](const Params&... unpacked_params) {__anone3d9a90d02021652,61403
  std::tuple<Params...> params;params1657,61526
struct ReturnArgAction {ReturnArgAction1661,61582
  auto operator()(Args&&... args) const -> decltype(std::get<k>(operator ()1664,61714
struct SaveArgAction {SaveArgAction1671,61958
  Ptr pointer;pointer1672,61981
  void operator()(const Args&... args) const {operator ()1675,62027
struct SaveArgPointeeAction {SaveArgPointeeAction1681,62163
  Ptr pointer;pointer1682,62193
  void operator()(const Args&... args) const {operator ()1685,62239
struct SetArgRefereeAction {SetArgRefereeAction1691,62374
  T value;value1692,62403
  void operator()(Args&&... args) const {operator ()1695,62445
    using argk_type =argk_type1696,62487
struct SetArrayArgumentAction {SetArrayArgumentAction1705,62795
  I1 first;first1706,62827
  I2 last;last1707,62839
  void operator()(const Args&... args) const {operator ()1710,62881
struct DeleteArgAction {DeleteArgAction1719,63092
  void operator()(const Args&... args) const {operator ()1721,63147
struct ReturnPointeeAction {ReturnPointeeAction1727,63269
  Ptr pointer;pointer1728,63298
  auto operator()(const Args&...) const -> decltype(*pointer) {operator ()1730,63343
struct ThrowAction {ThrowAction1737,63483
  T exception;exception1738,63504
  operator Action<R(Args...)>() const {  // NOLINToperator Action<R(Args...)>1741,63624
    return [copy](Args...) -> R { throw copy; };__anone3d9a90d03021743,63699
typedef internal::IgnoredValue Unused;Unused1780,64924
internal::DoAllAction<typename std::decay<Action>::type...> DoAll(DoAll1786,65153
internal::WithArgsAction<typename std::decay<InnerAction>::type, k> WithArg(WithArg1798,65722
WithArgs(InnerAction&& action) {WithArgs1809,66232
internal::WithArgsAction<typename std::decay<InnerAction>::type> WithoutArgs(WithoutArgs1818,66600
internal::ReturnAction<R> Return(R value) {Return1848,67914
inline PolymorphicAction<internal::ReturnNullAction> ReturnNull() {ReturnNull1853,68055
inline PolymorphicAction<internal::ReturnVoidAction> Return() {Return1858,68244
inline internal::ReturnRefAction<R> ReturnRef(R& x) {  // NOLINTReturnRef1864,68458
inline internal::ReturnRefOfCopyAction<R> ReturnRefOfCopy(const R& x) {ReturnRefOfCopy1876,68901
internal::ByMoveWrapper<R> ByMove(R x) {ByMove1887,69297
internal::ReturnRoundRobinAction<T> ReturnRoundRobin(std::vector<T> vals) {ReturnRoundRobin1895,69608
internal::ReturnRoundRobinAction<T> ReturnRoundRobin(ReturnRoundRobin1903,69966
inline internal::DoDefaultAction DoDefault() {DoDefault1909,70206
internal::SetArgumentPointeeAction<N, T> SetArgPointee(T value) {SetArgPointee1916,70433
internal::SetArgumentPointeeAction<N, T> SetArgumentPointee(T value) {SetArgumentPointee1922,70603
PolymorphicAction<internal::AssignAction<T1, T2>> Assign(T1* ptr, T2 val) {Assign1928,70810
PolymorphicAction<internal::SetErrnoAndReturnAction<T>> SetErrnoAndReturn(SetErrnoAndReturn1936,71087
typename std::decay<FunctionImpl>::type Invoke(FunctionImpl&& function_impl) {Invoke1951,71564
internal::InvokeMethodAction<Class, MethodPtr> Invoke(Class* obj_ptr,Invoke1958,71851
InvokeWithoutArgs(FunctionImpl function_impl) {InvokeWithoutArgs1966,72210
internal::InvokeMethodWithoutArgsAction<Class, MethodPtr> InvokeWithoutArgs(InvokeWithoutArgs1973,72433
inline internal::IgnoreResultAction<A> IgnoreResult(const A& an_action) {IgnoreResult1982,72816
inline ::std::reference_wrapper<T> ByRef(T& l_value) {  // NOLINTByRef1997,73480
internal::ReturnNewAction<T, typename std::decay<Params>::type...> ReturnNew(ReturnNew2005,73861
internal::ReturnArgAction<k> ReturnArg() {ReturnArg2012,74128
internal::SaveArgAction<k, Ptr> SaveArg(Ptr pointer) {SaveArg2019,74322
internal::SaveArgPointeeAction<k, Ptr> SaveArgPointee(Ptr pointer) {SaveArgPointee2026,74566
internal::SetArgRefereeAction<k, typename std::decay<T>::type> SetArgReferee(SetArgReferee2033,74823
internal::SetArrayArgumentAction<k, I1, I2> SetArrayArgument(I1 first,SetArrayArgument2044,75281
internal::DeleteArgAction<k> DeleteArg() {DeleteArg2052,75557
internal::ReturnPointeeAction<Ptr> ReturnPointee(Ptr pointer) {ReturnPointee2058,75698
internal::ThrowAction<typename std::decay<T>::type> Throw(T&& exception) {Throw2066,75970
namespace internal {internal2071,76119
struct ExcessiveArg {};ExcessiveArg2087,76987
struct ImplBase {ImplBase2095,77214
  struct Holder {Holder2096,77232
    explicit operator const Impl&() const { return *ptr; }operator const Impl&2098,77310
    std::shared_ptr<Impl> ptr;ptr2099,77369
  using type = typename std::conditional<std::is_constructible<Impl>::value,type2101,77405
struct ActionImpl<R(Args...), Impl> : ImplBase<Impl>::type {ActionImpl2106,77603
  using Base = typename ImplBase<Impl>::type;Base2107,77664
  using function_type = R(Args...);function_type2108,77710
  using args_type = std::tuple<Args...>;args_type2109,77746
  explicit ActionImpl(std::shared_ptr<Impl> impl) : Base{std::move(impl)} {}ActionImpl2112,77856
  R operator()(Args&&... arg) const {operator ()2114,77934
  R Apply(IndexSequence<arg_id...>, IndexSequence<excess_id...>,Apply2123,78289
::testing::Action<F> MakeAction() {MakeAction2145,79334
::testing::Action<F> MakeAction(std::shared_ptr<Impl> impl) {MakeAction2151,79511
#define GMOCK_INTERNAL_ARG_UNUSED(GMOCK_INTERNAL_ARG_UNUSED2155,79645
#define GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_ GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_2157,79750
#define GMOCK_INTERNAL_ARG(GMOCK_INTERNAL_ARG2161,79924
#define GMOCK_ACTION_ARG_TYPES_AND_NAMES_ GMOCK_ACTION_ARG_TYPES_AND_NAMES_2162,79994
#define GMOCK_INTERNAL_TEMPLATE_ARG(GMOCK_INTERNAL_TEMPLATE_ARG2165,80105
#define GMOCK_ACTION_TEMPLATE_ARGS_NAMES_ GMOCK_ACTION_TEMPLATE_ARGS_NAMES_2166,80179
#define GMOCK_INTERNAL_TYPENAME_PARAM(GMOCK_INTERNAL_TYPENAME_PARAM2169,80292
#define GMOCK_ACTION_TYPENAME_PARAMS_(GMOCK_ACTION_TYPENAME_PARAMS_2170,80370
#define GMOCK_INTERNAL_TYPE_PARAM(GMOCK_INTERNAL_TYPE_PARAM2173,80495
#define GMOCK_ACTION_TYPE_PARAMS_(GMOCK_ACTION_TYPE_PARAMS_2174,80560
#define GMOCK_INTERNAL_TYPE_GVALUE_PARAM(GMOCK_INTERNAL_TYPE_GVALUE_PARAM2177,80677
#define GMOCK_ACTION_TYPE_GVALUE_PARAMS_(GMOCK_ACTION_TYPE_GVALUE_PARAMS_2179,80764
#define GMOCK_INTERNAL_GVALUE_PARAM(GMOCK_INTERNAL_GVALUE_PARAM2182,80895
#define GMOCK_ACTION_GVALUE_PARAMS_(GMOCK_ACTION_GVALUE_PARAMS_2184,80992
#define GMOCK_INTERNAL_INIT_PARAM(GMOCK_INTERNAL_INIT_PARAM2187,81113
#define GMOCK_ACTION_INIT_PARAMS_(GMOCK_ACTION_INIT_PARAMS_2189,81217
#define GMOCK_INTERNAL_FIELD_PARAM(GMOCK_INTERNAL_FIELD_PARAM2192,81334
#define GMOCK_ACTION_FIELD_PARAMS_(GMOCK_ACTION_FIELD_PARAMS_2193,81405
#define GMOCK_INTERNAL_ACTION(GMOCK_INTERNAL_ACTION2196,81509
#define ACTION(ACTION2241,84903
#define ACTION_P(ACTION_P2266,86798
#define ACTION_P2(ACTION_P22269,86889
#define ACTION_P3(ACTION_P32272,86982
#define ACTION_P4(ACTION_P42275,87075
#define ACTION_P5(ACTION_P52278,87168
#define ACTION_P6(ACTION_P62281,87261
#define ACTION_P7(ACTION_P72284,87354
#define ACTION_P8(ACTION_P82287,87447
#define ACTION_P9(ACTION_P92290,87540
#define ACTION_P10(ACTION_P102293,87633

build/_deps/googletest-src/googlemock/include/gmock/gmock-more-matchers.h,678
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MORE_MATCHERS_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MORE_MATCHERS_H_41,1937
namespace testing {testing48,2067
namespace internal {internal62,2389
class IsEmptyMatcher {IsEmptyMatcher67,2621
  bool MatchAndExplain(const MatcheeContainerType& c,MatchAndExplain71,2751
  bool MatchAndExplain(const char* s, MatchResultListener* listener) const {MatchAndExplain81,3013
  void DescribeTo(std::ostream* os) const { *os << "is empty"; }DescribeTo86,3191
  void DescribeNegationTo(std::ostream* os) const { *os << "isn't empty"; }DescribeNegationTo88,3257
inline PolymorphicMatcher<internal::IsEmptyMatcher> IsEmpty() {IsEmpty96,3544

build/_deps/googletest-src/googlemock/include/gmock/gmock-nice-strict.h,1639
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_NICE_STRICT_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_NICE_STRICT_H_64,3230
namespace testing {testing72,3407
namespace internal {internal80,3560
constexpr bool HasStrictnessModifier() {HasStrictnessModifier90,3899
#define GTEST_INTERNAL_EMPTY_BASE_CLASS GTEST_INTERNAL_EMPTY_BASE_CLASS105,4683
#define GTEST_INTERNAL_EMPTY_BASE_CLASSGTEST_INTERNAL_EMPTY_BASE_CLASS107,4753
class NiceMockImpl {NiceMockImpl111,4826
  NiceMockImpl() {NiceMockImpl113,4856
  ~NiceMockImpl() {~NiceMockImpl117,4961
class NaggyMockImpl {NaggyMockImpl123,5094
  NaggyMockImpl() {NaggyMockImpl125,5125
  ~NaggyMockImpl() {~NaggyMockImpl129,5230
class StrictMockImpl {StrictMockImpl135,5364
  StrictMockImpl() {StrictMockImpl137,5396
  ~StrictMockImpl() {~StrictMockImpl141,5502
class GTEST_INTERNAL_EMPTY_BASE_CLASS NiceMockNiceMock149,5665
  NiceMock() : MockClass() {NiceMock158,6094
  explicit NiceMock(A&& arg) : MockClass(std::forward<A>(arg)) {NiceMock171,6672
  NiceMock(TArg1&& arg1, TArg2&& arg2, An&&... args)NiceMock177,6928
class GTEST_INTERNAL_EMPTY_BASE_CLASS NaggyMockNaggyMock190,7359
  NaggyMock() : MockClass() {NaggyMock200,7792
  explicit NaggyMock(A&& arg) : MockClass(std::forward<A>(arg)) {NaggyMock213,8371
  NaggyMock(TArg1&& arg1, TArg2&& arg2, An&&... args)NaggyMock219,8628
class GTEST_INTERNAL_EMPTY_BASE_CLASS StrictMockStrictMock232,9064
  StrictMock() : MockClass() {StrictMock242,9466
  explicit StrictMock(A&& arg) : MockClass(std::forward<A>(arg)) {StrictMock255,10046
  StrictMock(TArg1&& arg1, TArg2&& arg2, An&&... args)StrictMock261,10304

build/_deps/googletest-src/googlemock/include/gmock/gmock-matchers.h,63948
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MATCHERS_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MATCHERS_H_256,9683
#define GMOCK_MAYBE_5046_ GMOCK_MAYBE_5046_278,10234
#define GMOCK_MAYBE_5046_GMOCK_MAYBE_5046_280,10271
namespace testing {testing288,10539
class StringMatchResultListener : public MatchResultListener {StringMatchResultListener303,11155
  StringMatchResultListener() : MatchResultListener(&ss_) {}StringMatchResultListener305,11227
  std::string str() const { return ss_.str(); }str308,11338
  void Clear() { ss_.str(""); }Clear311,11435
namespace internal {internal323,11782
class MatcherCastImpl {MatcherCastImpl336,12343
  static Matcher<T> Cast(const M& polymorphic_matcher_or_value) {Cast338,12376
  static Matcher<T> CastImpl(const M& polymorphic_matcher_or_value,CastImpl359,13334
  static Matcher<T> CastImpl(const M& value,CastImpl376,14267
class MatcherCastImpl<T, Matcher<U>> {MatcherCastImpl401,15491
  static Matcher<T> Cast(const Matcher<U>& source_matcher) {Cast403,15539
  class Impl : public MatcherInterface<T> {Impl408,15664
    explicit Impl(const Matcher<U>& source_matcher)Impl410,15719
    bool MatchAndExplain(T x, MatchResultListener* listener) const override {MatchAndExplain414,15878
      using FromType = typename std::remove_cv<typename std::remove_pointer<FromType415,15956
      using ToType = typename std::remove_cv<typename std::remove_pointer<ToType417,16098
      using CastType =CastType431,16902
    void DescribeTo(::std::ostream* os) const override {DescribeTo439,17188
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo443,17290
    const Matcher<U> source_matcher_;source_matcher_448,17420
class MatcherCastImpl<T, Matcher<T>> {MatcherCastImpl455,17589
  static Matcher<T> Cast(const Matcher<T>& matcher) { return matcher; }Cast457,17637
class MatcherBaseImpl {MatcherBaseImpl462,17795
  operator ::testing::Matcher<T>() const {  // NOLINT(runtime/explicit)operator ::testing::Matcher<T>467,17884
class MatcherBaseImpl<Derived<Ts...>> {MatcherBaseImpl475,18199
  explicit MatcherBaseImpl(Ts... params)MatcherBaseImpl481,18443
  MatcherBaseImpl(Ts... params)  // NOLINTMatcherBaseImpl485,18634
  operator ::testing::Matcher<F>() const {  // NOLINT(runtime/explicit)operator ::testing::Matcher<F>489,18750
  ::testing::Matcher<F> Apply(IndexSequence<tuple_ids...>) const {Apply495,18944
  const std::tuple<Ts...> params_;params_501,19158
inline Matcher<T> MatcherCast(const M& matcher) {MatcherCast511,19512
inline Matcher<T> SafeMatcherCast(const M& polymorphic_matcher_or_value) {SafeMatcherCast518,19777
inline Matcher<T> SafeMatcherCast(const Matcher<U>& matcher) {SafeMatcherCast532,20477
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(T) RawT;RawT542,21045
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(U) RawU;RawU543,21098
namespace internal {internal559,21721
inline void PrintIfNotEmpty(const std::string& explanation,PrintIfNotEmpty562,21805
inline bool IsReadableTypeName(const std::string& type_name) {IsReadableTypeName572,22149
bool MatchPrintAndExplain(Value& value, const Matcher<T>& matcher,MatchPrintAndExplain585,22730
class TuplePrefix {TuplePrefix610,23551
  static bool Matches(const MatcherTuple& matcher_tuple,Matches616,23824
  static void ExplainMatchFailuresTo(const MatcherTuple& matchers,ExplainMatchFailuresTo627,24386
    typedef typename std::tuple_element<N - 1, ValueTuple>::type Value;Value637,24895
class TuplePrefix<0> {TuplePrefix658,25692
  static bool Matches(const MatcherTuple& /* matcher_tuple */,Matches661,25780
  static void ExplainMatchFailuresTo(const MatcherTuple& /* matchers */,ExplainMatchFailuresTo667,25982
bool TupleMatches(const MatcherTuple& matcher_tuple,TupleMatches678,26527
void ExplainMatchFailureTupleTo(const MatcherTuple& matchers,ExplainMatchFailureTupleTo692,27239
class TransformTupleValuesHelper {TransformTupleValuesHelper703,27717
  typedef ::std::tuple_size<Tuple> TupleSize;TupleSize705,27762
  static OutIter Run(Func f, const Tuple& t, OutIter out) {Run710,27963
  struct IterateOverTuple {IterateOverTuple716,28154
    OutIter operator()(Func f, const Tup& t, OutIter out) const {operator ()717,28182
  struct IterateOverTuple<Tup, 0> {IterateOverTuple723,28422
    OutIter operator()(Func /* f */, const Tup& /* t */, OutIter out) const {operator ()724,28458
OutIter TransformTupleValues(Func f, const Tuple& t, OutIter out) {TransformTupleValues734,28784
class AnythingMatcher {AnythingMatcher742,29134
  using is_gtest_matcher = void;is_gtest_matcher744,29167
  bool MatchAndExplain(const T& /* x */, std::ostream* /* listener */) const {MatchAndExplain747,29225
  void DescribeTo(std::ostream* os) const { *os << "is anything"; }DescribeTo750,29325
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo751,29393
class IsNullMatcher {IsNullMatcher761,29791
  bool MatchAndExplain(const Pointer& p,MatchAndExplain764,29852
  void DescribeTo(::std::ostream* os) const { *os << "is NULL"; }DescribeTo769,29991
  void DescribeNegationTo(::std::ostream* os) const { *os << "isn't NULL"; }DescribeNegationTo770,30057
class NotNullMatcher {NotNullMatcher775,30247
  bool MatchAndExplain(const Pointer& p,MatchAndExplain778,30309
  void DescribeTo(::std::ostream* os) const { *os << "isn't NULL"; }DescribeTo783,30448
  void DescribeNegationTo(::std::ostream* os) const { *os << "is NULL"; }DescribeNegationTo784,30517
class RefMatcher<T&> {RefMatcher804,31240
  explicit RefMatcher(T& x) : object_(x) {}  // NOLINTRefMatcher814,31717
  operator Matcher<Super&>() const {operator Matcher<Super&>817,31801
  class Impl : public MatcherInterface<Super&> {Impl828,32245
    explicit Impl(Super& x) : object_(x) {}  // NOLINTImpl830,32305
    bool MatchAndExplain(Super& x,MatchAndExplain834,32495
    void DescribeTo(::std::ostream* os) const override {DescribeTo840,32712
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo845,32869
    const Super& object_;object_851,33054
  T& object_;object_854,33086
inline bool CaseInsensitiveCStringEquals(const char* lhs, const char* rhs) {CaseInsensitiveCStringEquals858,33173
inline bool CaseInsensitiveCStringEquals(const wchar_t* lhs,CaseInsensitiveCStringEquals862,33310
bool CaseInsensitiveStringEquals(const StringType& s1, const StringType& s2) {CaseInsensitiveStringEquals870,33619
class StrEqualityMatcher {StrEqualityMatcher893,34301
  StrEqualityMatcher(StringType str, bool expect_eq, bool case_sensitive)StrEqualityMatcher895,34337
  bool MatchAndExplain(const internal::StringView& s,MatchAndExplain901,34554
  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {MatchAndExplain916,35030
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain928,35465
  void DescribeTo(::std::ostream* os) const {DescribeTo936,35778
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo940,35867
  void DescribeToHelper(bool expect_eq, ::std::ostream* os) const {DescribeToHelper945,35975
  const StringType string_;string_954,36215
  const bool expect_eq_;expect_eq_955,36243
  const bool case_sensitive_;case_sensitive_956,36268
class HasSubstrMatcher {HasSubstrMatcher963,36476
  explicit HasSubstrMatcher(const StringType& substring)HasSubstrMatcher965,36510
  bool MatchAndExplain(const internal::StringView& s,MatchAndExplain969,36636
  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {MatchAndExplain984,37112
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain993,37507
  void DescribeTo(::std::ostream* os) const {DescribeTo999,37736
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1004,37852
  const StringType substring_;substring_1010,37989
class StartsWithMatcher {StartsWithMatcher1017,38199
  explicit StartsWithMatcher(const StringType& prefix) : prefix_(prefix) {}StartsWithMatcher1019,38234
  bool MatchAndExplain(const internal::StringView& s,MatchAndExplain1022,38346
  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {MatchAndExplain1037,38822
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain1046,39217
  void DescribeTo(::std::ostream* os) const {DescribeTo1053,39470
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1058,39581
  const StringType prefix_;prefix_1064,39717
class EndsWithMatcher {EndsWithMatcher1071,39922
  explicit EndsWithMatcher(const StringType& suffix) : suffix_(suffix) {}EndsWithMatcher1073,39955
  bool MatchAndExplain(const internal::StringView& s,MatchAndExplain1076,40065
  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {MatchAndExplain1091,40541
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain1100,40936
  void DescribeTo(::std::ostream* os) const {DescribeTo1107,41200
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1112,41309
  const StringType suffix_;suffix_1118,41443
class WhenBase64UnescapedMatcher {WhenBase64UnescapedMatcher1123,41623
  using is_gtest_matcher = void;is_gtest_matcher1125,41667
  explicit WhenBase64UnescapedMatcher(WhenBase64UnescapedMatcher1127,41701
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain1133,41942
  void DescribeTo(::std::ostream* os) const {DescribeTo1146,42420
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1151,42553
  const Matcher<const std::string&> internal_matcher_;internal_matcher_1157,42711
class PairMatchBase {PairMatchBase1169,43225
  operator Matcher<::std::tuple<T1, T2>>() const {operator Matcher<::std::tuple<T1,T2>>1172,43294
  operator Matcher<const ::std::tuple<T1, T2>&>() const {operator Matcher<const::std::tuple<T1,T2>&>1176,43468
  static ::std::ostream& GetDesc(::std::ostream& os) {  // NOLINTGetDesc1181,43604
  class Impl : public MatcherInterface<Tuple> {Impl1186,43731
    bool MatchAndExplain(Tuple args,MatchAndExplain1188,43790
    void DescribeTo(::std::ostream* os) const override {DescribeTo1192,43973
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo1195,44068
class Eq2Matcher : public PairMatchBase<Eq2Matcher, AnyEq> {Eq2Matcher1201,44183
  static const char* Desc() { return "an equal pair"; }Desc1203,44253
class Ne2Matcher : public PairMatchBase<Ne2Matcher, AnyNe> {Ne2Matcher1205,44312
  static const char* Desc() { return "an unequal pair"; }Desc1207,44382
class Lt2Matcher : public PairMatchBase<Lt2Matcher, AnyLt> {Lt2Matcher1209,44443
  static const char* Desc() { return "a pair where the first < the second"; }Desc1211,44513
class Gt2Matcher : public PairMatchBase<Gt2Matcher, AnyGt> {Gt2Matcher1213,44594
  static const char* Desc() { return "a pair where the first > the second"; }Desc1215,44664
class Le2Matcher : public PairMatchBase<Le2Matcher, AnyLe> {Le2Matcher1217,44745
  static const char* Desc() { return "a pair where the first <= the second"; }Desc1219,44815
class Ge2Matcher : public PairMatchBase<Ge2Matcher, AnyGe> {Ge2Matcher1221,44897
  static const char* Desc() { return "a pair where the first >= the second"; }Desc1223,44967
class NotMatcherImpl : public MatcherInterface<const T&> {NotMatcherImpl1231,45313
  explicit NotMatcherImpl(const Matcher<T>& matcher) : matcher_(matcher) {}NotMatcherImpl1233,45381
  bool MatchAndExplain(const T& x,MatchAndExplain1235,45458
  void DescribeTo(::std::ostream* os) const override {DescribeTo1240,45620
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo1244,45717
  const Matcher<T> matcher_;matcher_1249,45824
class NotMatcher {NotMatcher1255,45979
  explicit NotMatcher(InnerMatcher matcher) : matcher_(matcher) {}NotMatcher1257,46007
  operator Matcher<T>() const {operator Matcher<T>1262,46204
  InnerMatcher matcher_;matcher_1267,46327
class AllOfMatcherImpl : public MatcherInterface<const T&> {AllOfMatcherImpl1275,46633
  explicit AllOfMatcherImpl(std::vector<Matcher<T>> matchers)AllOfMatcherImpl1277,46703
  void DescribeTo(::std::ostream* os) const override {DescribeTo1280,46808
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo1289,47029
  bool MatchAndExplain(const T& x,MatchAndExplain1298,47265
  const std::vector<Matcher<T>> matchers_;matchers_1328,48176
class VariadicMatcher {VariadicMatcher1336,48507
  VariadicMatcher(const Args&... matchers)  // NOLINTVariadicMatcher1338,48540
  operator Matcher<T>() const {operator Matcher<T>1350,49047
  void CreateVariadicMatcher(std::vector<Matcher<T>>* values,CreateVariadicMatcher1358,49307
  void CreateVariadicMatcher(CreateVariadicMatcher1365,49616
  std::tuple<Args...> matchers_;matchers_1369,49743
using AllOfMatcher = VariadicMatcher<AllOfMatcherImpl, Args...>;AllOfMatcher1373,49808
class AnyOfMatcherImpl : public MatcherInterface<const T&> {AnyOfMatcherImpl1380,50152
  explicit AnyOfMatcherImpl(std::vector<Matcher<T>> matchers)AnyOfMatcherImpl1382,50222
  void DescribeTo(::std::ostream* os) const override {DescribeTo1385,50327
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo1394,50547
  bool MatchAndExplain(const T& x,MatchAndExplain1403,50784
  const std::vector<Matcher<T>> matchers_;matchers_1433,51686
using AnyOfMatcher = VariadicMatcher<AnyOfMatcherImpl, Args...>;AnyOfMatcher1438,51842
class ConditionalMatcher {ConditionalMatcher1442,52036
  ConditionalMatcher(bool condition, MatcherTrue matcher_true,ConditionalMatcher1444,52072
  operator Matcher<T>() const {  // NOLINT(runtime/explicit)operator Matcher<T>1451,52340
  bool condition_;condition_1457,52534
  MatcherTrue matcher_true_;matcher_true_1458,52553
  MatcherFalse matcher_false_;matcher_false_1459,52582
class SomeOfArrayMatcher {SomeOfArrayMatcher1464,52726
  SomeOfArrayMatcher(Iter first, Iter last) : matchers_(first, last) {}SomeOfArrayMatcher1469,52877
  operator Matcher<U>() const {  // NOLINToperator Matcher<U>1472,52974
    using RawU = typename std::decay<U>::type;RawU1473,53017
  const ::std::vector<T> matchers_;matchers_1482,53291
using AllOfArrayMatcher = SomeOfArrayMatcher<AllOfMatcherImpl, T>;AllOfArrayMatcher1486,53353
using AnyOfArrayMatcher = SomeOfArrayMatcher<AnyOfMatcherImpl, T>;AnyOfArrayMatcher1489,53443
class TrulyMatcher {TrulyMatcher1494,53622
  explicit TrulyMatcher(Predicate pred) : predicate_(pred) {}TrulyMatcher1496,53652
  bool MatchAndExplain(T& x,  // NOLINTMatchAndExplain1503,53988
  void DescribeTo(::std::ostream* os) const {DescribeTo1516,54487
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1520,54582
  Predicate predicate_;predicate_1525,54701
class MatcherAsPredicate {MatcherAsPredicate1531,54837
  explicit MatcherAsPredicate(M matcher) : matcher_(matcher) {}MatcherAsPredicate1533,54873
  bool operator()(const T& x) const {operator ()1542,55244
  M matcher_;matcher_1561,56054
class PredicateFormatterFromMatcher {PredicateFormatterFromMatcher1567,56226
  explicit PredicateFormatterFromMatcher(M m) : matcher_(std::move(m)) {}PredicateFormatterFromMatcher1569,56273
  AssertionResult operator()(const char* value_text, const T& x) const {operator ()1575,56558
  const M matcher_;matcher_1611,58040
inline PredicateFormatterFromMatcher<M> MakePredicateFormatterFromMatcher(MakePredicateFormatterFromMatcher1619,58358
class IsNanMatcher {IsNanMatcher1626,58617
  bool MatchAndExplain(const FloatType& f,MatchAndExplain1629,58679
  void DescribeTo(::std::ostream* os) const { *os << "is NaN"; }DescribeTo1634,58825
  void DescribeNegationTo(::std::ostream* os) const { *os << "isn't NaN"; }DescribeNegationTo1635,58890
class FloatingEqMatcher {FloatingEqMatcher1643,59262
  FloatingEqMatcher(FloatType expected, bool nan_eq_nan)FloatingEqMatcher1651,59682
  FloatingEqMatcher(FloatType expected, bool nan_eq_nan,FloatingEqMatcher1657,59999
  class Impl : public MatcherInterface<T> {Impl1668,60390
    Impl(FloatType expected, bool nan_eq_nan, FloatType max_abs_error)Impl1670,60445
    bool MatchAndExplain(T value,MatchAndExplain1675,60626
    void DescribeTo(::std::ostream* os) const override {DescribeTo1710,61837
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo1731,62576
    bool HasMaxAbsError() const { return max_abs_error_ >= 0; }HasMaxAbsError1752,63252
    const FloatType expected_;expected_1754,63317
    const bool nan_eq_nan_;nan_eq_nan_1755,63348
    const FloatType max_abs_error_;max_abs_error_1757,63442
  operator Matcher<FloatType>() const {operator Matcher<FloatType>1763,63696
  operator Matcher<const FloatType&>() const {operator Matcher<const FloatType&>1768,63835
  operator Matcher<FloatType&>() const {operator Matcher<FloatType&>1773,63988
  const FloatType expected_;expected_1779,64139
  const bool nan_eq_nan_;nan_eq_nan_1780,64168
  const FloatType max_abs_error_;max_abs_error_1782,64258
class FloatingEq2Matcher {FloatingEq2Matcher1791,64667
  FloatingEq2Matcher() { Init(-1, false); }FloatingEq2Matcher1793,64703
  explicit FloatingEq2Matcher(bool nan_eq_nan) { Init(-1, nan_eq_nan); }FloatingEq2Matcher1795,64748
  explicit FloatingEq2Matcher(FloatType max_abs_error) {FloatingEq2Matcher1797,64822
  FloatingEq2Matcher(FloatType max_abs_error, bool nan_eq_nan) {FloatingEq2Matcher1801,64916
  operator Matcher<::std::tuple<T1, T2>>() const {operator Matcher<::std::tuple<T1,T2>>1806,65061
  operator Matcher<const ::std::tuple<T1, T2>&>() const {operator Matcher<const::std::tuple<T1,T2>&>1811,65248
  static ::std::ostream& GetDesc(::std::ostream& os) {  // NOLINTGetDesc1817,65422
  class Impl : public MatcherInterface<Tuple> {Impl1822,65562
    Impl(FloatType max_abs_error, bool nan_eq_nan)Impl1824,65621
    bool MatchAndExplain(Tuple args,MatchAndExplain1827,65741
    void DescribeTo(::std::ostream* os) const override {DescribeTo1840,66344
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo1843,66439
    FloatType max_abs_error_;max_abs_error_1848,66558
    const bool nan_eq_nan_;nan_eq_nan_1849,66588
  void Init(FloatType max_abs_error_val, bool nan_eq_nan_val) {Init1852,66622
  FloatType max_abs_error_;max_abs_error_1856,66764
  bool nan_eq_nan_;nan_eq_nan_1857,66792
class PointeeMatcher {PointeeMatcher1863,66986
  explicit PointeeMatcher(const InnerMatcher& matcher) : matcher_(matcher) {}PointeeMatcher1865,67018
  operator Matcher<Pointer>() const {operator Matcher<Pointer>1876,67559
  class Impl : public MatcherInterface<Pointer> {Impl1883,67785
    using Pointee =Pointee1885,67846
    explicit Impl(const InnerMatcher& matcher)Impl1889,67976
    void DescribeTo(::std::ostream* os) const override {DescribeTo1892,68084
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo1897,68219
    bool MatchAndExplain(Pointer pointer,MatchAndExplain1902,68370
    const Matcher<const Pointee&> matcher_;matcher_1911,68668
  const InnerMatcher matcher_;matcher_1914,68718
class PointerMatcher {PointerMatcher1922,68998
  explicit PointerMatcher(const InnerMatcher& matcher) : matcher_(matcher) {}PointerMatcher1924,69030
  operator Matcher<PointerType>() const {  // NOLINToperator Matcher<PointerType>1935,69579
  class Impl : public MatcherInterface<PointerType> {Impl1942,69832
    using Pointer =Pointer1944,69897
    explicit Impl(const InnerMatcher& matcher)Impl1948,70038
    void DescribeTo(::std::ostream* os) const override {DescribeTo1951,70139
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo1956,70269
    bool MatchAndExplain(PointerType pointer,MatchAndExplain1961,70411
    Matcher<Pointer> matcher_;matcher_1969,70696
  const InnerMatcher matcher_;matcher_1972,70733
class WhenDynamicCastToMatcherBase {WhenDynamicCastToMatcherBase1983,71194
  explicit WhenDynamicCastToMatcherBase(const Matcher<To>& matcher)WhenDynamicCastToMatcherBase1985,71240
  void DescribeTo(::std::ostream* os) const {DescribeTo1988,71338
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1993,71450
  const Matcher<To> matcher_;matcher_1999,71590
  static std::string GetToName() { return GetTypeName<To>(); }GetToName2001,71621
  static void GetCastTypeDescription(::std::ostream* os) {GetCastTypeDescription2004,71695
class WhenDynamicCastToMatcher : public WhenDynamicCastToMatcherBase<To> {WhenDynamicCastToMatcher2012,71914
  explicit WhenDynamicCastToMatcher(const Matcher<To>& matcher)WhenDynamicCastToMatcher2014,71998
  bool MatchAndExplain(From from, MatchResultListener* listener) const {MatchAndExplain2018,72143
class WhenDynamicCastToMatcher<To&> : public WhenDynamicCastToMatcherBase<To&> {WhenDynamicCastToMatcher2027,72435
  explicit WhenDynamicCastToMatcher(const Matcher<To&>& matcher)WhenDynamicCastToMatcher2029,72525
  bool MatchAndExplain(From& from, MatchResultListener* listener) const {MatchAndExplain2033,72672
class FieldMatcher {FieldMatcher2048,73225
  FieldMatcher(FieldType Class::*field,FieldMatcher2050,73255
  FieldMatcher(const std::string& field_name, FieldType Class::*field,FieldMatcher2054,73433
  void DescribeTo(::std::ostream* os) const {DescribeTo2060,73673
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo2065,73797
  bool MatchAndExplain(const T& value, MatchResultListener* listener) const {MatchAndExplain2071,73961
  bool MatchAndExplainImpl(std::false_type /* is_not_pointer */,MatchAndExplainImpl2080,74319
  bool MatchAndExplainImpl(std::true_type /* is_pointer */, const Class* p,MatchAndExplainImpl2087,74606
  const FieldType Class::*field_;field_2098,75067
  const Matcher<const FieldType&> matcher_;matcher_2099,75101
  const std::string whose_field_;whose_field_2103,75285
class PropertyMatcher {PropertyMatcher2112,75596
  typedef const PropertyType& RefToConstProperty;RefToConstProperty2114,75629
  PropertyMatcher(Property property, const Matcher<RefToConstProperty>& matcher)PropertyMatcher2116,75680
  PropertyMatcher(const std::string& property_name, Property property,PropertyMatcher2121,75870
  void DescribeTo(::std::ostream* os) const {DescribeTo2127,76130
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo2132,76257
  bool MatchAndExplain(const T& value, MatchResultListener* listener) const {MatchAndExplain2138,76424
  bool MatchAndExplainImpl(std::false_type /* is_not_pointer */,MatchAndExplainImpl2145,76654
  bool MatchAndExplainImpl(std::true_type /* is_pointer */, const Class* p,MatchAndExplainImpl2155,77125
  Property property_;property_2166,77596
  const Matcher<RefToConstProperty> matcher_;matcher_2167,77618
  const std::string whose_property_;whose_property_2171,77816
struct CallableTraits {CallableTraits2177,78028
  typedef Functor StorageType;StorageType2178,78052
  static void CheckIsValid(Functor /* functor */) {}CheckIsValid2180,78084
  static auto Invoke(Functor f, const T& arg) -> decltype(f(arg)) {Invoke2183,78162
struct CallableTraits<ResType (*)(ArgType)> {CallableTraits2190,78344
  typedef ResType ResultType;ResultType2191,78390
  typedef ResType (*StorageType)(ArgType);StorageType2192,78420
  static void CheckIsValid(ResType (*f)(ArgType)) {CheckIsValid2194,78464
  static ResType Invoke(ResType (*f)(ArgType), T arg) {Invoke2199,78638
class ResultOfMatcher {ResultOfMatcher2207,78878
  ResultOfMatcher(Callable callable, InnerMatcher matcher)ResultOfMatcher2209,78911
  ResultOfMatcher(const std::string& result_description, Callable callable,ResultOfMatcher2213,79090
  operator Matcher<T>() const {operator Matcher<T>2222,79418
  typedef typename CallableTraits<Callable>::StorageType CallableStorageType;CallableStorageType2228,79559
  class Impl : public MatcherInterface<T> {Impl2231,79662
    using ResultType = decltype(CallableTraits<Callable>::template Invoke<T>(ResultType2232,79706
    Impl(const std::string& result_description,Impl2237,79888
    void DescribeTo(::std::ostream* os) const override {DescribeTo2243,80139
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo2252,80420
    bool MatchAndExplain(T obj, MatchResultListener* listener) const override {MatchAndExplain2261,80717
    const std::string result_description_;result_description_2277,81443
    mutable CallableStorageType callable_;callable_2283,81823
    const Matcher<ResultType> matcher_;matcher_2284,81866
  const std::string result_description_;result_description_2287,81927
  const CallableStorageType callable_;callable_2288,81968
  const InnerMatcher matcher_;matcher_2289,82007
class SizeIsMatcher {SizeIsMatcher2294,82146
  explicit SizeIsMatcher(const SizeMatcher& size_matcher)SizeIsMatcher2296,82177
  operator Matcher<Container>() const {operator Matcher<Container>2300,82307
  class Impl : public MatcherInterface<Container> {Impl2305,82458
    using SizeType = decltype(std::declval<Container>().size());SizeType2307,82521
    explicit Impl(const SizeMatcher& size_matcher)Impl2308,82586
    void DescribeTo(::std::ostream* os) const override {DescribeTo2311,82702
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo2315,82823
    bool MatchAndExplain(Container container,MatchAndExplain2320,82961
    const Matcher<SizeType> size_matcher_;size_matcher_2332,83452
  const SizeMatcher size_matcher_;size_matcher_2336,83511
class BeginEndDistanceIsMatcher {BeginEndDistanceIsMatcher2342,83680
  explicit BeginEndDistanceIsMatcher(const DistanceMatcher& distance_matcher)BeginEndDistanceIsMatcher2344,83723
  operator Matcher<Container>() const {operator Matcher<Container>2348,83881
  class Impl : public MatcherInterface<Container> {Impl2353,84036
        ContainerView;ContainerView2357,84193
        DistanceType;DistanceType2360,84330
    explicit Impl(const DistanceMatcher& distance_matcher)Impl2361,84352
    void DescribeTo(::std::ostream* os) const override {DescribeTo2364,84488
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo2368,84643
    bool MatchAndExplain(Container container,MatchAndExplain2373,84815
    const Matcher<DistanceType> distance_matcher_;distance_matcher_2388,85455
  const DistanceMatcher distance_matcher_;distance_matcher_2392,85522
class ContainerEqMatcher {ContainerEqMatcher2406,86221
  typedef internal::StlContainerView<Container> View;View2408,86257
  typedef typename View::type StlContainer;StlContainer2409,86311
  typedef typename View::const_reference StlContainerReference;StlContainerReference2410,86355
  explicit ContainerEqMatcher(const Container& expected)ContainerEqMatcher2419,86745
  void DescribeTo(::std::ostream* os) const {DescribeTo2422,86846
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo2426,86953
  bool MatchAndExplain(const LhsContainer& lhs,MatchAndExplain2432,87112
        LhsView;LhsView2436,87318
  const StlContainer expected_;expected_2480,88767
struct LessComparator {LessComparator2484,88875
  bool operator()(const T& lhs, const U& rhs) const {operator ()2486,88935
class WhenSortedByMatcher {WhenSortedByMatcher2493,89136
  WhenSortedByMatcher(const Comparator& comparator,WhenSortedByMatcher2495,89173
  operator Matcher<LhsContainer>() const {operator Matcher<LhsContainer>2500,89370
  class Impl : public MatcherInterface<LhsContainer> {Impl2505,89524
        LhsView;LhsView2509,89687
    typedef typename LhsView::type LhsStlContainer;LhsStlContainer2510,89704
    typedef typename LhsView::const_reference LhsStlContainerReference;LhsStlContainerReference2511,89756
            LhsValue;LhsValue2516,90045
    Impl(const Comparator& comparator, const ContainerMatcher& matcher)Impl2518,90068
    void DescribeTo(::std::ostream* os) const override {DescribeTo2521,90197
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo2526,90323
    bool MatchAndExplain(LhsContainer lhs,MatchAndExplain2531,90465
    const Comparator comparator_;comparator_2557,91493
    const Matcher<const ::std::vector<LhsValue>&> matcher_;matcher_2558,91527
  const Comparator comparator_;comparator_2565,91679
  const ContainerMatcher matcher_;matcher_2566,91711
class PointwiseMatcher {PointwiseMatcher2574,92062
  typedef internal::StlContainerView<RhsContainer> RhsView;RhsView2580,92240
  typedef typename RhsView::type RhsStlContainer;RhsStlContainer2581,92300
  typedef typename RhsStlContainer::value_type RhsValue;RhsValue2582,92350
  PointwiseMatcher(const TupleMatcher& tuple_matcher, const RhsContainer& rhs)PointwiseMatcher2591,92758
  operator Matcher<LhsContainer>() const {operator Matcher<LhsContainer>2595,92940
  class Impl : public MatcherInterface<LhsContainer> {Impl2605,93269
        LhsView;LhsView2609,93432
    typedef typename LhsView::type LhsStlContainer;LhsStlContainer2610,93449
    typedef typename LhsView::const_reference LhsStlContainerReference;LhsStlContainerReference2611,93501
    typedef typename LhsStlContainer::value_type LhsValue;LhsValue2612,93573
    typedef ::std::tuple<const LhsValue&, const RhsValue&> InnerMatcherArg;InnerMatcherArg2617,93873
    Impl(const TupleMatcher& tuple_matcher, const RhsStlContainer& rhs)Impl2619,93950
    void DescribeTo(::std::ostream* os) const override {DescribeTo2624,94207
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo2631,94502
    bool MatchAndExplain(LhsContainer lhs,MatchAndExplain2640,94839
    const Matcher<InnerMatcherArg> mono_tuple_matcher_;mono_tuple_matcher_2681,96585
    const RhsStlContainer rhs_;rhs_2682,96641
  const TupleMatcher tuple_matcher_;tuple_matcher_2686,96689
  const RhsStlContainer rhs_;rhs_2687,96726
class QuantifierMatcherImpl : public MatcherInterface<Container> {QuantifierMatcherImpl2692,96860
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;RawContainer2694,96936
  typedef StlContainerView<RawContainer> View;View2695,97005
  typedef typename View::type StlContainer;StlContainer2696,97052
  typedef typename View::const_reference StlContainerReference;StlContainerReference2697,97096
  typedef typename StlContainer::value_type Element;Element2698,97160
  explicit QuantifierMatcherImpl(InnerMatcher inner_matcher)QuantifierMatcherImpl2701,97249
  bool MatchAndExplainImpl(bool all_elements_should_match, Container container,MatchAndExplainImpl2708,97578
  bool MatchAndExplainImpl(const Matcher<size_t>& count_matcher,MatchAndExplainImpl2727,98363
  const Matcher<const Element&> inner_matcher_;inner_matcher_2776,100118
class ContainsMatcherImpl : public QuantifierMatcherImpl<Container> {ContainsMatcherImpl2782,100312
  explicit ContainsMatcherImpl(InnerMatcher inner_matcher)ContainsMatcherImpl2785,100426
  void DescribeTo(::std::ostream* os) const override {DescribeTo2789,100584
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo2794,100735
  bool MatchAndExplain(Container container,MatchAndExplain2799,100892
class EachMatcherImpl : public QuantifierMatcherImpl<Container> {EachMatcherImpl2808,101223
  explicit EachMatcherImpl(InnerMatcher inner_matcher)EachMatcherImpl2811,101333
  void DescribeTo(::std::ostream* os) const override {DescribeTo2815,101487
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo2820,101631
  bool MatchAndExplain(Container container,MatchAndExplain2825,101790
class ContainsTimesMatcherImpl : public QuantifierMatcherImpl<Container> {ContainsTimesMatcherImpl2834,102099
  explicit ContainsTimesMatcherImpl(InnerMatcher inner_matcher,ContainsTimesMatcherImpl2837,102218
  void DescribeTo(::std::ostream* os) const override {DescribeTo2842,102459
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo2849,102658
  bool MatchAndExplain(Container container,MatchAndExplain2856,102873
  const Matcher<size_t> count_matcher_;count_matcher_2862,103078
class ContainsTimesMatcher {ContainsTimesMatcher2867,103206
  explicit ContainsTimesMatcher(M m, Matcher<size_t> count_matcher)ContainsTimesMatcher2869,103244
  operator Matcher<Container>() const {  // NOLINToperator Matcher<Container>2873,103416
  const M inner_matcher_;inner_matcher_2879,103602
  const Matcher<size_t> count_matcher_;count_matcher_2880,103628
class ContainsMatcher {ContainsMatcher2885,103747
  explicit ContainsMatcher(M m) : inner_matcher_(m) {}ContainsMatcher2887,103780
  operator Matcher<Container>() const {  // NOLINToperator Matcher<Container>2890,103868
  ContainsTimesMatcher<M> Times(Matcher<size_t> count_matcher) const {Times2895,104023
  const M inner_matcher_;inner_matcher_2900,104187
class EachMatcher {EachMatcher2905,104288
  explicit EachMatcher(M m) : inner_matcher_(m) {}EachMatcher2907,104317
  operator Matcher<Container>() const {  // NOLINToperator Matcher<Container>2910,104401
  const M inner_matcher_;inner_matcher_2916,104562
struct Rank1 {};Rank12919,104592
struct Rank0 : Rank1 {};Rank02920,104609
namespace pair_getters {pair_getters2922,104635
auto First(T& x, Rank1) -> decltype(get<0>(x)) {  // NOLINTFirst2925,104698
auto First(T& x, Rank0) -> decltype((x.first)) {  // NOLINTFirst2929,104802
auto Second(T& x, Rank1) -> decltype(get<1>(x)) {  // NOLINTSecond2934,104905
auto Second(T& x, Rank0) -> decltype((x.second)) {  // NOLINTSecond2938,105010
class KeyMatcherImpl : public MatcherInterface<PairType> {KeyMatcherImpl2948,105433
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(PairType) RawPairType;RawPairType2950,105501
  typedef typename RawPairType::first_type KeyType;KeyType2951,105568
  explicit KeyMatcherImpl(InnerMatcher inner_matcher)KeyMatcherImpl2954,105656
  bool MatchAndExplain(PairType key_value,MatchAndExplain2960,105900
  void DescribeTo(::std::ostream* os) const override {DescribeTo2973,106404
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo2979,106584
  const Matcher<const KeyType&> inner_matcher_;inner_matcher_2985,106736
class KeyMatcher {KeyMatcher2990,106858
  explicit KeyMatcher(M m) : matcher_for_key_(m) {}KeyMatcher2992,106886
  operator Matcher<PairType>() const {operator Matcher<PairType>2995,106970
  const M matcher_for_key_;matcher_for_key_3001,107118
class AddressMatcher {AddressMatcher3006,107239
  explicit AddressMatcher(InnerMatcher m) : matcher_(m) {}AddressMatcher3008,107271
  operator Matcher<Type>() const {  // NOLINToperator Matcher<Type>3011,107358
  class Impl : public MatcherInterface<Type> {Impl3018,107582
    using Address = const GTEST_REMOVE_REFERENCE_AND_CONST_(Type) *;Address3020,107640
    explicit Impl(const InnerMatcher& matcher)Impl3021,107709
    void DescribeTo(::std::ostream* os) const override {DescribeTo3024,107810
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo3029,107939
    bool MatchAndExplain(Type object,MatchAndExplain3034,108086
    const Matcher<Address> matcher_;matcher_3042,108369
  const InnerMatcher matcher_;matcher_3044,108411
class PairMatcherImpl : public MatcherInterface<PairType> {PairMatcherImpl3050,108611
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(PairType) RawPairType;RawPairType3052,108680
  typedef typename RawPairType::first_type FirstType;FirstType3053,108747
  typedef typename RawPairType::second_type SecondType;SecondType3054,108801
  PairMatcherImpl(FirstMatcher first_matcher, SecondMatcher second_matcher)PairMatcherImpl3057,108917
  void DescribeTo(::std::ostream* os) const override {DescribeTo3064,109230
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo3072,109499
  bool MatchAndExplain(PairType a_pair,MatchAndExplain3081,109855
  void ExplainSuccess(const std::string& first_explanation,ExplainSuccess3109,111101
  const Matcher<const FirstType&> first_matcher_;first_matcher_3127,111712
  const Matcher<const SecondType&> second_matcher_;second_matcher_3128,111762
class PairMatcher {PairMatcher3133,111938
  PairMatcher(FirstMatcher first_matcher, SecondMatcher second_matcher)PairMatcher3135,111967
  operator Matcher<PairType>() const {operator Matcher<PairType>3139,112145
  const FirstMatcher first_matcher_;first_matcher_3145,112309
  const SecondMatcher second_matcher_;second_matcher_3146,112346
auto UnpackStructImpl(const T& t, IndexSequence<I...>, int)UnpackStructImpl3150,112424
auto UnpackStructImpl(const T& t, MakeIndexSequence<1>, char) {UnpackStructImpl3159,112797
auto UnpackStructImpl(const T& t, MakeIndexSequence<2>, char) {UnpackStructImpl3164,112930
auto UnpackStructImpl(const T& t, MakeIndexSequence<3>, char) {UnpackStructImpl3169,113069
auto UnpackStructImpl(const T& t, MakeIndexSequence<4>, char) {UnpackStructImpl3174,113214
auto UnpackStructImpl(const T& t, MakeIndexSequence<5>, char) {UnpackStructImpl3179,113365
auto UnpackStructImpl(const T& t, MakeIndexSequence<6>, char) {UnpackStructImpl3184,113522
auto UnpackStructImpl(const T& t, MakeIndexSequence<7>, char) {UnpackStructImpl3189,113685
auto UnpackStructImpl(const T& t, MakeIndexSequence<8>, char) {UnpackStructImpl3194,113854
auto UnpackStructImpl(const T& t, MakeIndexSequence<9>, char) {UnpackStructImpl3199,114029
auto UnpackStructImpl(const T& t, MakeIndexSequence<10>, char) {UnpackStructImpl3204,114210
auto UnpackStructImpl(const T& t, MakeIndexSequence<11>, char) {UnpackStructImpl3209,114398
auto UnpackStructImpl(const T& t, MakeIndexSequence<12>, char) {UnpackStructImpl3214,114592
auto UnpackStructImpl(const T& t, MakeIndexSequence<13>, char) {UnpackStructImpl3219,114792
auto UnpackStructImpl(const T& t, MakeIndexSequence<14>, char) {UnpackStructImpl3224,114998
auto UnpackStructImpl(const T& t, MakeIndexSequence<15>, char) {UnpackStructImpl3229,115210
auto UnpackStructImpl(const T& t, MakeIndexSequence<16>, char) {UnpackStructImpl3234,115428
auto UnpackStructImpl(const T& t, MakeIndexSequence<17>, char) {UnpackStructImpl3239,115652
auto UnpackStructImpl(const T& t, MakeIndexSequence<18>, char) {UnpackStructImpl3244,115882
auto UnpackStructImpl(const T& t, MakeIndexSequence<19>, char) {UnpackStructImpl3249,116118
auto UnpackStruct(const T& t)UnpackStruct3256,116417
void VariadicExpand(const T (&)[N]) {}VariadicExpand3265,116751
class FieldsAreMatcherImpl<Struct, IndexSequence<I...>>FieldsAreMatcherImpl3271,116908
  using UnpackedType =UnpackedType3273,117004
  using MatchersType = std::tuple<MatchersType3275,117102
  explicit FieldsAreMatcherImpl(const Inner& matchers)FieldsAreMatcherImpl3280,117253
  void DescribeTo(::std::ostream* os) const override {DescribeTo3285,117473
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo3292,117724
  bool MatchAndExplain(Struct t, MatchResultListener* listener) const override {MatchAndExplain3299,118013
  bool MatchInternal(UnpackedType tuple, MatchResultListener* listener) const {MatchInternal3304,118178
  MatchersType matchers_;matchers_3342,119490
class FieldsAreMatcher {FieldsAreMatcher3346,119549
  explicit FieldsAreMatcher(Inner... inner) : matchers_(std::move(inner)...) {}FieldsAreMatcher3348,119583
  operator Matcher<Struct>() const {  // NOLINToperator Matcher<Struct>3351,119693
  std::tuple<Inner...> matchers_;matchers_3358,119886
class ElementsAreMatcherImpl : public MatcherInterface<Container> {ElementsAreMatcherImpl3363,120006
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;RawContainer3365,120083
  typedef internal::StlContainerView<RawContainer> View;View3366,120152
  typedef typename View::type StlContainer;StlContainer3367,120209
  typedef typename View::const_reference StlContainerReference;StlContainerReference3368,120253
  typedef typename StlContainer::value_type Element;Element3369,120317
  ElementsAreMatcherImpl(InputIter first, InputIter last) {ElementsAreMatcherImpl3374,120491
  void DescribeTo(::std::ostream* os) const override {DescribeTo3381,120695
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo3400,121232
  bool MatchAndExplain(Container container,MatchAndExplain3416,121627
  static Message Elements(size_t count) {Elements3497,124541
  size_t count() const { return matchers_.size(); }count3501,124662
class GTEST_API_ MatchMatrix {MatchMatrix3510,125007
  MatchMatrix(size_t num_elements, size_t num_matchers)MatchMatrix3512,125047
  size_t LhsSize() const { return num_elements_; }LhsSize3517,125232
  size_t RhsSize() const { return num_matchers_; }RhsSize3518,125283
  bool HasEdge(size_t ilhs, size_t irhs) const {HasEdge3519,125334
  void SetEdge(size_t ilhs, size_t irhs, bool b) {SetEdge3522,125437
  size_t SpaceIndex(size_t ilhs, size_t irhs) const {SpaceIndex3536,125796
  size_t num_elements_;num_elements_3540,125895
  size_t num_matchers_;num_matchers_3541,125919
typedef ::std::pair<size_t, size_t> ElementMatcherPair;ElementMatcherPair3549,126177
typedef ::std::vector<ElementMatcherPair> ElementMatcherPairs;ElementMatcherPairs3550,126233
struct UnorderedMatcherRequire {UnorderedMatcherRequire3556,126518
  enum Flags {Flags3557,126551
    Superset = 1 << 0,Superset3558,126566
    Subset = 1 << 1,Subset3559,126589
    ExactMatch = Superset | Subset,ExactMatch3560,126610
class GTEST_API_ UnorderedElementsAreMatcherImplBase {UnorderedElementsAreMatcherImplBase3567,126841
  explicit UnorderedElementsAreMatcherImplBase(UnorderedElementsAreMatcherImplBase3569,126908
  typedef ::std::vector<const MatcherDescriberInterface*> MatcherDescriberVec;MatcherDescriberVec3576,127218
  MatcherDescriberVec& matcher_describers() { return matcher_describers_; }matcher_describers3591,127820
  static Message Elements(size_t n) {Elements3593,127897
  UnorderedMatcherRequire::Flags match_flags() const { return match_flags_; }match_flags3597,128004
  UnorderedMatcherRequire::Flags match_flags_;match_flags_3600,128093
  MatcherDescriberVec matcher_describers_;matcher_describers_3601,128140
class UnorderedElementsAreMatcherImplUnorderedElementsAreMatcherImpl3607,128313
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;RawContainer3611,128453
  typedef internal::StlContainerView<RawContainer> View;View3612,128522
  typedef typename View::type StlContainer;StlContainer3613,128579
  typedef typename View::const_reference StlContainerReference;StlContainerReference3614,128623
  typedef typename StlContainer::value_type Element;Element3615,128687
  UnorderedElementsAreMatcherImpl(UnorderedMatcherRequire::Flags matcher_flags,UnorderedElementsAreMatcherImpl3618,128773
  void DescribeTo(::std::ostream* os) const override {DescribeTo3630,129232
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo3635,129415
  bool MatchAndExplain(Container container,MatchAndExplain3639,129559
  MatchMatrix AnalyzeElements(ElementIter elem_first, ElementIter elem_last,AnalyzeElements3670,130746
struct CastAndAppendTransform {CastAndAppendTransform3703,131995
  Matcher<Target> operator()(const Arg& a) const {operator ()3705,132053
class UnorderedElementsAreMatcher {UnorderedElementsAreMatcher3712,132216
  explicit UnorderedElementsAreMatcher(const MatcherTuple& args)UnorderedElementsAreMatcher3714,132261
  operator Matcher<Container>() const {operator Matcher<Container>3718,132386
    typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;RawContainer3719,132426
    typedef typename internal::StlContainerView<RawContainer>::type View;View3720,132497
    typedef typename View::value_type Element;Element3721,132571
    typedef ::std::vector<Matcher<const Element&>> MatcherVec;MatcherVec3722,132618
  const MatcherTuple matchers_;matchers_3734,133110
class ElementsAreMatcher {ElementsAreMatcher3739,133206
  explicit ElementsAreMatcher(const MatcherTuple& args) : matchers_(args) {}ElementsAreMatcher3741,133242
  operator Matcher<Container>() const {operator Matcher<Container>3744,133352
    typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;RawContainer3750,133599
    typedef typename internal::StlContainerView<RawContainer>::type View;View3751,133670
    typedef typename View::value_type Element;Element3752,133744
    typedef ::std::vector<Matcher<const Element&>> MatcherVec;MatcherVec3753,133791
  const MatcherTuple matchers_;matchers_3763,134212
class UnorderedElementsAreArrayMatcher {UnorderedElementsAreArrayMatcher3768,134347
  UnorderedElementsAreArrayMatcher(UnorderedMatcherRequire::Flags match_flags,UnorderedElementsAreArrayMatcher3771,134424
  operator Matcher<Container>() const {operator Matcher<Container>3776,134655
  UnorderedMatcherRequire::Flags match_flags_;match_flags_3783,134868
class ElementsAreArrayMatcher {ElementsAreArrayMatcher3789,135005
  ElementsAreArrayMatcher(Iter first, Iter last) : matchers_(first, last) {}ElementsAreArrayMatcher3792,135073
  operator Matcher<Container>() const {operator Matcher<Container>3795,135183
  const ::std::vector<T> matchers_;matchers_3805,135514
class BoundSecondMatcher {BoundSecondMatcher3818,136091
  BoundSecondMatcher(const Tuple2Matcher& tm, const Second& second)BoundSecondMatcher3820,136127
  operator Matcher<T>() const {operator Matcher<T>3826,136340
  void operator=(const BoundSecondMatcher& /*rhs*/) {operator =3838,136852
  class Impl : public MatcherInterface<T> {Impl3844,137018
    typedef ::std::tuple<T, Second> ArgTuple;ArgTuple3846,137073
    Impl(const Tuple2Matcher& tm, const Second& second)Impl3848,137120
    void DescribeTo(::std::ostream* os) const override {DescribeTo3852,137282
    bool MatchAndExplain(T x, MatchResultListener* listener) const override {MatchAndExplain3859,137469
    const Matcher<const ArgTuple&> mono_tuple2_matcher_;mono_tuple2_matcher_3865,137705
    const Second second_value_;second_value_3866,137762
  const Tuple2Matcher tuple2_matcher_;tuple2_matcher_3869,137800
  const Second second_value_;second_value_3870,137839
BoundSecondMatcher<Tuple2Matcher, Second> MatcherBindSecond(MatcherBindSecond3878,138186
class OptionalMatcher {OptionalMatcher3894,138974
  explicit OptionalMatcher(const ValueMatcher& value_matcher)OptionalMatcher3896,139007
  operator Matcher<Optional>() const {operator Matcher<Optional>3900,139142
  class Impl : public MatcherInterface<Optional> {Impl3905,139290
    typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Optional) OptionalView;OptionalView3907,139352
    typedef typename OptionalView::value_type ValueType;ValueType3908,139422
    explicit Impl(const ValueMatcher& value_matcher)Impl3909,139479
    void DescribeTo(::std::ostream* os) const override {DescribeTo3912,139600
    void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo3917,139724
    bool MatchAndExplain(Optional optional,MatchAndExplain3922,139864
    const Matcher<ValueType> value_matcher_;value_matcher_3938,140472
  const ValueMatcher value_matcher_;value_matcher_3942,140533
namespace variant_matcher {variant_matcher3945,140574
void holds_alternative() {}holds_alternative3948,140686
void get() {}get3950,140736
class VariantMatcher {VariantMatcher3954,140849
  explicit VariantMatcher(::testing::Matcher<const T&> matcher)VariantMatcher3956,140881
  bool MatchAndExplain(const Variant& value,MatchAndExplain3960,141016
  void DescribeTo(std::ostream* os) const {DescribeTo3981,141766
  void DescribeNegationTo(std::ostream* os) const {DescribeNegationTo3987,141941
  static std::string GetTypeName() {GetTypeName3994,142152
  const ::testing::Matcher<const T&> matcher_;matcher_4002,142347
namespace any_cast_matcher {any_cast_matcher4007,142431
void any_cast() {}any_cast4011,142545
class AnyCastMatcher {AnyCastMatcher4015,142637
  explicit AnyCastMatcher(const ::testing::Matcher<const T&>& matcher)AnyCastMatcher4017,142669
  bool MatchAndExplain(const AnyType& value,MatchAndExplain4021,142800
  void DescribeTo(std::ostream* os) const {DescribeTo4042,143545
  void DescribeNegationTo(std::ostream* os) const {DescribeNegationTo4048,143722
  static std::string GetTypeName() {GetTypeName4055,143935
  const ::testing::Matcher<const T&> matcher_;matcher_4063,144130
class ArgsMatcherImpl : public MatcherInterface<ArgsTuple> {ArgsMatcherImpl4070,144289
  using RawArgsTuple = typename std::decay<ArgsTuple>::type;RawArgsTuple4072,144359
  using SelectedArgs =SelectedArgs4073,144420
  using MonomorphicInnerMatcher = Matcher<const SelectedArgs&>;MonomorphicInnerMatcher4075,144516
  explicit ArgsMatcherImpl(const InnerMatcher& inner_matcher)ArgsMatcherImpl4078,144616
  bool MatchAndExplain(ArgsTuple args,MatchAndExplain4081,144758
  void DescribeTo(::std::ostream* os) const override {DescribeTo4099,145446
  void DescribeNegationTo(::std::ostream* os) const override {DescribeNegationTo4105,145590
  static void PrintIndices(::std::ostream* os) {PrintIndices4113,145808
  MonomorphicInnerMatcher inner_matcher_;inner_matcher_4123,146103
class ArgsMatcher {ArgsMatcher4127,146192
  explicit ArgsMatcher(InnerMatcher inner_matcher)ArgsMatcher4129,146221
  operator Matcher<ArgsTuple>() const {  // NOLINToperator Matcher<ArgsTuple>4133,146357
  InnerMatcher inner_matcher_;inner_matcher_4138,146501
ElementsAreArray(Iter first, Iter last) {ElementsAreArray4161,147370
  typedef typename ::std::iterator_traits<Iter>::value_type T;T4162,147412
inline auto ElementsAreArray(const T* pointer, size_t count)ElementsAreArray4167,147560
inline auto ElementsAreArray(const T (&array)[N])ElementsAreArray4173,147771
inline auto ElementsAreArray(const Container& container)ElementsAreArray4179,147937
inline auto ElementsAreArray(::std::initializer_list<T> xs)ElementsAreArray4185,148154
UnorderedElementsAreArray(Iter first, Iter last) {UnorderedElementsAreArray4206,149014
  typedef typename ::std::iterator_traits<Iter>::value_type T;T4207,149065
inline internal::UnorderedElementsAreArrayMatcher<T> UnorderedElementsAreArray(UnorderedElementsAreArray4213,149276
inline internal::UnorderedElementsAreArrayMatcher<T> UnorderedElementsAreArray(UnorderedElementsAreArray4219,149491
UnorderedElementsAreArray(const Container& container) {UnorderedElementsAreArray4227,149764
inline internal::UnorderedElementsAreArrayMatcher<T> UnorderedElementsAreArray(UnorderedElementsAreArray4232,149917
const internal::AnythingMatcher _ = {};_4246,150484
inline Matcher<T> A() {A4249,150611
inline Matcher<T> An() {An4255,150737
Matcher<T> internal::MatcherCastImpl<T, M>::CastImpl(CastImpl4260,150811
inline PolymorphicMatcher<internal::IsNullMatcher> IsNull() {IsNull4267,151064
inline PolymorphicMatcher<internal::NotNullMatcher> NotNull() {NotNull4274,151394
inline internal::RefMatcher<T&> Ref(T& x) {  // NOLINTRef4281,151634
inline PolymorphicMatcher<internal::IsNanMatcher> IsNan() {IsNan4286,151800
inline internal::FloatingEqMatcher<double> DoubleEq(double rhs) {DoubleEq4292,152046
inline internal::FloatingEqMatcher<double> NanSensitiveDoubleEq(double rhs) {NanSensitiveDoubleEq4298,152296
inline internal::FloatingEqMatcher<double> DoubleNear(double rhs,DoubleNear4305,152659
inline internal::FloatingEqMatcher<double> NanSensitiveDoubleNear(NanSensitiveDoubleNear4313,153103
inline internal::FloatingEqMatcher<float> FloatEq(float rhs) {FloatEq4320,153408
inline internal::FloatingEqMatcher<float> NanSensitiveFloatEq(float rhs) {NanSensitiveFloatEq4326,153653
inline internal::FloatingEqMatcher<float> FloatNear(float rhs,FloatNear4333,154011
inline internal::FloatingEqMatcher<float> NanSensitiveFloatNear(NanSensitiveFloatNear4341,154447
inline internal::PointeeMatcher<InnerMatcher> Pointee(Pointee4349,154770
WhenDynamicCastTo(const Matcher<To>& inner_matcher) {WhenDynamicCastTo4363,155397
inline PolymorphicMatcher<internal::FieldMatcher<Class, FieldType>> Field(Field4374,155830
inline PolymorphicMatcher<internal::FieldMatcher<Class, FieldType>> Field(Field4387,156477
Property(PropertyType (Class::*property)() const,Property4401,157189
Property(const std::string& property_name,Property4418,158023
Property(PropertyType (Class::*property)() const&,Property4431,158649
Property(const std::string& property_name,Property4443,159217
internal::ResultOfMatcher<Callable, InnerMatcher> ResultOf(ResultOf4461,160155
internal::ResultOfMatcher<Callable, InnerMatcher> ResultOf(ResultOf4470,160597
PolymorphicMatcher<internal::StrEqualityMatcher<std::string>> StrEq(StrEq4481,160969
PolymorphicMatcher<internal::StrEqualityMatcher<std::string>> StrNe(StrNe4489,161270
PolymorphicMatcher<internal::StrEqualityMatcher<std::string>> StrCaseEq(StrCaseEq4497,161583
PolymorphicMatcher<internal::StrEqualityMatcher<std::string>> StrCaseNe(StrCaseNe4505,161904
PolymorphicMatcher<internal::HasSubstrMatcher<std::string>> HasSubstr(HasSubstr4514,162282
PolymorphicMatcher<internal::StartsWithMatcher<std::string>> StartsWith(StartsWith4522,162609
PolymorphicMatcher<internal::EndsWithMatcher<std::string>> EndsWith(EndsWith4530,162931
inline PolymorphicMatcher<internal::StrEqualityMatcher<std::wstring>> StrEq(StrEq4540,163235
inline PolymorphicMatcher<internal::StrEqualityMatcher<std::wstring>> StrNe(StrNe4547,163485
inline PolymorphicMatcher<internal::StrEqualityMatcher<std::wstring>> StrCaseEq(StrCaseEq4554,163747
inline PolymorphicMatcher<internal::StrEqualityMatcher<std::wstring>> StrCaseNe(StrCaseNe4561,164017
inline PolymorphicMatcher<internal::HasSubstrMatcher<std::wstring>> HasSubstr(HasSubstr4569,164353
inline PolymorphicMatcher<internal::StartsWithMatcher<std::wstring>> StartsWith(StartsWith4576,164629
inline PolymorphicMatcher<internal::EndsWithMatcher<std::wstring>> EndsWith(EndsWith4583,164900
inline internal::Eq2Matcher Eq() { return internal::Eq2Matcher(); }Eq4593,165239
inline internal::Ge2Matcher Ge() { return internal::Ge2Matcher(); }Ge4597,165410
inline internal::Gt2Matcher Gt() { return internal::Gt2Matcher(); }Gt4601,165580
inline internal::Le2Matcher Le() { return internal::Le2Matcher(); }Le4605,165751
inline internal::Lt2Matcher Lt() { return internal::Lt2Matcher(); }Lt4609,165921
inline internal::Ne2Matcher Ne() { return internal::Ne2Matcher(); }Ne4613,166092
inline internal::FloatingEq2Matcher<float> FloatEq() {FloatEq4617,166273
inline internal::FloatingEq2Matcher<double> DoubleEq() {DoubleEq4623,166492
inline internal::FloatingEq2Matcher<float> NanSensitiveFloatEq() {NanSensitiveFloatEq4629,166731
inline internal::FloatingEq2Matcher<double> NanSensitiveDoubleEq() {NanSensitiveDoubleEq4635,166984
inline internal::FloatingEq2Matcher<float> FloatNear(float max_abs_error) {FloatNear4641,167238
inline internal::FloatingEq2Matcher<double> DoubleNear(double max_abs_error) {DoubleNear4647,167508
inline internal::FloatingEq2Matcher<float> NanSensitiveFloatNear(NanSensitiveFloatNear4654,167802
inline internal::FloatingEq2Matcher<double> NanSensitiveDoubleNear(NanSensitiveDoubleNear4662,168116
inline internal::NotMatcher<InnerMatcher> Not(InnerMatcher m) {Not4670,168395
inline PolymorphicMatcher<internal::TrulyMatcher<Predicate>> Truly(Truly4678,168732
inline internal::SizeIsMatcher<SizeMatcher> SizeIs(SizeIs4690,169343
inline internal::BeginEndDistanceIsMatcher<DistanceMatcher> BeginEndDistanceIs(BeginEndDistanceIs4701,169897
ContainerEq(const Container& rhs) {ContainerEq4713,170499
inline internal::WhenSortedByMatcher<Comparator, ContainerMatcher> WhenSortedBy(WhenSortedBy4720,170797
WhenSorted(const ContainerMatcher& container_matcher) {WhenSorted4730,171302
Pointwise(const TupleMatcher& tuple_matcher, const Container& rhs) {Pointwise4745,172129
inline internal::PointwiseMatcher<TupleMatcher, std::vector<T>> Pointwise(Pointwise4752,172437
UnorderedPointwise(const Tuple2Matcher& tuple2_matcher,UnorderedPointwise4774,173534
  typedef typename internal::StlContainerView<RhsContainer> RhsView;RhsView4778,173773
  typedef typename RhsView::type RhsStlContainer;RhsStlContainer4779,173842
  typedef typename RhsStlContainer::value_type Second;Second4780,173892
UnorderedPointwise(const Tuple2Matcher& tuple2_matcher,UnorderedPointwise4799,174663
inline internal::ContainsMatcher<M> Contains(M matcher) {Contains4836,176003
IsSupersetOf(Iter first, Iter last) {IsSupersetOf4870,177582
  typedef typename ::std::iterator_traits<Iter>::value_type T;T4871,177620
inline internal::UnorderedElementsAreArrayMatcher<T> IsSupersetOf(IsSupersetOf4877,177829
inline internal::UnorderedElementsAreArrayMatcher<T> IsSupersetOf(IsSupersetOf4883,178018
IsSupersetOf(const Container& container) {IsSupersetOf4891,178265
inline internal::UnorderedElementsAreArrayMatcher<T> IsSupersetOf(IsSupersetOf4896,178392
IsSubsetOf(Iter first, Iter last) {IsSubsetOf4927,179789
  typedef typename ::std::iterator_traits<Iter>::value_type T;T4928,179825
inline internal::UnorderedElementsAreArrayMatcher<T> IsSubsetOf(IsSubsetOf4934,180032
inline internal::UnorderedElementsAreArrayMatcher<T> IsSubsetOf(IsSubsetOf4940,180217
IsSubsetOf(const Container& container) {IsSubsetOf4948,180460
inline internal::UnorderedElementsAreArrayMatcher<T> IsSubsetOf(IsSubsetOf4953,180583
inline internal::EachMatcher<M> Each(M matcher) {Each4986,181724
inline internal::KeyMatcher<M> Key(M inner_matcher) {Key4994,182057
inline internal::PairMatcher<FirstMatcher, SecondMatcher> Pair(Pair5004,182578
namespace no_adl {no_adl5010,182861
internal::ConditionalMatcher<MatcherTrue, MatcherFalse> Conditional(Conditional5017,183232
internal::FieldsAreMatcher<typename std::decay<M>::type...> FieldsAre(FieldsAre5028,183822
inline internal::PointerMatcher<InnerMatcher> Pointer(Pointer5037,184149
inline internal::AddressMatcher<InnerMatcher> Address(Address5045,184440
internal::WhenBase64UnescapedMatcher WhenBase64Unescaped(WhenBase64Unescaped5053,184730
inline internal::MatcherAsPredicate<M> Matches(M matcher) {Matches5062,185032
inline bool Value(const T& value, M matcher) {Value5068,185242
inline bool ExplainMatchResult(M matcher, const T& value,ExplainMatchResult5075,185462
std::string DescribeMatcher(const M& matcher, bool negation = false) {DescribeMatcher5092,186260
ElementsAre(const Args&... matchers) {ElementsAre5106,186683
UnorderedElementsAre(const Args&... matchers) {UnorderedElementsAre5115,186989
internal::AllOfMatcher<typename std::decay<const Args&>::type...> AllOf(AllOf5123,187252
internal::AnyOfMatcher<typename std::decay<const Args&>::type...> AnyOf(AnyOf5130,187483
AnyOfArray(Iter first, Iter last) {AnyOfArray5161,188539
AllOfArray(Iter first, Iter last) {AllOfArray5169,188803
inline internal::AnyOfArrayMatcher<T> AnyOfArray(const T* ptr, size_t count) {AnyOfArray5175,188973
inline internal::AllOfArrayMatcher<T> AllOfArray(const T* ptr, size_t count) {AllOfArray5180,189116
inline internal::AnyOfArrayMatcher<T> AnyOfArray(const T (&array)[N]) {AnyOfArray5185,189269
inline internal::AllOfArrayMatcher<T> AllOfArray(const T (&array)[N]) {AllOfArray5190,189407
inline internal::AnyOfArrayMatcher<typename Container::value_type> AnyOfArray(AnyOfArray5195,189543
inline internal::AllOfArrayMatcher<typename Container::value_type> AllOfArray(AllOfArray5201,189746
inline internal::AnyOfArrayMatcher<T> AnyOfArray(AnyOfArray5207,189941
inline internal::AllOfArrayMatcher<T> AllOfArray(AllOfArray5213,190096
internal::ArgsMatcher<typename std::decay<InnerMatcher>::type, k...> Args(Args5222,190471
inline InnerMatcher AllArgs(const InnerMatcher& matcher) {AllArgs5236,190927
inline internal::OptionalMatcher<ValueMatcher> Optional(Optional5249,191588
PolymorphicMatcher<internal::any_cast_matcher::AnyCastMatcher<T>> AnyWith(AnyWith5256,191850
PolymorphicMatcher<internal::variant_matcher::VariantMatcher<T>> VariantWith(VariantWith5267,192290
namespace internal {internal5277,192648
class WithWhatMatcherImpl {WithWhatMatcherImpl5279,192670
  WithWhatMatcherImpl(Matcher<std::string> matcher)WithWhatMatcherImpl5281,192707
  void DescribeTo(std::ostream* os) const {DescribeTo5284,192800
  void DescribeNegationTo(std::ostream* os) const {DescribeNegationTo5289,192915
  bool MatchAndExplain(const Err& err, MatchResultListener* listener) const {MatchAndExplain5295,193073
  const Matcher<std::string> matcher_;matcher_5302,193322
inline PolymorphicMatcher<WithWhatMatcherImpl> WithWhat(WithWhat5305,193365
class ExceptionMatcherImpl {ExceptionMatcherImpl5311,193547
  class NeverThrown {NeverThrown5312,193576
    const char* what() const noexcept {what5314,193609
  using DefaultExceptionType = typename std::conditional<DefaultExceptionType5340,194652
  ExceptionMatcherImpl(Matcher<const Err&> matcher)ExceptionMatcherImpl5347,194936
  void DescribeTo(std::ostream* os) const {DescribeTo5350,195029
  void DescribeNegationTo(std::ostream* os) const {DescribeNegationTo5356,195197
  bool MatchAndExplain(T&& x, MatchResultListener* listener) const {MatchAndExplain5363,195409
  const Matcher<const Err&> matcher_;matcher_5389,196220
PolymorphicMatcher<internal::ExceptionMatcherImpl<Err>> Throws() {Throws5417,196983
PolymorphicMatcher<internal::ExceptionMatcherImpl<Err>> Throws(Throws5423,197198
PolymorphicMatcher<internal::ExceptionMatcherImpl<Err>> ThrowsMessage(ThrowsMessage5433,197700
#define ASSERT_THAT(ASSERT_THAT5447,198376
#define EXPECT_THAT(EXPECT_THAT5450,198530
#define MATCHER(MATCHER5455,198729
#define MATCHER_P(MATCHER_P5492,201577
#define MATCHER_P2(MATCHER_P25494,201693
#define MATCHER_P3(MATCHER_P35497,201878
#define MATCHER_P4(MATCHER_P45500,202077
#define MATCHER_P5(MATCHER_P55503,202268
#define MATCHER_P6(MATCHER_P65506,202468
#define MATCHER_P7(MATCHER_P75510,202711
#define MATCHER_P8(MATCHER_P85514,202970
#define MATCHER_P9(MATCHER_P95518,203245
#define MATCHER_P10(MATCHER_P105522,203536
#define GMOCK_INTERNAL_MATCHER(GMOCK_INTERNAL_MATCHER5527,203847
#define GMOCK_INTERNAL_MATCHER_TEMPLATE_PARAMS(GMOCK_INTERNAL_MATCHER_TEMPLATE_PARAMS5577,207748
#define GMOCK_INTERNAL_MATCHER_TEMPLATE_PARAM(GMOCK_INTERNAL_MATCHER_TEMPLATE_PARAM5580,207930
#define GMOCK_INTERNAL_MATCHER_TYPE_PARAMS(GMOCK_INTERNAL_MATCHER_TYPE_PARAMS5583,208031
#define GMOCK_INTERNAL_MATCHER_TYPE_PARAM(GMOCK_INTERNAL_MATCHER_TYPE_PARAM5585,208160
#define GMOCK_INTERNAL_MATCHER_FUNCTION_ARGS(GMOCK_INTERNAL_MATCHER_FUNCTION_ARGS5588,208248
#define GMOCK_INTERNAL_MATCHER_FUNCTION_ARG(GMOCK_INTERNAL_MATCHER_FUNCTION_ARG5591,208406
#define GMOCK_INTERNAL_MATCHER_FORWARD_ARGS(GMOCK_INTERNAL_MATCHER_FORWARD_ARGS5594,208500
#define GMOCK_INTERNAL_MATCHER_FORWARD_ARG(GMOCK_INTERNAL_MATCHER_FORWARD_ARG5596,208631
#define GMOCK_INTERNAL_MATCHER_MEMBERS(GMOCK_INTERNAL_MATCHER_MEMBERS5599,208746
#define GMOCK_INTERNAL_MATCHER_MEMBER(GMOCK_INTERNAL_MATCHER_MEMBER5601,208852
#define GMOCK_INTERNAL_MATCHER_MEMBERS_USAGE(GMOCK_INTERNAL_MATCHER_MEMBERS_USAGE5604,208945
#define GMOCK_INTERNAL_MATCHER_MEMBER_USAGE(GMOCK_INTERNAL_MATCHER_MEMBER_USAGE5606,209078
#define GMOCK_INTERNAL_MATCHER_ARGS_USAGE(GMOCK_INTERNAL_MATCHER_ARGS_USAGE5608,209157
#define GMOCK_INTERNAL_MATCHER_ARG_USAGE(GMOCK_INTERNAL_MATCHER_ARG_USAGE5610,209284

build/_deps/googletest-src/googlemock/include/gmock/gmock-cardinalities.h,1387
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_CARDINALITIES_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_CARDINALITIES_H_40,1931
namespace testing {testing53,2240
class CardinalityInterface {CardinalityInterface66,2752
  virtual ~CardinalityInterface() {}~CardinalityInterface68,2790
  virtual int ConservativeLowerBound() const { return 0; }ConservativeLowerBound72,2917
  virtual int ConservativeUpperBound() const { return INT_MAX; }ConservativeUpperBound73,2976
class GTEST_API_ Cardinality {Cardinality91,3723
  Cardinality() {}Cardinality95,3863
  explicit Cardinality(const CardinalityInterface* impl) : impl_(impl) {}Cardinality98,3938
  int ConservativeLowerBound() const { return impl_->ConservativeLowerBound(); }ConservativeLowerBound102,4102
  int ConservativeUpperBound() const { return impl_->ConservativeUpperBound(); }ConservativeUpperBound103,4183
  bool IsSatisfiedByCallCount(int call_count) const {IsSatisfiedByCallCount107,4351
  bool IsSaturatedByCallCount(int call_count) const {IsSaturatedByCallCount113,4551
  bool IsOverSaturatedByCallCount(int call_count) const {IsOverSaturatedByCallCount119,4805
  void DescribeTo(::std::ostream* os) const { impl_->DescribeTo(os); }DescribeTo125,5013
  std::shared_ptr<const CardinalityInterface> impl_;impl_132,5278
inline Cardinality MakeCardinality(const CardinalityInterface* c) {MakeCardinality151,5877

build/_deps/googletest-src/googlemock/include/gmock/internal/custom/gmock-matchers.h,134
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_MATCHERS_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_MATCHERS_H_36,1781

build/_deps/googletest-src/googlemock/include/gmock/internal/custom/README.md,153
# Customization PointsCustomization Points1,0
## Header `gmock-port.h`Header `gmock-port.h`5,100
### Flag related macros:Flag related macros:9,164

build/_deps/googletest-src/googlemock/include/gmock/internal/custom/gmock-port.h,126
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_PORT_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_PORT_H_38,1823

build/_deps/googletest-src/googlemock/include/gmock/internal/custom/gmock-generated-actions.h,150
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_GENERATED_ACTIONS_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_GENERATED_ACTIONS_H_5,158

build/_deps/googletest-src/googlemock/include/gmock/internal/gmock-port.h,1094
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PORT_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PORT_H_41,2065
#define GMOCK_FLAG_NAME_(GMOCK_FLAG_NAME_72,3107
#define GMOCK_FLAG(GMOCK_FLAG73,3151
#define GMOCK_DEFINE_bool_(GMOCK_DEFINE_bool_79,3291
#define GMOCK_DEFINE_int32_(GMOCK_DEFINE_int32_81,3404
#define GMOCK_DEFINE_string_(GMOCK_DEFINE_string_83,3521
#define GMOCK_DECLARE_bool_(GMOCK_DECLARE_bool_87,3675
#define GMOCK_DECLARE_int32_(GMOCK_DECLARE_int32_89,3761
#define GMOCK_DECLARE_string_(GMOCK_DECLARE_string_91,3851
#define GMOCK_FLAG_GET(GMOCK_FLAG_GET94,3947
#define GMOCK_FLAG_SET(GMOCK_FLAG_SET95,4010
#define GMOCK_DEFINE_bool_(GMOCK_DEFINE_bool_101,4157
#define GMOCK_DEFINE_int32_(GMOCK_DEFINE_int32_106,4434
#define GMOCK_DEFINE_string_(GMOCK_DEFINE_string_111,4723
#define GMOCK_DECLARE_bool_(GMOCK_DECLARE_bool_118,5068
#define GMOCK_DECLARE_int32_(GMOCK_DECLARE_int32_123,5309
#define GMOCK_DECLARE_string_(GMOCK_DECLARE_string_128,5562
#define GMOCK_FLAG_GET(GMOCK_FLAG_GET134,5840
#define GMOCK_FLAG_SET(GMOCK_FLAG_SET135,5897

build/_deps/googletest-src/googlemock/include/gmock/internal/gmock-internal-utils.h,4832
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_INTERNAL_UTILS_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_INTERNAL_UTILS_H_40,1931
namespace testing {testing52,2173
namespace internal {internal57,2230
inline const typename Pointer::element_type* GetRawPointer(const Pointer& p) {GetRawPointer82,3255
inline const Element* GetRawPointer(const std::reference_wrapper<Element>& r) {GetRawPointer88,3525
inline Element* GetRawPointer(Element* p) {GetRawPointer94,3711
#define GMOCK_WCHAR_T_IS_NATIVE_ GMOCK_WCHAR_T_IS_NATIVE_105,4088
enum TypeKind { kBool, kInteger, kFloatingPoint, kOther };TypeKind113,4454
enum TypeKind { kBool, kInteger, kFloatingPoint, kOther };kBool113,4454
enum TypeKind { kBool, kInteger, kFloatingPoint, kOther };kInteger113,4454
enum TypeKind { kBool, kInteger, kFloatingPoint, kOther };kFloatingPoint113,4454
enum TypeKind { kBool, kInteger, kFloatingPoint, kOther };kOther113,4454
struct KindOf {KindOf117,4579
  enum { value = kOther };  // The default kind.__anonf8fd02630103118,4595
  enum { value = kOther };  // The default kind.value118,4595
#define GMOCK_DECLARE_KIND_(GMOCK_DECLARE_KIND_122,4706
#define GMOCK_KIND_OF_(GMOCK_KIND_OF_155,5837
using LosslessArithmeticConvertibleImpl = std::integral_constant<LosslessArithmeticConvertibleImpl169,6559
using LosslessArithmeticConvertible =LosslessArithmeticConvertible202,8093
class FailureReporterInterface {FailureReporterInterface208,8353
  enum FailureType { kNonfatal, kFatal };FailureType211,8451
  enum FailureType { kNonfatal, kFatal };kNonfatal211,8451
  enum FailureType { kNonfatal, kFatal };kFatal211,8451
  virtual ~FailureReporterInterface() {}~FailureReporterInterface213,8494
inline void Assert(bool condition, const char* file, int line,Assert228,9144
inline void Assert(bool condition, const char* file, int line) {Assert235,9410
inline void Expect(bool condition, const char* file, int line,Expect241,9624
inline void Expect(bool condition, const char* file, int line) {Expect248,9893
enum LogSeverity { kInfo = 0, kWarning = 1 };LogSeverity253,10045
enum LogSeverity { kInfo = 0, kWarning = 1 };kInfo253,10045
enum LogSeverity { kInfo = 0, kWarning = 1 };kWarning253,10045
const char kInfoVerbosity[] = "info";kInfoVerbosity258,10193
const char kWarningVerbosity[] = "warning";kWarningVerbosity260,10261
const char kErrorVerbosity[] = "error";kErrorVerbosity262,10329
class WithoutMatchers {WithoutMatchers284,11324
  WithoutMatchers() {}WithoutMatchers286,11358
inline T Invalid() {Invalid299,11884
class StlContainerView {StlContainerView327,12972
  typedef RawContainer type;type329,13006
  typedef const type& const_reference;const_reference330,13035
  static const_reference ConstReference(const RawContainer& container) {ConstReference332,13075
  static type Copy(const RawContainer& container) { return container; }Copy337,13287
class StlContainerView<Element[N]> {StlContainerView342,13474
  typedef typename std::remove_const<Element>::type RawElement;RawElement344,13520
  typedef internal::NativeArray<RawElement> type;type345,13584
  typedef const type const_reference;const_reference351,13974
  static const_reference ConstReference(const Element (&array)[N]) {ConstReference353,14013
  static type Copy(const Element (&array)[N]) {Copy358,14255
class StlContainerView< ::std::tuple<ElementPointer, Size> > {StlContainerView366,14522
      RawElement;RawElement370,14704
  typedef internal::NativeArray<RawElement> type;type371,14722
  typedef const type const_reference;const_reference372,14772
  static const_reference ConstReference(ConstReference374,14811
  static type Copy(const ::std::tuple<ElementPointer, Size>& array) {Copy379,15015
struct RemoveConstFromKey {RemoveConstFromKey393,15561
  typedef T type;type394,15589
struct RemoveConstFromKey<std::pair<const K, V> > {RemoveConstFromKey399,15718
  typedef std::pair<K, V> type;type400,15770
auto ApplyImpl(F&& f, Tuple&& args, IndexSequence<Idx...>)ApplyImpl408,16024
auto Apply(F&& f, Tuple&& args) -> decltype(ApplyImpl(Apply416,16337
struct Function<R(Args...)> {Function442,17556
  using Result = R;Result443,17586
  static constexpr size_t ArgumentCount = sizeof...(Args);ArgumentCount444,17606
  using Arg = ElemFromList<I, Args...>;Arg446,17687
  using ArgumentTuple = std::tuple<Args...>;ArgumentTuple447,17727
  using ArgumentMatcherTuple = std::tuple<Matcher<Args>...>;ArgumentMatcherTuple448,17772
  using MakeResultVoid = void(Args...);MakeResultVoid449,17833
  using MakeResultIgnoredValue = IgnoredValue(Args...);MakeResultIgnoredValue450,17873
constexpr size_t Function<R(Args...)>::ArgumentCount;ArgumentCount454,17973
using TupleElement = typename std::tuple_element<I, T>::type;TupleElement461,18277

build/_deps/googletest-src/googlemock/include/gmock/internal/gmock-pp.h,6411
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PP_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PP_H_2,54
#define GMOCK_PP_CAT(GMOCK_PP_CAT5,183
#define GMOCK_PP_STRINGIZE(GMOCK_PP_STRINGIZE8,289
#define GMOCK_PP_EMPTY(GMOCK_PP_EMPTY11,419
#define GMOCK_PP_COMMA(GMOCK_PP_COMMA14,506
#define GMOCK_PP_IDENTITY(GMOCK_PP_IDENTITY17,567
#define GMOCK_PP_NARG(GMOCK_PP_NARG29,871
#define GMOCK_PP_HAS_COMMA(GMOCK_PP_HAS_COMMA35,1143
#define GMOCK_PP_HEAD(GMOCK_PP_HEAD40,1312
#define GMOCK_PP_TAIL(GMOCK_PP_TAIL44,1495
#define GMOCK_PP_VARIADIC_CALL(GMOCK_PP_VARIADIC_CALL47,1614
#define GMOCK_PP_IS_EMPTY(GMOCK_PP_IS_EMPTY79,2853
#define GMOCK_PP_IF(GMOCK_PP_IF86,3310
#define GMOCK_PP_GENERIC_IF(GMOCK_PP_GENERIC_IF94,3605
#define GMOCK_PP_NARG0(GMOCK_PP_NARG0110,4126
#define GMOCK_PP_IS_BEGIN_PARENS(GMOCK_PP_IS_BEGIN_PARENS115,4329
#define GMOCK_PP_IS_ENCLOSED_PARENS(GMOCK_PP_IS_ENCLOSED_PARENS120,4628
#define GMOCK_PP_REMOVE_PARENS(GMOCK_PP_REMOVE_PARENS125,4874
#define GMOCK_PP_FOR_EACH(GMOCK_PP_FOR_EACH131,5202
#define GMOCK_PP_REPEAT(GMOCK_PP_REPEAT139,5580
#define GMOCK_PP_INC(GMOCK_PP_INC144,5817
#define GMOCK_PP_COMMA_IF(GMOCK_PP_COMMA_IF147,5949
#define GMOCK_PP_INTENRAL_EMPTY_TUPLE GMOCK_PP_INTENRAL_EMPTY_TUPLE151,6138
#define GMOCK_PP_INTERNAL_CAT(GMOCK_PP_INTERNAL_CAT152,6209
#define GMOCK_PP_INTERNAL_STRINGIZE(GMOCK_PP_INTERNAL_STRINGIZE153,6254
#define GMOCK_PP_INTERNAL_CAT_5(GMOCK_PP_INTERNAL_CAT_5154,6308
#define GMOCK_PP_INTERNAL_IS_EMPTY(GMOCK_PP_INTERNAL_IS_EMPTY155,6379
#define GMOCK_PP_INTERNAL_IS_EMPTY_CASE_0001 GMOCK_PP_INTERNAL_IS_EMPTY_CASE_0001158,6603
#define GMOCK_PP_INTERNAL_IF_1(GMOCK_PP_INTERNAL_IF_1159,6650
#define GMOCK_PP_INTERNAL_IF_0(GMOCK_PP_INTERNAL_IF_0160,6701
#define GMOCK_PP_INTERNAL_INTERNAL_16TH(GMOCK_PP_INTERNAL_INTERNAL_16TH167,7088
#define GMOCK_PP_INTERNAL_16TH(GMOCK_PP_INTERNAL_16TH171,7328
#define GMOCK_PP_INTERNAL_INTERNAL_HEAD(GMOCK_PP_INTERNAL_INTERNAL_HEAD173,7427
#define GMOCK_PP_INTERNAL_HEAD(GMOCK_PP_INTERNAL_HEAD174,7479
#define GMOCK_PP_INTERNAL_INTERNAL_TAIL(GMOCK_PP_INTERNAL_INTERNAL_TAIL176,7578
#define GMOCK_PP_INTERNAL_TAIL(GMOCK_PP_INTERNAL_TAIL177,7639
#define GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_C(GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_C180,7739
#define GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_R_1 GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_R_1181,7792
#define GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_R_GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_C GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_R_GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_C182,7841
#define GMOCK_PP_INTERNAL_REMOVE_PARENS(GMOCK_PP_INTERNAL_REMOVE_PARENS184,7928
#define GMOCK_PP_INTERNAL_INC_0 GMOCK_PP_INTERNAL_INC_0185,7985
#define GMOCK_PP_INTERNAL_INC_1 GMOCK_PP_INTERNAL_INC_1186,8019
#define GMOCK_PP_INTERNAL_INC_2 GMOCK_PP_INTERNAL_INC_2187,8053
#define GMOCK_PP_INTERNAL_INC_3 GMOCK_PP_INTERNAL_INC_3188,8087
#define GMOCK_PP_INTERNAL_INC_4 GMOCK_PP_INTERNAL_INC_4189,8121
#define GMOCK_PP_INTERNAL_INC_5 GMOCK_PP_INTERNAL_INC_5190,8155
#define GMOCK_PP_INTERNAL_INC_6 GMOCK_PP_INTERNAL_INC_6191,8189
#define GMOCK_PP_INTERNAL_INC_7 GMOCK_PP_INTERNAL_INC_7192,8223
#define GMOCK_PP_INTERNAL_INC_8 GMOCK_PP_INTERNAL_INC_8193,8257
#define GMOCK_PP_INTERNAL_INC_9 GMOCK_PP_INTERNAL_INC_9194,8291
#define GMOCK_PP_INTERNAL_INC_10 GMOCK_PP_INTERNAL_INC_10195,8326
#define GMOCK_PP_INTERNAL_INC_11 GMOCK_PP_INTERNAL_INC_11196,8362
#define GMOCK_PP_INTERNAL_INC_12 GMOCK_PP_INTERNAL_INC_12197,8398
#define GMOCK_PP_INTERNAL_INC_13 GMOCK_PP_INTERNAL_INC_13198,8434
#define GMOCK_PP_INTERNAL_INC_14 GMOCK_PP_INTERNAL_INC_14199,8470
#define GMOCK_PP_INTERNAL_INC_15 GMOCK_PP_INTERNAL_INC_15200,8506
#define GMOCK_PP_INTERNAL_COMMA_IF_0GMOCK_PP_INTERNAL_COMMA_IF_0201,8542
#define GMOCK_PP_INTERNAL_COMMA_IF_1 GMOCK_PP_INTERNAL_COMMA_IF_1202,8579
#define GMOCK_PP_INTERNAL_COMMA_IF_2 GMOCK_PP_INTERNAL_COMMA_IF_2203,8618
#define GMOCK_PP_INTERNAL_COMMA_IF_3 GMOCK_PP_INTERNAL_COMMA_IF_3204,8657
#define GMOCK_PP_INTERNAL_COMMA_IF_4 GMOCK_PP_INTERNAL_COMMA_IF_4205,8696
#define GMOCK_PP_INTERNAL_COMMA_IF_5 GMOCK_PP_INTERNAL_COMMA_IF_5206,8735
#define GMOCK_PP_INTERNAL_COMMA_IF_6 GMOCK_PP_INTERNAL_COMMA_IF_6207,8774
#define GMOCK_PP_INTERNAL_COMMA_IF_7 GMOCK_PP_INTERNAL_COMMA_IF_7208,8813
#define GMOCK_PP_INTERNAL_COMMA_IF_8 GMOCK_PP_INTERNAL_COMMA_IF_8209,8852
#define GMOCK_PP_INTERNAL_COMMA_IF_9 GMOCK_PP_INTERNAL_COMMA_IF_9210,8891
#define GMOCK_PP_INTERNAL_COMMA_IF_10 GMOCK_PP_INTERNAL_COMMA_IF_10211,8930
#define GMOCK_PP_INTERNAL_COMMA_IF_11 GMOCK_PP_INTERNAL_COMMA_IF_11212,8970
#define GMOCK_PP_INTERNAL_COMMA_IF_12 GMOCK_PP_INTERNAL_COMMA_IF_12213,9010
#define GMOCK_PP_INTERNAL_COMMA_IF_13 GMOCK_PP_INTERNAL_COMMA_IF_13214,9050
#define GMOCK_PP_INTERNAL_COMMA_IF_14 GMOCK_PP_INTERNAL_COMMA_IF_14215,9090
#define GMOCK_PP_INTERNAL_COMMA_IF_15 GMOCK_PP_INTERNAL_COMMA_IF_15216,9130
#define GMOCK_PP_INTERNAL_CALL_MACRO(GMOCK_PP_INTERNAL_CALL_MACRO217,9170
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_0(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_0219,9268
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_1(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_1220,9337
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_2(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_2222,9480
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_3(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_3226,9762
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_4(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_4230,10044
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_5(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_5234,10326
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_6(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_6238,10608
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_7(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_7242,10890
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_8(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_8246,11172
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_9(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_9250,11454
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_10(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_10254,11736
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_11(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_11258,12018
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_12(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_12262,12301
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_13(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_13266,12584
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_14(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_14270,12867
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_15(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_15274,13150

build/_deps/googletest-src/googlemock/include/gmock/gmock-more-actions.h,11710
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MORE_ACTIONS_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MORE_ACTIONS_H_38,1818
#define GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS131,5339
#define GMOCK_INTERNAL_DECL_HAS_2_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_2_TEMPLATE_PARAMS132,5415
#define GMOCK_INTERNAL_DECL_HAS_3_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_3_TEMPLATE_PARAMS134,5522
#define GMOCK_INTERNAL_DECL_HAS_4_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_4_TEMPLATE_PARAMS137,5722
#define GMOCK_INTERNAL_DECL_HAS_5_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_5_TEMPLATE_PARAMS140,5935
#define GMOCK_INTERNAL_DECL_HAS_6_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_6_TEMPLATE_PARAMS143,6153
#define GMOCK_INTERNAL_DECL_HAS_7_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_7_TEMPLATE_PARAMS147,6472
#define GMOCK_INTERNAL_DECL_HAS_8_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_8_TEMPLATE_PARAMS152,6807
#define GMOCK_INTERNAL_DECL_HAS_9_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_9_TEMPLATE_PARAMS157,7155
#define GMOCK_INTERNAL_DECL_HAS_10_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_10_TEMPLATE_PARAMS162,7516
#define GMOCK_INTERNAL_LIST_HAS_1_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_1_TEMPLATE_PARAMS169,7925
#define GMOCK_INTERNAL_LIST_HAS_2_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_2_TEMPLATE_PARAMS170,7995
#define GMOCK_INTERNAL_LIST_HAS_3_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_3_TEMPLATE_PARAMS172,8090
#define GMOCK_INTERNAL_LIST_HAS_4_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_4_TEMPLATE_PARAMS175,8272
#define GMOCK_INTERNAL_LIST_HAS_5_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_5_TEMPLATE_PARAMS178,8461
#define GMOCK_INTERNAL_LIST_HAS_6_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_6_TEMPLATE_PARAMS181,8649
#define GMOCK_INTERNAL_LIST_HAS_7_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_7_TEMPLATE_PARAMS185,8932
#define GMOCK_INTERNAL_LIST_HAS_8_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_8_TEMPLATE_PARAMS189,9210
#define GMOCK_INTERNAL_LIST_HAS_9_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_9_TEMPLATE_PARAMS193,9495
#define GMOCK_INTERNAL_LIST_HAS_10_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_10_TEMPLATE_PARAMS197,9787
#define GMOCK_INTERNAL_DECL_TYPE_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_0_VALUE_PARAMS203,10130
#define GMOCK_INTERNAL_DECL_TYPE_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_1_VALUE_PARAMS204,10184
#define GMOCK_INTERNAL_DECL_TYPE_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_2_VALUE_PARAMS205,10261
#define GMOCK_INTERNAL_DECL_TYPE_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_3_VALUE_PARAMS207,10366
#define GMOCK_INTERNAL_DECL_TYPE_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_4_VALUE_PARAMS209,10495
#define GMOCK_INTERNAL_DECL_TYPE_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_5_VALUE_PARAMS212,10660
#define GMOCK_INTERNAL_DECL_TYPE_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_6_VALUE_PARAMS215,10853
#define GMOCK_INTERNAL_DECL_TYPE_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_7_VALUE_PARAMS218,11074
#define GMOCK_INTERNAL_DECL_TYPE_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_8_VALUE_PARAMS223,11411
#define GMOCK_INTERNAL_DECL_TYPE_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_9_VALUE_PARAMS228,11768
#define GMOCK_INTERNAL_DECL_TYPE_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_10_VALUE_PARAMS233,12145
#define GMOCK_INTERNAL_INIT_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_0_VALUE_PARAMS241,12603
#define GMOCK_INTERNAL_INIT_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_1_VALUE_PARAMS242,12655
#define GMOCK_INTERNAL_INIT_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_2_VALUE_PARAMS244,12759
#define GMOCK_INTERNAL_INIT_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_3_VALUE_PARAMS247,12934
#define GMOCK_INTERNAL_INIT_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_4_VALUE_PARAMS252,13228
#define GMOCK_INTERNAL_INIT_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_5_VALUE_PARAMS259,13652
#define GMOCK_INTERNAL_INIT_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_6_VALUE_PARAMS267,14169
#define GMOCK_INTERNAL_INIT_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_7_VALUE_PARAMS276,14787
#define GMOCK_INTERNAL_INIT_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_8_VALUE_PARAMS287,15591
#define GMOCK_INTERNAL_INIT_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_9_VALUE_PARAMS299,16516
#define GMOCK_INTERNAL_INIT_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_10_VALUE_PARAMS313,17603
#define GMOCK_INTERNAL_DEFN_COPY_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_0_VALUE_PARAMS331,18840
#define GMOCK_INTERNAL_DEFN_COPY_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_1_VALUE_PARAMS333,18962
#define GMOCK_INTERNAL_DEFN_COPY_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_2_VALUE_PARAMS334,19030
#define GMOCK_INTERNAL_DEFN_COPY_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_3_VALUE_PARAMS335,19098
#define GMOCK_INTERNAL_DEFN_COPY_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_4_VALUE_PARAMS336,19166
#define GMOCK_INTERNAL_DEFN_COPY_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_5_VALUE_PARAMS337,19234
#define GMOCK_INTERNAL_DEFN_COPY_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_6_VALUE_PARAMS338,19302
#define GMOCK_INTERNAL_DEFN_COPY_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_7_VALUE_PARAMS339,19370
#define GMOCK_INTERNAL_DEFN_COPY_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_8_VALUE_PARAMS340,19438
#define GMOCK_INTERNAL_DEFN_COPY_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_9_VALUE_PARAMS341,19506
#define GMOCK_INTERNAL_DEFN_COPY_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_10_VALUE_PARAMS342,19574
#define GMOCK_INTERNAL_DEFN_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_0_VALUE_PARAMS345,19701
#define GMOCK_INTERNAL_DEFN_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_1_VALUE_PARAMS346,19750
#define GMOCK_INTERNAL_DEFN_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_2_VALUE_PARAMS347,19815
#define GMOCK_INTERNAL_DEFN_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_3_VALUE_PARAMS350,19945
#define GMOCK_INTERNAL_DEFN_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_4_VALUE_PARAMS354,20144
#define GMOCK_INTERNAL_DEFN_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_5_VALUE_PARAMS359,20420
#define GMOCK_INTERNAL_DEFN_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_6_VALUE_PARAMS365,20781
#define GMOCK_INTERNAL_DEFN_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_7_VALUE_PARAMS372,21235
#define GMOCK_INTERNAL_DEFN_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_8_VALUE_PARAMS380,21790
#define GMOCK_INTERNAL_DEFN_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_9_VALUE_PARAMS389,22454
#define GMOCK_INTERNAL_DEFN_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_10_VALUE_PARAMS400,23280
#define GMOCK_INTERNAL_LIST_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_0_VALUE_PARAMS414,24186
#define GMOCK_INTERNAL_LIST_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_1_VALUE_PARAMS415,24235
#define GMOCK_INTERNAL_LIST_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_2_VALUE_PARAMS416,24289
#define GMOCK_INTERNAL_LIST_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_3_VALUE_PARAMS417,24351
#define GMOCK_INTERNAL_LIST_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_4_VALUE_PARAMS418,24421
#define GMOCK_INTERNAL_LIST_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_5_VALUE_PARAMS419,24499
#define GMOCK_INTERNAL_LIST_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_6_VALUE_PARAMS421,24589
#define GMOCK_INTERNAL_LIST_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_7_VALUE_PARAMS423,24687
#define GMOCK_INTERNAL_LIST_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_8_VALUE_PARAMS425,24793
#define GMOCK_INTERNAL_LIST_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_9_VALUE_PARAMS427,24907
#define GMOCK_INTERNAL_LIST_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_10_VALUE_PARAMS430,25106
#define GMOCK_INTERNAL_LIST_TYPE_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_0_VALUE_PARAMS435,25340
#define GMOCK_INTERNAL_LIST_TYPE_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_1_VALUE_PARAMS436,25394
#define GMOCK_INTERNAL_LIST_TYPE_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_2_VALUE_PARAMS437,25462
#define GMOCK_INTERNAL_LIST_TYPE_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_3_VALUE_PARAMS439,25549
#define GMOCK_INTERNAL_LIST_TYPE_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_4_VALUE_PARAMS441,25651
#define GMOCK_INTERNAL_LIST_TYPE_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_5_VALUE_PARAMS443,25768
#define GMOCK_INTERNAL_LIST_TYPE_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_6_VALUE_PARAMS445,25900
#define GMOCK_INTERNAL_LIST_TYPE_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_7_VALUE_PARAMS447,26047
#define GMOCK_INTERNAL_LIST_TYPE_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_8_VALUE_PARAMS450,26283
#define GMOCK_INTERNAL_LIST_TYPE_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_9_VALUE_PARAMS454,26544
#define GMOCK_INTERNAL_LIST_TYPE_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_10_VALUE_PARAMS458,26816
#define GMOCK_INTERNAL_DECL_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_0_VALUE_PARAMS464,27137
#define GMOCK_INTERNAL_DECL_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_1_VALUE_PARAMS465,27186
#define GMOCK_INTERNAL_DECL_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_2_VALUE_PARAMS466,27250
#define GMOCK_INTERNAL_DECL_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_3_VALUE_PARAMS468,27336
#define GMOCK_INTERNAL_DECL_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_4_VALUE_PARAMS470,27440
#define GMOCK_INTERNAL_DECL_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_5_VALUE_PARAMS472,27562
#define GMOCK_INTERNAL_DECL_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_6_VALUE_PARAMS474,27702
#define GMOCK_INTERNAL_DECL_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_7_VALUE_PARAMS477,27869
#define GMOCK_INTERNAL_DECL_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_8_VALUE_PARAMS480,28056
#define GMOCK_INTERNAL_DECL_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_9_VALUE_PARAMS483,28265
#define GMOCK_INTERNAL_DECL_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_10_VALUE_PARAMS487,28569
#define GMOCK_INTERNAL_COUNT_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_0_VALUE_PARAMS493,28949
#define GMOCK_INTERNAL_COUNT_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_1_VALUE_PARAMS494,28999
#define GMOCK_INTERNAL_COUNT_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_2_VALUE_PARAMS495,29053
#define GMOCK_INTERNAL_COUNT_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_3_VALUE_PARAMS496,29112
#define GMOCK_INTERNAL_COUNT_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_4_VALUE_PARAMS497,29175
#define GMOCK_INTERNAL_COUNT_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_5_VALUE_PARAMS498,29242
#define GMOCK_INTERNAL_COUNT_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_6_VALUE_PARAMS499,29313
#define GMOCK_INTERNAL_COUNT_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_7_VALUE_PARAMS500,29388
#define GMOCK_INTERNAL_COUNT_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_8_VALUE_PARAMS501,29467
#define GMOCK_INTERNAL_COUNT_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_9_VALUE_PARAMS504,29628
#define GMOCK_INTERNAL_COUNT_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_10_VALUE_PARAMS507,29789
#define GMOCK_ACTION_CLASS_(GMOCK_ACTION_CLASS_512,30022
#define ACTION_TEMPLATE(ACTION_TEMPLATE515,30146
namespace testing {testing578,35104
namespace internal {internal590,35507
auto InvokeArgument(F f, Args... args) -> decltype(f(args...)) {InvokeArgument597,35811
struct InvokeArgumentAction {InvokeArgumentAction602,35949
  auto operator()(Args&&... args) const -> decltype(internal::InvokeArgument(operator ()605,36090
    return params.Apply([&](const Params&... unpacked_params) {__anonef6c1fed0102610,36433
  internal::FlatTuple<Params...> params;params617,36682
InvokeArgument(Params&&... params) {InvokeArgument651,37986

build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h,10765
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_FUNCTION_MOCKER_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_FUNCTION_MOCKER_H_38,1797
namespace testing {testing47,2073
namespace internal {internal48,2093
using identity_t = T;identity_t50,2136
struct ThisRefAdjuster {ThisRefAdjuster53,2187
  using AdjustT = typename std::conditional<AdjustT55,2236
  static AdjustT<MockType> Adjust(const MockType& mock) {Adjust63,2651
constexpr bool PrefixOf(const char* a, const char* b) {PrefixOf68,2789
constexpr bool StartsWith(const char (&prefix)[N], const char (&str)[M]) {StartsWith73,2940
constexpr bool EndsWith(const char (&suffix)[N], const char (&str)[M]) {EndsWith78,3094
constexpr bool Equals(const char (&a)[N], const char (&b)[M]) {Equals83,3254
constexpr bool ValidateSpec(const char (&spec)[N]) {ValidateSpec88,3383
#define MOCK_METHOD(MOCK_METHOD111,4324
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_1(GMOCK_INTERNAL_MOCK_METHOD_ARG_1114,4423
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_2(GMOCK_INTERNAL_MOCK_METHOD_ARG_2117,4514
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_3(GMOCK_INTERNAL_MOCK_METHOD_ARG_3120,4605
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_4(GMOCK_INTERNAL_MOCK_METHOD_ARG_4123,4740
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_5(GMOCK_INTERNAL_MOCK_METHOD_ARG_5137,5712
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_6(GMOCK_INTERNAL_MOCK_METHOD_ARG_6140,5803
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_7(GMOCK_INTERNAL_MOCK_METHOD_ARG_7143,5894
#define GMOCK_INTERNAL_WRONG_ARITY(GMOCK_INTERNAL_WRONG_ARITY146,5985
#define GMOCK_INTERNAL_ASSERT_PARENTHESIS(GMOCK_INTERNAL_ASSERT_PARENTHESIS154,6510
#define GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE(GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE159,6739
#define GMOCK_INTERNAL_ASSERT_VALID_SPEC(GMOCK_INTERNAL_ASSERT_VALID_SPEC170,7474
#define GMOCK_INTERNAL_MOCK_METHOD_IMPL(GMOCK_INTERNAL_MOCK_METHOD_IMPL173,7597
#define GMOCK_INTERNAL_EXPAND(GMOCK_INTERNAL_EXPAND206,10154
#define GMOCK_INTERNAL_HAS_CONST(GMOCK_INTERNAL_HAS_CONST209,10222
#define GMOCK_INTERNAL_HAS_OVERRIDE(GMOCK_INTERNAL_HAS_OVERRIDE212,10346
#define GMOCK_INTERNAL_HAS_FINAL(GMOCK_INTERNAL_HAS_FINAL216,10507
#define GMOCK_INTERNAL_GET_NOEXCEPT_SPEC(GMOCK_INTERNAL_GET_NOEXCEPT_SPEC219,10631
#define GMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT(GMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT222,10756
#define GMOCK_INTERNAL_GET_CALLTYPE_SPEC(GMOCK_INTERNAL_GET_CALLTYPE_SPEC227,10994
#define GMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE(GMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE230,11119
#define GMOCK_INTERNAL_GET_REF_SPEC(GMOCK_INTERNAL_GET_REF_SPEC235,11395
#define GMOCK_INTERNAL_REF_SPEC_IF_REF(GMOCK_INTERNAL_REF_SPEC_IF_REF238,11505
#define GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT(GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT243,11762
#define GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT(GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT250,12166
#define GMOCK_INTERNAL_DETECT_CONST(GMOCK_INTERNAL_DETECT_CONST263,13048
#define GMOCK_INTERNAL_DETECT_CONST_I_const GMOCK_INTERNAL_DETECT_CONST_I_const266,13155
#define GMOCK_INTERNAL_DETECT_OVERRIDE(GMOCK_INTERNAL_DETECT_OVERRIDE268,13202
#define GMOCK_INTERNAL_DETECT_OVERRIDE_I_override GMOCK_INTERNAL_DETECT_OVERRIDE_I_override271,13315
#define GMOCK_INTERNAL_DETECT_FINAL(GMOCK_INTERNAL_DETECT_FINAL273,13368
#define GMOCK_INTERNAL_DETECT_FINAL_I_final GMOCK_INTERNAL_DETECT_FINAL_I_final276,13475
#define GMOCK_INTERNAL_DETECT_NOEXCEPT(GMOCK_INTERNAL_DETECT_NOEXCEPT278,13522
#define GMOCK_INTERNAL_DETECT_NOEXCEPT_I_noexcept GMOCK_INTERNAL_DETECT_NOEXCEPT_I_noexcept281,13635
#define GMOCK_INTERNAL_DETECT_REF(GMOCK_INTERNAL_DETECT_REF283,13688
#define GMOCK_INTERNAL_DETECT_REF_I_ref GMOCK_INTERNAL_DETECT_REF_I_ref286,13791
#define GMOCK_INTERNAL_UNPACK_ref(GMOCK_INTERNAL_UNPACK_ref288,13834
#define GMOCK_INTERNAL_DETECT_CALLTYPE(GMOCK_INTERNAL_DETECT_CALLTYPE290,13874
#define GMOCK_INTERNAL_DETECT_CALLTYPE_I_Calltype GMOCK_INTERNAL_DETECT_CALLTYPE_I_Calltype293,13987
#define GMOCK_INTERNAL_UNPACK_Calltype(GMOCK_INTERNAL_UNPACK_Calltype295,14040
#define GMOCK_INTERNAL_SIGNATURE(GMOCK_INTERNAL_SIGNATURE310,14709
#define GMOCK_INTERNAL_GET_TYPE(GMOCK_INTERNAL_GET_TYPE316,15090
#define GMOCK_INTERNAL_PARAMETER(GMOCK_INTERNAL_PARAMETER322,15393
#define GMOCK_INTERNAL_FORWARD_ARG(GMOCK_INTERNAL_FORWARD_ARG327,15603
#define GMOCK_INTERNAL_MATCHER_PARAMETER(GMOCK_INTERNAL_MATCHER_PARAMETER332,15832
#define GMOCK_INTERNAL_MATCHER_ARGUMENT(GMOCK_INTERNAL_MATCHER_ARGUMENT337,16054
#define GMOCK_INTERNAL_A_MATCHER_ARGUMENT(GMOCK_INTERNAL_A_MATCHER_ARGUMENT341,16177
#define GMOCK_INTERNAL_ARG_O(GMOCK_INTERNAL_ARG_O345,16383
#define GMOCK_INTERNAL_MATCHER_O(GMOCK_INTERNAL_MATCHER_O348,16502
#define MOCK_METHOD0(MOCK_METHOD0352,16686
#define MOCK_METHOD1(MOCK_METHOD1353,16766
#define MOCK_METHOD2(MOCK_METHOD2354,16846
#define MOCK_METHOD3(MOCK_METHOD3355,16926
#define MOCK_METHOD4(MOCK_METHOD4356,17006
#define MOCK_METHOD5(MOCK_METHOD5357,17086
#define MOCK_METHOD6(MOCK_METHOD6358,17166
#define MOCK_METHOD7(MOCK_METHOD7359,17246
#define MOCK_METHOD8(MOCK_METHOD8360,17326
#define MOCK_METHOD9(MOCK_METHOD9361,17406
#define MOCK_METHOD10(MOCK_METHOD10362,17486
#define MOCK_CONST_METHOD0(MOCK_CONST_METHOD0365,17573
#define MOCK_CONST_METHOD1(MOCK_CONST_METHOD1367,17668
#define MOCK_CONST_METHOD2(MOCK_CONST_METHOD2369,17763
#define MOCK_CONST_METHOD3(MOCK_CONST_METHOD3371,17858
#define MOCK_CONST_METHOD4(MOCK_CONST_METHOD4373,17953
#define MOCK_CONST_METHOD5(MOCK_CONST_METHOD5375,18048
#define MOCK_CONST_METHOD6(MOCK_CONST_METHOD6377,18143
#define MOCK_CONST_METHOD7(MOCK_CONST_METHOD7379,18238
#define MOCK_CONST_METHOD8(MOCK_CONST_METHOD8381,18333
#define MOCK_CONST_METHOD9(MOCK_CONST_METHOD9383,18428
#define MOCK_CONST_METHOD10(MOCK_CONST_METHOD10385,18523
#define MOCK_METHOD0_T(MOCK_METHOD0_T388,18621
#define MOCK_METHOD1_T(MOCK_METHOD1_T389,18681
#define MOCK_METHOD2_T(MOCK_METHOD2_T390,18741
#define MOCK_METHOD3_T(MOCK_METHOD3_T391,18801
#define MOCK_METHOD4_T(MOCK_METHOD4_T392,18861
#define MOCK_METHOD5_T(MOCK_METHOD5_T393,18921
#define MOCK_METHOD6_T(MOCK_METHOD6_T394,18981
#define MOCK_METHOD7_T(MOCK_METHOD7_T395,19041
#define MOCK_METHOD8_T(MOCK_METHOD8_T396,19101
#define MOCK_METHOD9_T(MOCK_METHOD9_T397,19161
#define MOCK_METHOD10_T(MOCK_METHOD10_T398,19221
#define MOCK_CONST_METHOD0_T(MOCK_CONST_METHOD0_T400,19284
#define MOCK_CONST_METHOD1_T(MOCK_CONST_METHOD1_T401,19356
#define MOCK_CONST_METHOD2_T(MOCK_CONST_METHOD2_T402,19428
#define MOCK_CONST_METHOD3_T(MOCK_CONST_METHOD3_T403,19500
#define MOCK_CONST_METHOD4_T(MOCK_CONST_METHOD4_T404,19572
#define MOCK_CONST_METHOD5_T(MOCK_CONST_METHOD5_T405,19644
#define MOCK_CONST_METHOD6_T(MOCK_CONST_METHOD6_T406,19716
#define MOCK_CONST_METHOD7_T(MOCK_CONST_METHOD7_T407,19788
#define MOCK_CONST_METHOD8_T(MOCK_CONST_METHOD8_T408,19860
#define MOCK_CONST_METHOD9_T(MOCK_CONST_METHOD9_T409,19932
#define MOCK_CONST_METHOD10_T(MOCK_CONST_METHOD10_T410,20004
#define MOCK_METHOD0_WITH_CALLTYPE(MOCK_METHOD0_WITH_CALLTYPE412,20079
#define MOCK_METHOD1_WITH_CALLTYPE(MOCK_METHOD1_WITH_CALLTYPE414,20183
#define MOCK_METHOD2_WITH_CALLTYPE(MOCK_METHOD2_WITH_CALLTYPE416,20287
#define MOCK_METHOD3_WITH_CALLTYPE(MOCK_METHOD3_WITH_CALLTYPE418,20391
#define MOCK_METHOD4_WITH_CALLTYPE(MOCK_METHOD4_WITH_CALLTYPE420,20495
#define MOCK_METHOD5_WITH_CALLTYPE(MOCK_METHOD5_WITH_CALLTYPE422,20599
#define MOCK_METHOD6_WITH_CALLTYPE(MOCK_METHOD6_WITH_CALLTYPE424,20703
#define MOCK_METHOD7_WITH_CALLTYPE(MOCK_METHOD7_WITH_CALLTYPE426,20807
#define MOCK_METHOD8_WITH_CALLTYPE(MOCK_METHOD8_WITH_CALLTYPE428,20911
#define MOCK_METHOD9_WITH_CALLTYPE(MOCK_METHOD9_WITH_CALLTYPE430,21015
#define MOCK_METHOD10_WITH_CALLTYPE(MOCK_METHOD10_WITH_CALLTYPE432,21119
#define MOCK_CONST_METHOD0_WITH_CALLTYPE(MOCK_CONST_METHOD0_WITH_CALLTYPE435,21226
#define MOCK_CONST_METHOD1_WITH_CALLTYPE(MOCK_CONST_METHOD1_WITH_CALLTYPE437,21341
#define MOCK_CONST_METHOD2_WITH_CALLTYPE(MOCK_CONST_METHOD2_WITH_CALLTYPE439,21456
#define MOCK_CONST_METHOD3_WITH_CALLTYPE(MOCK_CONST_METHOD3_WITH_CALLTYPE441,21571
#define MOCK_CONST_METHOD4_WITH_CALLTYPE(MOCK_CONST_METHOD4_WITH_CALLTYPE443,21686
#define MOCK_CONST_METHOD5_WITH_CALLTYPE(MOCK_CONST_METHOD5_WITH_CALLTYPE445,21801
#define MOCK_CONST_METHOD6_WITH_CALLTYPE(MOCK_CONST_METHOD6_WITH_CALLTYPE447,21916
#define MOCK_CONST_METHOD7_WITH_CALLTYPE(MOCK_CONST_METHOD7_WITH_CALLTYPE449,22031
#define MOCK_CONST_METHOD8_WITH_CALLTYPE(MOCK_CONST_METHOD8_WITH_CALLTYPE451,22146
#define MOCK_CONST_METHOD9_WITH_CALLTYPE(MOCK_CONST_METHOD9_WITH_CALLTYPE453,22261
#define MOCK_CONST_METHOD10_WITH_CALLTYPE(MOCK_CONST_METHOD10_WITH_CALLTYPE455,22376
#define MOCK_METHOD0_T_WITH_CALLTYPE(MOCK_METHOD0_T_WITH_CALLTYPE458,22494
#define MOCK_METHOD1_T_WITH_CALLTYPE(MOCK_METHOD1_T_WITH_CALLTYPE460,22594
#define MOCK_METHOD2_T_WITH_CALLTYPE(MOCK_METHOD2_T_WITH_CALLTYPE462,22694
#define MOCK_METHOD3_T_WITH_CALLTYPE(MOCK_METHOD3_T_WITH_CALLTYPE464,22794
#define MOCK_METHOD4_T_WITH_CALLTYPE(MOCK_METHOD4_T_WITH_CALLTYPE466,22894
#define MOCK_METHOD5_T_WITH_CALLTYPE(MOCK_METHOD5_T_WITH_CALLTYPE468,22994
#define MOCK_METHOD6_T_WITH_CALLTYPE(MOCK_METHOD6_T_WITH_CALLTYPE470,23094
#define MOCK_METHOD7_T_WITH_CALLTYPE(MOCK_METHOD7_T_WITH_CALLTYPE472,23194
#define MOCK_METHOD8_T_WITH_CALLTYPE(MOCK_METHOD8_T_WITH_CALLTYPE474,23294
#define MOCK_METHOD9_T_WITH_CALLTYPE(MOCK_METHOD9_T_WITH_CALLTYPE476,23394
#define MOCK_METHOD10_T_WITH_CALLTYPE(MOCK_METHOD10_T_WITH_CALLTYPE478,23494
#define MOCK_CONST_METHOD0_T_WITH_CALLTYPE(MOCK_CONST_METHOD0_T_WITH_CALLTYPE481,23597
#define MOCK_CONST_METHOD1_T_WITH_CALLTYPE(MOCK_CONST_METHOD1_T_WITH_CALLTYPE483,23709
#define MOCK_CONST_METHOD2_T_WITH_CALLTYPE(MOCK_CONST_METHOD2_T_WITH_CALLTYPE485,23821
#define MOCK_CONST_METHOD3_T_WITH_CALLTYPE(MOCK_CONST_METHOD3_T_WITH_CALLTYPE487,23933
#define MOCK_CONST_METHOD4_T_WITH_CALLTYPE(MOCK_CONST_METHOD4_T_WITH_CALLTYPE489,24045
#define MOCK_CONST_METHOD5_T_WITH_CALLTYPE(MOCK_CONST_METHOD5_T_WITH_CALLTYPE491,24157
#define MOCK_CONST_METHOD6_T_WITH_CALLTYPE(MOCK_CONST_METHOD6_T_WITH_CALLTYPE493,24269
#define MOCK_CONST_METHOD7_T_WITH_CALLTYPE(MOCK_CONST_METHOD7_T_WITH_CALLTYPE495,24381
#define MOCK_CONST_METHOD8_T_WITH_CALLTYPE(MOCK_CONST_METHOD8_T_WITH_CALLTYPE497,24493
#define MOCK_CONST_METHOD9_T_WITH_CALLTYPE(MOCK_CONST_METHOD9_T_WITH_CALLTYPE499,24605
#define MOCK_CONST_METHOD10_T_WITH_CALLTYPE(MOCK_CONST_METHOD10_T_WITH_CALLTYPE501,24717
#define GMOCK_INTERNAL_MOCK_METHODN(GMOCK_INTERNAL_MOCK_METHODN504,24832
#define GMOCK_MOCKER_(GMOCK_MOCKER_511,25267

build/_deps/googletest-src/googlemock/src/gmock.cc,846
namespace testing {testing52,2502
namespace internal {internal53,2522
static const char* ParseGoogleMockFlagValue(const char* str,ParseGoogleMockFlagValue60,2780
static bool ParseGoogleMockFlag(const char* str, const char* flag_name,ParseGoogleMockFlag93,4020
static bool ParseGoogleMockFlag(const char* str, const char* flag_name,ParseGoogleMockFlag112,4726
static bool ParseGoogleMockFlag(const char* str, const char* flag_name,ParseGoogleMockFlag125,5135
void InitGoogleMockImpl(int* argc, CharType** argv) {InitGoogleMockImpl143,5781
#define GMOCK_INTERNAL_PARSE_FLAG(GMOCK_INTERNAL_PARSE_FLAG156,6245
GTEST_API_ void InitGoogleMock(int* argc, char** argv) {InitGoogleMock201,7829
GTEST_API_ void InitGoogleMock(int* argc, wchar_t** argv) {InitGoogleMock207,8021
GTEST_API_ void InitGoogleMock() {InitGoogleMock213,8229

build/_deps/googletest-src/googlemock/src/gmock-internal-utils.cc,1475
namespace testing {testing52,2083
namespace internal {internal53,2103
GTEST_API_ std::string JoinAsKeyValueTuple(JoinAsKeyValueTuple57,2218
  const auto build_one = [&](const size_t i) {__anon4de808d9010263,2420
GTEST_API_ std::string ConvertIdentifierNameToWords(const char* id_name) {ConvertIdentifierNameToWords79,2951
class GoogleTestFailureReporter : public FailureReporterInterface {GoogleTestFailureReporter100,3798
  void ReportFailure(FailureType type, const char* file, int line,ReportFailure102,3875
GTEST_API_ FailureReporterInterface* GetFailureReporter() {GetFailureReporter115,4376
GTEST_API_ bool LogIsVisible(LogSeverity severity) {LogIsVisible131,5072
GTEST_API_ void Log(LogSeverity severity, const std::string& message,Log152,5938
GTEST_API_ WithoutMatchers GetWithoutMatchers() { return WithoutMatchers(); }GetWithoutMatchers189,7192
GTEST_API_ void IllegalDoDefault(const char* file, int line) {IllegalDoDefault191,7271
constexpr char UnBase64Impl(char c, const char* const base64, char carry) {UnBase64Impl201,7691
constexpr std::array<char, 256> UnBase64Impl(IndexSequence<I...>,UnBase64Impl209,7958
constexpr std::array<char, 256> UnBase64(const char* const base64) {UnBase64214,8163
static constexpr char kBase64[] =kBase64218,8292
static constexpr std::array<char, 256> kUnBase64 = UnBase64(kBase64);kUnBase64220,8398
bool Base64Unescape(const std::string& encoded, std::string* decoded) {Base64Unescape222,8469

build/_deps/googletest-src/googlemock/src/gmock-matchers.cc,1448
namespace testing {testing44,1857
namespace internal {internal45,1877
GTEST_API_ std::string FormatMatcherDescription(FormatMatcherDescription52,2222
class MaxBipartiteMatchState {MaxBipartiteMatchState124,5735
  explicit MaxBipartiteMatchState(const MatchMatrix& graph)MaxBipartiteMatchState126,5775
  ElementMatcherPairs Compute() {Compute132,6024
  static const size_t kUnused = static_cast<size_t>(-1);kUnused166,7668
  bool TryAugment(size_t ilhs, ::std::vector<char>* seen) {TryAugment184,8567
  const MatchMatrix* graph_;  // not ownedgraph_210,9581
const size_t MaxBipartiteMatchState::kUnused;kUnused226,10417
GTEST_API_ ElementMatcherPairs FindMaxBipartiteMatching(const MatchMatrix& g) {FindMaxBipartiteMatching228,10464
static void LogElementMatcherPairVec(const ElementMatcherPairs& pairs,LogElementMatcherPairVec232,10593
  typedef ElementMatcherPairs::const_iterator Iter;Iter234,10727
bool MatchMatrix::NextGraph() {NextGraph247,11056
void MatchMatrix::Randomize() {Randomize261,11346
std::string MatchMatrix::DebugString() const {DebugString270,11599
void UnorderedElementsAreMatcherImplBase::DescribeToImpl(DescribeToImpl283,11873
void UnorderedElementsAreMatcherImplBase::DescribeNegationToImpl(DescribeNegationToImpl324,13162
bool UnorderedElementsAreMatcherImplBase::VerifyMatchMatrix(VerifyMatchMatrix370,14793
bool UnorderedElementsAreMatcherImplBase::FindPairing(FindPairing420,16443

build/_deps/googletest-src/googlemock/src/gmock-all.cc,0

build/_deps/googletest-src/googlemock/src/gmock-cardinalities.cc,1321
namespace testing {testing45,1863
namespace {__anon2e65d57a011147,1884
class BetweenCardinalityImpl : public CardinalityInterface {BetweenCardinalityImpl50,1942
  BetweenCardinalityImpl(int min, int max)BetweenCardinalityImpl52,2012
  int ConservativeLowerBound() const override { return min_; }ConservativeLowerBound72,2830
  int ConservativeUpperBound() const override { return max_; }ConservativeUpperBound73,2893
  bool IsSatisfiedByCallCount(int call_count) const override {IsSatisfiedByCallCount75,2957
  bool IsSaturatedByCallCount(int call_count) const override {IsSaturatedByCallCount79,3078
  const int min_;min_86,3242
  const int max_;max_87,3260
inline std::string FormatTimes(int n) {FormatTimes94,3472
void BetweenCardinalityImpl::DescribeTo(::std::ostream* os) const {DescribeTo107,3747
void Cardinality::DescribeActualCallCountTo(int actual_call_count,DescribeActualCallCountTo129,4383
GTEST_API_ Cardinality AtLeast(int n) { return Between(n, INT_MAX); }AtLeast139,4703
GTEST_API_ Cardinality AtMost(int n) { return Between(0, n); }AtMost142,4828
GTEST_API_ Cardinality AnyNumber() { return AtLeast(0); }AnyNumber145,4950
GTEST_API_ Cardinality Between(int min, int max) {Between148,5073
GTEST_API_ Cardinality Exactly(int n) { return Between(n, n); }Exactly153,5241

build/_deps/googletest-src/googlemock/src/gmock-spec-builders.cc,4738
namespace testing {testing67,2334
namespace internal {internal68,2354
GTEST_API_ void LogWithLocation(testing::internal::LogSeverity severity,LogWithLocation75,2594
ExpectationBase::ExpectationBase(const char* a_file, int a_line,ExpectationBase85,2974
ExpectationBase::~ExpectationBase() {}~ExpectationBase101,3520
void ExpectationBase::SpecifyCardinality(const Cardinality& a_cardinality) {SpecifyCardinality105,3682
void ExpectationBase::RetireAllPreRequisites()RetireAllPreRequisites111,3878
bool ExpectationBase::AllPrerequisitesAreSatisfied() constAllPrerequisitesAreSatisfied138,4733
void ExpectationBase::FindUnsatisfiedPrerequisites(ExpectationSet* result) constFindUnsatisfiedPrerequisites158,5456
void ExpectationBase::DescribeCallCountTo(::std::ostream* os) constDescribeCallCountTo189,6597
void ExpectationBase::CheckActionCountIfNotDone() constCheckActionCountIfNotDone213,7537
void ExpectationBase::UntypedTimes(const Cardinality& a_cardinality) {UntypedTimes264,9195
GTEST_API_ ThreadLocal<Sequence*> g_gmock_implicit_sequence;g_gmock_implicit_sequence282,9837
void ReportUninterestingCall(CallReaction reaction, const std::string& msg) {ReportUninterestingCall286,10004
UntypedFunctionMockerBase::UntypedFunctionMockerBase()UntypedFunctionMockerBase311,10919
UntypedFunctionMockerBase::~UntypedFunctionMockerBase() {}~UntypedFunctionMockerBase314,11014
void UntypedFunctionMockerBase::RegisterOwner(const void* mock_obj)RegisterOwner320,11284
void UntypedFunctionMockerBase::SetOwnerAndName(const void* mock_obj,SetOwnerAndName332,11657
const void* UntypedFunctionMockerBase::MockObject() constMockObject344,12153
const char* UntypedFunctionMockerBase::Name() constName361,12765
Expectation UntypedFunctionMockerBase::GetHandleOf(ExpectationBase* exp) {GetHandleOf378,13342
bool UntypedFunctionMockerBase::VerifyAndClearExpectationsLocked()VerifyAndClearExpectationsLocked397,14057
static CallReaction intToCallReaction(int mock_behavior) {intToCallReaction441,15993
namespace {__anon57f99b900111452,16239
typedef std::set<internal::UntypedFunctionMockerBase*> FunctionMockers;FunctionMockers454,16252
struct MockObjectState {MockObjectState459,16480
  MockObjectState()MockObjectState460,16505
  const char* first_used_file;first_used_file465,16699
  int first_used_line;first_used_line466,16730
  bool leakable;  // true if and only if it's OK to leak the object.leakable469,16825
  FunctionMockers function_mockers;  // All registered methods of the object.function_mockers470,16894
class MockObjectRegistry {MockObjectRegistry477,17246
  typedef std::map<const void*, MockObjectState> StateMap;StateMap480,17348
  ~MockObjectRegistry() {~MockObjectRegistry486,17672
  StateMap& states() { return states_; }states534,19741
  StateMap states_;states_537,19793
MockObjectRegistry g_mock_object_registry;g_mock_object_registry541,19848
UninterestingCallReactionMap() {UninterestingCallReactionMap546,20081
void SetReactionOnUninterestingCalls(uintptr_t mock_obj,SetReactionOnUninterestingCalls553,20325
void Mock::AllowUninterestingCalls(uintptr_t mock_obj)AllowUninterestingCalls564,20709
void Mock::WarnUninterestingCalls(uintptr_t mock_obj)WarnUninterestingCalls571,20975
void Mock::FailUninterestingCalls(uintptr_t mock_obj)FailUninterestingCalls578,21224
void Mock::UnregisterCallReaction(uintptr_t mock_obj)UnregisterCallReaction585,21520
internal::CallReaction Mock::GetReactionOnUninterestingCalls(GetReactionOnUninterestingCalls593,21857
void Mock::AllowLeak(const void* mock_obj)AllowLeak606,22444
bool Mock::VerifyAndClearExpectations(void* mock_obj)VerifyAndClearExpectations615,22837
bool Mock::VerifyAndClear(void* mock_obj)VerifyAndClear624,23221
bool Mock::VerifyAndClearExpectationsLocked(void* mock_obj)VerifyAndClearExpectationsLocked634,23644
bool Mock::IsNaggy(void* mock_obj)IsNaggy659,24501
bool Mock::IsNice(void* mock_obj)IsNice663,24667
bool Mock::IsStrict(void* mock_obj)IsStrict667,24833
void Mock::Register(const void* mock_obj,Register673,25055
void Mock::RegisterUseByOnCallOrExpectCall(const void* mock_obj,RegisterUseByOnCallOrExpectCall683,25534
void Mock::UnregisterLocked(internal::UntypedFunctionMockerBase* mocker)UnregisterLocked704,26423
void Mock::ClearDefaultActionsLocked(void* mock_obj)ClearDefaultActionsLocked722,27086
Expectation::Expectation() {}Expectation744,27815
Expectation::Expectation(Expectation746,27846
Expectation::~Expectation() {}~Expectation750,27996
void Sequence::AddExpectation(const Expectation& expectation) const {AddExpectation753,28066
InSequence::InSequence() {InSequence764,28439
InSequence::~InSequence() {~InSequence775,28755

build/_deps/googletest-src/googlemock/src/gmock_main.cc,138
void setup() {setup39,1709
void loop() { RUN_ALL_TESTS(); }loop45,1956
GTEST_API_ int _tmain(int argc, TCHAR** argv) {_tmain61,2546

build/_deps/googletest-src/googlemock/docs/README.md,34
# Content MovedContent Moved1,0

build/_deps/googletest-src/docs/gmock_for_dummies.md,1220
# gMock for DummiesgMock for Dummies1,0
## What Is gMock?What Is gMock?3,21
## Why gMock?Why gMock?40,1862
## Getting StartedGetting Started86,4171
## A Case for Mock TurtlesA Case for Mock Turtles90,4226
## Writing the Mock ClassWriting the Mock Class136,6441
### How to Define ItHow to Define It142,6697
### Where to Put ItWhere to Put It185,8521
## Using Mocks in TestsUsing Mocks in Tests207,9809
## Setting ExpectationsSetting Expectations279,12665
### General SyntaxGeneral Syntax288,13097
### Matchers: What Arguments Do We Expect?Matchers: What Arguments Do We Expect?344,15051
### Cardinalities: How Many Times Will It Be Called?Cardinalities: How Many Times Will It Be Called?400,17069
### Actions: What Should It Do?Actions: What Should It Do?430,18579
### Using Multiple Expectations {#MultiExpectations}Using Multiple Expectations {#MultiExpectations}523,22265
### Ordered vs Unordered Calls {#OrderedCalls}Ordered vs Unordered Calls {#OrderedCalls}566,24358
### All Expectations Are Sticky (Unless Said Otherwise) {#StickyExpectations}All Expectations Are Sticky (Unless Said Otherwise) {#StickyExpectations}603,25577
### Uninteresting CallsUninteresting Calls691,28686

build/_deps/googletest-src/docs/gmock_cheat_sheet.md,1002
# gMock Cheat SheetgMock Cheat Sheet1,0
## Defining a Mock ClassDefining a Mock Class3,21
### Mocking a Normal Class {#MockClass}Mocking a Normal Class {#MockClass}5,47
### Mocking a Class Template {#MockTemplate}Mocking a Class Template {#MockTemplate}52,1312
### Specifying Calling Conventions for Mock FunctionsSpecifying Calling Conventions for Mock Functions80,1902
## Using Mocks in Tests {#UsingMocks}Using Mocks in Tests {#UsingMocks}94,2367
## Setting Default Actions {#OnCall}Setting Default Actions {#OnCall}130,3550
## Setting Expectations {#ExpectCall}Setting Expectations {#ExpectCall}167,5074
## Matchers {#MatcherList}Matchers {#MatcherList}171,5194
## Actions {#ActionList}Actions {#ActionList}175,5276
## Cardinalities {#CardinalityList}Cardinalities {#CardinalityList}179,5354
## Expectation OrderExpectation Order184,5500
## Verifying and Resetting a MockVerifying and Resetting a Mock192,5868
## Mock ClassesMock Classes222,6757
## FlagsFlags236,7005

build/_deps/googletest-src/docs/primer.md,658
# Googletest PrimerGoogletest Primer1,0
## Introduction: Why googletest?Introduction: Why googletest?3,21
## Beware of the nomenclatureBeware of the nomenclature45,2516
## Basic ConceptsBasic Concepts79,4241
## AssertionsAssertions99,5159
## Simple TestsSimple Tests145,7555
## Test Fixtures: Using the Same Data Configuration for Multiple Tests {#same-data-multiple-testTest Fixtures: Using the Same Data Configuration for Multiple Tests {#same-data-multiple-tests}205,9575
## Invoking the TestsInvoking the Tests337,14044
## Writing the main() FunctionWriting the main() Function381,15660
## Known LimitationsKnown Limitations474,18617

build/_deps/googletest-src/docs/gmock_cook_book.md,8127
# gMock CookbookgMock Cookbook1,0
## Creating Mock ClassesCreating Mock Classes13,483
### Dealing with unprotected commasDealing with unprotected commas42,1577
### Mocking Private or Protected MethodsMocking Private or Protected Methods83,2544
### Mocking Overloaded MethodsMocking Overloaded Methods117,3480
### Mocking Class TemplatesMocking Class Templates162,4594
### Mocking Non-virtual Methods {#MockingNonVirtualMethods}Mocking Non-virtual Methods {#MockingNonVirtualMethods}185,5091
### Mocking Free FunctionsMocking Free Functions252,7498
### Old-Style `MOCK_METHODn` MacrosOld-Style `MOCK_METHODn` Macros288,8635
### The Nice, the Strict, and the Naggy {#NiceStrictNaggy}The Nice, the Strict, and the Naggy {#NiceStrictNaggy}390,11793
### Simplifying the Interface without Breaking Existing Code {#SimplerInterfaces}Simplifying the Interface without Breaking Existing Code {#SimplerInterfaces}487,15308
### Alternative to Mocking Concrete ClassesAlternative to Mocking Concrete Classes559,17594
### Delegating Calls to a Fake {#DelegatingToFake}Delegating Calls to a Fake {#DelegatingToFake}621,20772
### Delegating Calls to a Real ObjectDelegating Calls to a Real Object739,25127
### Delegating Calls to a Parent ClassDelegating Calls to a Parent Class790,26824
## Using MatchersUsing Matchers842,28337
### Matching Argument Values ExactlyMatching Argument Values Exactly844,28356
### Using Simple MatchersUsing Simple Matchers856,28606
### Combining Matchers {#CombiningMatchers}Combining Matchers {#CombiningMatchers}876,29074
### Casting Matchers {#SafeMatcherCast}Casting Matchers {#SafeMatcherCast}913,30135
### Selecting Between Overloaded Functions {#SelectOverload}Selecting Between Overloaded Functions {#SelectOverload}968,32267
### Performing Different Actions Based on the ArgumentsPerforming Different Actions Based on the Arguments1025,33907
### Matching Multiple Arguments as a WholeMatching Multiple Arguments as a Whole1047,34575
### Using Matchers as PredicatesUsing Matchers as Predicates1099,36372
### Using Matchers in googletest AssertionsUsing Matchers in googletest Assertions1137,37510
### Using Predicates as MatchersUsing Predicates as Matchers1142,37642
### Matching Arguments that Are Not CopyableMatching Arguments that Are Not Copyable1164,38461
### Validating a Member of an ObjectValidating a Member of an Object1193,39643
### Validating the Value Pointed to by a Pointer ArgumentValidating the Value Pointed to by a Pointer Argument1260,41985
### Defining a Custom Matcher Class {#CustomMatcherClass}Defining a Custom Matcher Class {#CustomMatcherClass}1302,43389
### Matching ContainersMatching Containers1351,45004
### Sharing MatchersSharing Matchers1452,48448
### Matchers must have no side-effects {#PureMatchers}Matchers must have no side-effects {#PureMatchers}1473,49189
## Setting ExpectationsSetting Expectations1486,49810
### Knowing When to Expect {#UseOnCall}Knowing When to Expect {#UseOnCall}1488,49835
### Ignoring Uninteresting CallsIgnoring Uninteresting Calls1539,52834
### Disallowing Unexpected CallsDisallowing Unexpected Calls1552,53501
### Understanding Uninteresting vs Unexpected Calls {#uninteresting-vs-unexpected}Understanding Uninteresting vs Unexpected Calls {#uninteresting-vs-unexpected}1578,54028
### Ignoring Uninteresting Arguments {#ParameterlessExpectations}Ignoring Uninteresting Arguments {#ParameterlessExpectations}1653,57262
### Expecting Ordered Calls {#OrderedCalls}Expecting Ordered Calls {#OrderedCalls}1679,58410
### Expecting Partially Ordered Calls {#PartialOrder}Expecting Partially Ordered Calls {#PartialOrder}1710,59466
### Controlling When an Expectation RetiresControlling When an Expectation Retires1768,61586
## Using ActionsUsing Actions1821,63303
### Returning References from Mock MethodsReturning References from Mock Methods1823,63321
### Returning Live Values from Mock MethodsReturning Live Values from Mock Methods1843,63710
### Combining ActionsCombining Actions1904,65743
### Verifying Complex Arguments {#SaveArgVerify}Verifying Complex Arguments {#SaveArgVerify}1926,66267
### Mocking Side Effects {#MockingSideEffects}Mocking Side Effects {#MockingSideEffects}1950,67216
### Changing a Mock Object's Behavior Based on the StateChanging a Mock Object's Behavior Based on the State2047,70071
### Setting the Default Value for a Return Type {#DefaultValue}Setting the Default Value for a Return Type {#DefaultValue}2093,71331
### Setting the Default Actions for a Mock MethodSetting the Default Actions for a Mock Method2136,72710
### Using Functions/Methods/Functors/Lambdas as Actions {#FunctionsAsActions}Using Functions/Methods/Functors/Lambdas as Actions {#FunctionsAsActions}2174,74163
### Using Functions with Extra Info as ActionsUsing Functions with Extra Info as Actions2237,76308
### Invoking a Function/Method/Functor/Lambda/Callback Without ArgumentsInvoking a Function/Method/Functor/Lambda/Callback Without Arguments2267,77141
### Invoking an Argument of the Mock FunctionInvoking an Argument of the Mock Function2324,79084
### Ignoring an Action's ResultIgnoring an Action's Result2423,82058
### Selecting an Action's Arguments {#SelectingArgs}Selecting an Action's Arguments {#SelectingArgs}2461,83241
### Ignoring Arguments in Action FunctionsIgnoring Arguments in Action Functions2545,86177
### Sharing ActionsSharing Actions2602,87923
### Testing Asynchronous BehaviorTesting Asynchronous Behavior2658,89887
## Misc Recipes on Using gMockMisc Recipes on Using gMock2700,91681
### Mocking Methods That Use Move-Only TypesMocking Methods That Use Move-Only Types2702,91713
#### Legacy workarounds for move-only types {#LegacyMoveOnly}Legacy workarounds for move-only types {#LegacyMoveOnly}2842,96921
### Making the Compilation FasterMaking the Compilation Faster2874,98080
### Forcing a VerificationForcing a Verification2938,100070
### Using Checkpoints {#UsingCheckPoints}Using Checkpoints {#UsingCheckPoints}2985,102015
### Mocking DestructorsMocking Destructors3034,103473
### Using gMock and Threads {#UsingThreads}Using gMock and Threads {#UsingThreads}3082,104863
### Controlling How Much Information gMock PrintsControlling How Much Information gMock Prints3140,107358
### Gaining Super Vision into Mock CallsGaining Super Vision into Mock Calls3179,109224
### Running Tests in EmacsRunning Tests in Emacs3257,111855
## Extending gMockExtending gMock3277,112705
### Writing New Matchers Quickly {#NewMatchers}Writing New Matchers Quickly {#NewMatchers}3279,112725
### Writing New Parameterized Matchers QuicklyWriting New Parameterized Matchers Quickly3395,116570
### Writing New Monomorphic MatchersWriting New Monomorphic Matchers3532,121049
### Writing New Polymorphic MatchersWriting New Polymorphic Matchers3627,123647
### Legacy Matcher ImplementationLegacy Matcher Implementation3666,124789
### Writing New CardinalitiesWriting New Cardinalities3756,127754
### Writing New Actions {#QuickNewActions}Writing New Actions {#QuickNewActions}3815,129331
#### Legacy macro-based ActionsLegacy macro-based Actions3883,131887
#### Legacy macro-based parameterized ActionsLegacy macro-based parameterized Actions3962,134391
### Restricting the Type of an Argument or Parameter in an ACTIONRestricting the Type of an Argument or Parameter in an ACTION4021,135774
### Writing New Action Templates QuicklyWriting New Action Templates Quickly4049,136605
### Using the ACTION Object's TypeUsing the ACTION Object's Type4119,138777
### Writing New Monomorphic Actions {#NewMonoActions}Writing New Monomorphic Actions {#NewMonoActions}4141,140173
### Writing New Polymorphic Actions {#NewPolyActions}Writing New Polymorphic Actions {#NewPolyActions}4198,141909
### Teaching gMock How to Print Your ValuesTeaching gMock How to Print Your Values4274,144539
## Useful Mocks Created Using gMockUseful Mocks Created Using gMock4289,145329
### Mock std::function {#MockFunction}Mock std::function {#MockFunction}4294,145471

build/_deps/googletest-src/docs/_data/navigation.yml,0

build/_deps/googletest-src/docs/samples.md,44
# Googletest SamplesGoogletest Samples1,0

build/_deps/googletest-src/docs/platforms.md,163
# Supported PlatformsSupported Platforms1,0
### Operating systemsOperating systems15,546
### CompilersCompilers21,602
### Build systemsBuild systems29,711

build/_deps/googletest-src/docs/quickstart-cmake.md,245
# Quickstart: Building with CMakeQuickstart: Building with CMake1,0
## PrerequisitesPrerequisites8,314
## Set up a projectSet up a project32,1227
## Create and run a binaryCreate and run a binary77,2801
## Next stepsNext steps152,4832

build/_deps/googletest-src/docs/reference/actions.md,369
# Actions ReferenceActions Reference1,0
## Returning a ValueReturning a Value7,255
## Side EffectsSide Effects21,1515
## Using a Function, Functor, or Lambda as an ActionUsing a Function, Functor, or Lambda as an Action36,2817
## Default ActionDefault Action87,4965
## Composite ActionsComposite Actions97,5387
## Defining ActionsDefining Actions107,6219

build/_deps/googletest-src/docs/reference/assertions.md,3235
# Assertions ReferenceAssertions Reference1,0
## Explicit Success and Failure {#success-failure}Explicit Success and Failure {#success-failure}23,935
### SUCCEED {#SUCCEED}SUCCEED {#SUCCEED}41,1407
### FAIL {#FAIL}FAIL {#FAIL}52,1781
### ADD_FAILURE {#ADD_FAILURE}ADD_FAILURE {#ADD_FAILURE}61,2013
### ADD_FAILURE_AT {#ADD_FAILURE_AT}ADD_FAILURE_AT {#ADD_FAILURE_AT}68,2148
## Generalized Assertion {#generalized}Generalized Assertion {#generalized}74,2308
### EXPECT_THAT {#EXPECT_THAT}EXPECT_THAT {#EXPECT_THAT}79,2434
## Boolean Conditions {#boolean}Boolean Conditions {#boolean}123,3790
### EXPECT_TRUE {#EXPECT_TRUE}EXPECT_TRUE {#EXPECT_TRUE}127,3875
### EXPECT_FALSE {#EXPECT_FALSE}EXPECT_FALSE {#EXPECT_FALSE}134,4010
## Binary Comparison {#binary-comparison}Binary Comparison {#binary-comparison}141,4150
### EXPECT_EQ {#EXPECT_EQ}EXPECT_EQ {#EXPECT_EQ}162,5113
### EXPECT_NE {#EXPECT_NE}EXPECT_NE {#EXPECT_NE}177,5598
### EXPECT_LT {#EXPECT_LT}EXPECT_LT {#EXPECT_LT}192,6087
### EXPECT_LE {#EXPECT_LE}EXPECT_LE {#EXPECT_LE}199,6224
### EXPECT_GT {#EXPECT_GT}EXPECT_GT {#EXPECT_GT}206,6362
### EXPECT_GE {#EXPECT_GE}EXPECT_GE {#EXPECT_GE}213,6499
## String Comparison {#c-strings}String Comparison {#c-strings}220,6637
### EXPECT_STREQ {#EXPECT_STREQ}EXPECT_STREQ {#EXPECT_STREQ}231,7100
### EXPECT_STRNE {#EXPECT_STRNE}EXPECT_STRNE {#EXPECT_STRNE}238,7292
### EXPECT_STRCASEEQ {#EXPECT_STRCASEEQ}EXPECT_STRCASEEQ {#EXPECT_STRCASEEQ}245,7485
### EXPECT_STRCASENE {#EXPECT_STRCASENE}EXPECT_STRCASENE {#EXPECT_STRCASENE}253,7708
## Floating-Point Comparison {#floating-point}Floating-Point Comparison {#floating-point}261,7932
### EXPECT_FLOAT_EQ {#EXPECT_FLOAT_EQ}EXPECT_FLOAT_EQ {#EXPECT_FLOAT_EQ}273,8558
### EXPECT_DOUBLE_EQ {#EXPECT_DOUBLE_EQ}EXPECT_DOUBLE_EQ {#EXPECT_DOUBLE_EQ}281,8802
### EXPECT_NEAR {#EXPECT_NEAR}EXPECT_NEAR {#EXPECT_NEAR}289,9051
## Exception Assertions {#exceptions}Exception Assertions {#exceptions}297,9308
### EXPECT_THROW {#EXPECT_THROW}EXPECT_THROW {#EXPECT_THROW}311,9656
### EXPECT_ANY_THROW {#EXPECT_ANY_THROW}EXPECT_ANY_THROW {#EXPECT_ANY_THROW}318,9876
### EXPECT_NO_THROW {#EXPECT_NO_THROW}EXPECT_NO_THROW {#EXPECT_NO_THROW}325,10055
## Predicate Assertions {#predicates}Predicate Assertions {#predicates}332,10227
### EXPECT_PRED* {#EXPECT_PRED}EXPECT_PRED* {#EXPECT_PRED}337,10421
### EXPECT_PRED_FORMAT* {#EXPECT_PRED_FORMAT}EXPECT_PRED_FORMAT* {#EXPECT_PRED_FORMAT}415,12986
## Windows HRESULT Assertions {#HRESULT}Windows HRESULT Assertions {#HRESULT}494,16327
### EXPECT_HRESULT_SUCCEEDED {#EXPECT_HRESULT_SUCCEEDED}EXPECT_HRESULT_SUCCEEDED {#EXPECT_HRESULT_SUCCEEDED}508,16781
### EXPECT_HRESULT_FAILED {#EXPECT_HRESULT_FAILED}EXPECT_HRESULT_FAILED {#EXPECT_HRESULT_FAILED}515,16986
## Death Assertions {#death}Death Assertions {#death}522,17179
### EXPECT_DEATH {#EXPECT_DEATH}EXPECT_DEATH {#EXPECT_DEATH}560,18746
### EXPECT_DEATH_IF_SUPPORTED {#EXPECT_DEATH_IF_SUPPORTED}EXPECT_DEATH_IF_SUPPORTED {#EXPECT_DEATH_IF_SUPPORTED}582,19575
### EXPECT_DEBUG_DEATH {#EXPECT_DEBUG_DEATH}EXPECT_DEBUG_DEATH {#EXPECT_DEBUG_DEATH}590,19869
### EXPECT_EXIT {#EXPECT_EXIT}EXPECT_EXIT {#EXPECT_EXIT}598,20171

build/_deps/googletest-src/docs/reference/testing.md,15463
# Testing ReferenceTesting Reference1,0
## MacrosMacros8,177
### TEST {#TEST}TEST {#TEST}12,248
### TEST_F {#TEST_F}TEST_F {#TEST_F}31,823
### TEST_P {#TEST_P}TEST_P {#TEST_P}51,1490
### INSTANTIATE_TEST_SUITE_P {#INSTANTIATE_TEST_SUITE_P}INSTANTIATE_TEST_SUITE_P {#INSTANTIATE_TEST_SUITE_P}85,2535
### TYPED_TEST_SUITE {#TYPED_TEST_SUITE}TYPED_TEST_SUITE {#TYPED_TEST_SUITE}138,5214
### TYPED_TEST {#TYPED_TEST}TYPED_TEST {#TYPED_TEST}173,6126
### TYPED_TEST_SUITE_P {#TYPED_TEST_SUITE_P}TYPED_TEST_SUITE_P {#TYPED_TEST_SUITE_P}210,7256
### TYPED_TEST_P {#TYPED_TEST_P}TYPED_TEST_P {#TYPED_TEST_P}224,7763
### REGISTER_TYPED_TEST_SUITE_P {#REGISTER_TYPED_TEST_SUITE_P}REGISTER_TYPED_TEST_SUITE_P {#REGISTER_TYPED_TEST_SUITE_P}244,8447
### INSTANTIATE_TYPED_TEST_SUITE_P {#INSTANTIATE_TYPED_TEST_SUITE_P}INSTANTIATE_TYPED_TEST_SUITE_P {#INSTANTIATE_TYPED_TEST_SUITE_P}268,9270
### FRIEND_TEST {#FRIEND_TEST}FRIEND_TEST {#FRIEND_TEST}295,10318
### SCOPED_TRACE {#SCOPED_TRACE}SCOPED_TRACE {#SCOPED_TRACE}339,11353
### GTEST_SKIP {#GTEST_SKIP}GTEST_SKIP {#GTEST_SKIP}352,11737
### GTEST_ALLOW_UNINSTANTIATED_PARAMETERIZED_TEST {#GTEST_ALLOW_UNINSTANTIATED_PARAMETERIZED_TESGTEST_ALLOW_UNINSTANTIATED_PARAMETERIZED_TEST {#GTEST_ALLOW_UNINSTANTIATED_PARAMETERIZED_TEST}370,12381
## Classes and typesClasses and types383,12927
### AssertionResult {#AssertionResult}AssertionResult {#AssertionResult}387,13029
### AssertionException {#AssertionException}AssertionException {#AssertionException}401,13482
### EmptyTestEventListener {#EmptyTestEventListener}EmptyTestEventListener {#EmptyTestEventListener}408,13676
### Environment {#Environment}Environment {#Environment}416,13948
#### Protected Methods {#Environment-protected}Protected Methods {#Environment-protected}423,14124
##### SetUp {#Environment::SetUp}SetUp {#Environment::SetUp}425,14173
##### TearDown {#Environment::TearDown}TearDown {#Environment::TearDown}431,14301
### ScopedTrace {#ScopedTrace}ScopedTrace {#ScopedTrace}437,14441
### Test {#Test}Test {#Test}464,15164
#### Public Methods {#Test-public}Public Methods {#Test-public}470,15274
##### SetUpTestSuite {#Test::SetUpTestSuite}SetUpTestSuite {#Test::SetUpTestSuite}472,15310
##### TearDownTestSuite {#Test::TearDownTestSuite}TearDownTestSuite {#Test::TearDownTestSuite}479,15535
##### HasFatalFailure {#Test::HasFatalFailure}HasFatalFailure {#Test::HasFatalFailure}486,15773
##### HasNonfatalFailure {#Test::HasNonfatalFailure}HasNonfatalFailure {#Test::HasNonfatalFailure}492,15927
##### HasFailure {#Test::HasFailure}HasFailure {#Test::HasFailure}498,16093
##### IsSkipped {#Test::IsSkipped}IsSkipped {#Test::IsSkipped}505,16254
##### RecordProperty {#Test::RecordProperty}RecordProperty {#Test::RecordProperty}511,16382
#### Protected Methods {#Test-protected}Protected Methods {#Test-protected}536,17634
##### SetUp {#Test::SetUp}SetUp {#Test::SetUp}538,17676
##### TearDown {#Test::TearDown}TearDown {#Test::TearDown}545,17844
### TestWithParam {#TestWithParam}TestWithParam {#TestWithParam}552,18026
### TestSuite {#TestSuite}TestSuite {#TestSuite}559,18207
#### Public Methods {#TestSuite-public}Public Methods {#TestSuite-public}563,18290
##### name {#TestSuite::name}name {#TestSuite::name}565,18331
##### type_param {#TestSuite::type_param}type_param {#TestSuite::type_param}571,18435
##### should_run {#TestSuite::should_run}should_run {#TestSuite::should_run}579,18750
##### successful_test_count {#TestSuite::successful_test_count}successful_test_count {#TestSuite::successful_test_count}585,18888
##### skipped_test_count {#TestSuite::skipped_test_count}skipped_test_count {#TestSuite::skipped_test_count}591,19058
##### failed_test_count {#TestSuite::failed_test_count}failed_test_count {#TestSuite::failed_test_count}597,19216
##### reportable_disabled_test_count {#TestSuite::reportable_disabled_test_count}reportable_disabled_test_count {#TestSuite::reportable_disabled_test_count}603,19370
##### disabled_test_count {#TestSuite::disabled_test_count}disabled_test_count {#TestSuite::disabled_test_count}609,19586
##### reportable_test_count {#TestSuite::reportable_test_count}reportable_test_count {#TestSuite::reportable_test_count}615,19748
##### test_to_run_count {#TestSuite::test_to_run_count}test_to_run_count {#TestSuite::test_to_run_count}621,19920
##### total_test_count {#TestSuite::total_test_count}total_test_count {#TestSuite::total_test_count}627,20082
##### Passed {#TestSuite::Passed}Passed {#TestSuite::Passed}633,20230
##### Failed {#TestSuite::Failed}Failed {#TestSuite::Failed}639,20351
##### elapsed_time {#TestSuite::elapsed_time}elapsed_time {#TestSuite::elapsed_time}645,20472
##### start_timestamp {#TestSuite::start_timestamp}start_timestamp {#TestSuite::start_timestamp}651,20611
##### GetTestInfo {#TestSuite::GetTestInfo}GetTestInfo {#TestSuite::GetTestInfo}657,20795
##### ad_hoc_test_result {#TestSuite::ad_hoc_test_result}ad_hoc_test_result {#TestSuite::ad_hoc_test_result}665,21068
### TestInfo {#TestInfo}TestInfo {#TestInfo}672,21325
#### Public Methods {#TestInfo-public}Public Methods {#TestInfo-public}678,21408
##### test_suite_name {#TestInfo::test_suite_name}test_suite_name {#TestInfo::test_suite_name}680,21448
##### name {#TestInfo::name}name {#TestInfo::name}686,21579
##### type_param {#TestInfo::type_param}type_param {#TestInfo::type_param}692,21671
##### value_param {#TestInfo::value_param}value_param {#TestInfo::value_param}700,21978
##### file {#TestInfo::file}file {#TestInfo::file}708,22252
##### line {#TestInfo::line}line {#TestInfo::line}714,22371
##### is_in_another_shard {#TestInfo::is_in_another_shard}is_in_another_shard {#TestInfo::is_in_another_shard}720,22477
##### should_run {#TestInfo::should_run}should_run {#TestInfo::should_run}726,22659
##### is_reportable {#TestInfo::is_reportable}is_reportable {#TestInfo::is_reportable}739,23164
##### result {#TestInfo::result}result {#TestInfo::result}745,23322
### TestParamInfo {#TestParamInfo}TestParamInfo {#TestParamInfo}751,23468
### UnitTest {#UnitTest}UnitTest {#UnitTest}761,23747
#### Public Methods {#UnitTest-public}Public Methods {#UnitTest-public}772,24025
##### GetInstance {#UnitTest::GetInstance}GetInstance {#UnitTest::GetInstance}774,24065
##### original_working_dir {#UnitTest::original_working_dir}original_working_dir {#UnitTest::original_working_dir}782,24326
##### current_test_suite {#UnitTest::current_test_suite}current_test_suite {#UnitTest::current_test_suite}789,24584
##### current_test_info {#UnitTest::current_test_info}current_test_info {#UnitTest::current_test_info}796,24817
##### random_seed {#UnitTest::random_seed}random_seed {#UnitTest::random_seed}803,25044
##### successful_test_suite_count {#UnitTest::successful_test_suite_count}successful_test_suite_count {#UnitTest::successful_test_suite_count}809,25193
##### failed_test_suite_count {#UnitTest::failed_test_suite_count}failed_test_suite_count {#UnitTest::failed_test_suite_count}815,25366
##### total_test_suite_count {#UnitTest::total_test_suite_count}total_test_suite_count {#UnitTest::total_test_suite_count}821,25523
##### test_suite_to_run_count {#UnitTest::test_suite_to_run_count}test_suite_to_run_count {#UnitTest::test_suite_to_run_count}827,25674
##### successful_test_count {#UnitTest::successful_test_count}successful_test_count {#UnitTest::successful_test_count}834,25875
##### skipped_test_count {#UnitTest::skipped_test_count}skipped_test_count {#UnitTest::skipped_test_count}840,26024
##### failed_test_count {#UnitTest::failed_test_count}failed_test_count {#UnitTest::failed_test_count}846,26161
##### reportable_disabled_test_count {#UnitTest::reportable_disabled_test_count}reportable_disabled_test_count {#UnitTest::reportable_disabled_test_count}852,26294
##### disabled_test_count {#UnitTest::disabled_test_count}disabled_test_count {#UnitTest::disabled_test_count}858,26508
##### reportable_test_count {#UnitTest::reportable_test_count}reportable_test_count {#UnitTest::reportable_test_count}864,26649
##### total_test_count {#UnitTest::total_test_count}total_test_count {#UnitTest::total_test_count}870,26819
##### test_to_run_count {#UnitTest::test_to_run_count}test_to_run_count {#UnitTest::test_to_run_count}876,26946
##### start_timestamp {#UnitTest::start_timestamp}start_timestamp {#UnitTest::start_timestamp}882,27088
##### elapsed_time {#UnitTest::elapsed_time}elapsed_time {#UnitTest::elapsed_time}888,27272
##### Passed {#UnitTest::Passed}Passed {#UnitTest::Passed}894,27406
##### Failed {#UnitTest::Failed}Failed {#UnitTest::Failed}900,27554
##### GetTestSuite {#UnitTest::GetTestSuite}GetTestSuite {#UnitTest::GetTestSuite}907,27743
##### ad_hoc_test_result {#UnitTest::ad_hoc_test_result}ad_hoc_test_result {#UnitTest::ad_hoc_test_result}915,28042
##### listeners {#UnitTest::listeners}listeners {#UnitTest::listeners}922,28296
### TestEventListener {#TestEventListener}TestEventListener {#TestEventListener}929,28519
#### Public Methods {#TestEventListener-public}Public Methods {#TestEventListener-public}936,28720
##### OnTestProgramStart {#TestEventListener::OnTestProgramStart}OnTestProgramStart {#TestEventListener::OnTestProgramStart}938,28769
##### OnTestIterationStart {#TestEventListener::OnTestIterationStart}OnTestIterationStart {#TestEventListener::OnTestIterationStart}944,28957
##### OnEnvironmentsSetUpStart {#TestEventListener::OnEnvironmentsSetUpStart}OnEnvironmentsSetUpStart {#TestEventListener::OnEnvironmentsSetUpStart}953,29294
##### OnEnvironmentsSetUpEnd {#TestEventListener::OnEnvironmentsSetUpEnd}OnEnvironmentsSetUpEnd {#TestEventListener::OnEnvironmentsSetUpEnd}960,29529
##### OnTestSuiteStart {#TestEventListener::OnTestSuiteStart}OnTestSuiteStart {#TestEventListener::OnTestSuiteStart}967,29755
##### OnTestStart {#TestEventListener::OnTestStart}OnTestStart {#TestEventListener::OnTestStart}973,29936
##### OnTestPartResult {#TestEventListener::OnTestPartResult}OnTestPartResult {#TestEventListener::OnTestPartResult}979,30094
##### OnTestEnd {#TestEventListener::OnTestEnd}OnTestEnd {#TestEventListener::OnTestEnd}988,30469
##### OnTestSuiteEnd {#TestEventListener::OnTestSuiteEnd}OnTestSuiteEnd {#TestEventListener::OnTestSuiteEnd}994,30618
##### OnEnvironmentsTearDownStart {#TestEventListener::OnEnvironmentsTearDownStart}OnEnvironmentsTearDownStart {#TestEventListener::OnEnvironmentsTearDownStart}1000,30790
##### OnEnvironmentsTearDownEnd {#TestEventListener::OnEnvironmentsTearDownEnd}OnEnvironmentsTearDownEnd {#TestEventListener::OnEnvironmentsTearDownEnd}1007,31037
##### OnTestIterationEnd {#TestEventListener::OnTestIterationEnd}OnTestIterationEnd {#TestEventListener::OnTestIterationEnd}1014,31275
##### OnTestProgramEnd {#TestEventListener::OnTestProgramEnd}OnTestProgramEnd {#TestEventListener::OnTestProgramEnd}1021,31485
### TestEventListeners {#TestEventListeners}TestEventListeners {#TestEventListeners}1027,31672
#### Public Methods {#TestEventListeners-public}Public Methods {#TestEventListeners-public}1033,31808
##### Append {#TestEventListeners::Append}Append {#TestEventListeners::Append}1035,31858
##### Release {#TestEventListeners::Release}Release {#TestEventListeners::Release}1043,32129
##### default_result_printer {#TestEventListeners::default_result_printer}default_result_printer {#TestEventListeners::default_result_printer}1051,32443
##### default_xml_generator {#TestEventListeners::default_xml_generator}default_xml_generator {#TestEventListeners::default_xml_generator}1061,32937
### TestPartResult {#TestPartResult}TestPartResult {#TestPartResult}1072,33544
#### Public Methods {#TestPartResult-public}Public Methods {#TestPartResult-public}1079,33747
##### type {#TestPartResult::type}type {#TestPartResult::type}1081,33793
##### file_name {#TestPartResult::file_name}file_name {#TestPartResult::file_name}1098,34176
##### line_number {#TestPartResult::line_number}line_number {#TestPartResult::line_number}1105,34364
##### summary {#TestPartResult::summary}summary {#TestPartResult::summary}1112,34548
##### message {#TestPartResult::message}message {#TestPartResult::message}1118,34679
##### skipped {#TestPartResult::skipped}skipped {#TestPartResult::skipped}1124,34817
##### passed {#TestPartResult::passed}passed {#TestPartResult::passed}1130,34955
##### nonfatally_failed {#TestPartResult::nonfatally_failed}nonfatally_failed {#TestPartResult::nonfatally_failed}1136,35085
##### fatally_failed {#TestPartResult::fatally_failed}fatally_failed {#TestPartResult::fatally_failed}1142,35260
##### failed {#TestPartResult::failed}failed {#TestPartResult::failed}1148,35422
### TestProperty {#TestProperty}TestProperty {#TestProperty}1154,35552
#### Public Methods {#TestProperty-public}Public Methods {#TestProperty-public}1161,35724
##### key {#key}key {#key}1163,35768
##### value {#value}value {#value}1169,35842
##### SetValue {#SetValue}SetValue {#SetValue}1175,35924
### TestResult {#TestResult}TestResult {#TestResult}1181,36047
#### Public Methods {#TestResult-public}Public Methods {#TestResult-public}1189,36190
##### total_part_count {#TestResult::total_part_count}total_part_count {#TestResult::total_part_count}1191,36232
##### test_property_count {#TestResult::test_property_count}test_property_count {#TestResult::test_property_count}1198,36460
##### Passed {#TestResult::Passed}Passed {#TestResult::Passed}1204,36609
##### Skipped {#TestResult::Skipped}Skipped {#TestResult::Skipped}1210,36753
##### Failed {#TestResult::Failed}Failed {#TestResult::Failed}1216,36878
##### HasFatalFailure {#TestResult::HasFatalFailure}HasFatalFailure {#TestResult::HasFatalFailure}1222,36995
##### HasNonfatalFailure {#TestResult::HasNonfatalFailure}HasNonfatalFailure {#TestResult::HasNonfatalFailure}1228,37147
##### elapsed_time {#TestResult::elapsed_time}elapsed_time {#TestResult::elapsed_time}1234,37317
##### start_timestamp {#TestResult::start_timestamp}start_timestamp {#TestResult::start_timestamp}1240,37458
##### GetTestPartResult {#TestResult::GetTestPartResult}GetTestPartResult {#TestResult::GetTestPartResult}1246,37643
##### GetTestProperty {#TestResult::GetTestProperty}GetTestProperty {#TestResult::GetTestProperty}1254,37972
### TimeInMillis {#TimeInMillis}TimeInMillis {#TimeInMillis}1262,38274
### Types {#Types}Types {#Types}1268,38387
### WithParamInterface {#WithParamInterface}WithParamInterface {#WithParamInterface}1284,38777
## FunctionsFunctions1305,39542
### InitGoogleTest {#InitGoogleTest}InitGoogleTest {#InitGoogleTest}1310,39640
### AddGlobalTestEnvironment {#AddGlobalTestEnvironment}AddGlobalTestEnvironment {#AddGlobalTestEnvironment}1329,40422
### RegisterTest {#RegisterTest}RegisterTest {#RegisterTest}1340,40806
### RUN_ALL_TESTS {#RUN_ALL_TESTS}RUN_ALL_TESTS {#RUN_ALL_TESTS}1368,41932
### AssertionSuccess {#AssertionSuccess}AssertionSuccess {#AssertionSuccess}1381,42319
### AssertionFailure {#AssertionFailure}AssertionFailure {#AssertionFailure}1388,42493
### StaticAssertTypeEq {#StaticAssertTypeEq}StaticAssertTypeEq {#StaticAssertTypeEq}1401,42781
### PrintToString {#PrintToString}PrintToString {#PrintToString}1410,43083
### PrintToStringParamName {#PrintToStringParamName}PrintToStringParamName {#PrintToStringParamName}1420,43353

build/_deps/googletest-src/docs/reference/mocking.md,1586
# Mocking ReferenceMocking Reference1,0
## Macros {#macros}Macros {#macros}7,169
### MOCK_METHOD {#MOCK_METHOD}MOCK_METHOD {#MOCK_METHOD}11,255
### EXPECT_CALL {#EXPECT_CALL}EXPECT_CALL {#EXPECT_CALL}59,2603
#### With {#EXPECT_CALL.With}With {#EXPECT_CALL.With}92,4193
#### Times {#EXPECT_CALL.Times}Times {#EXPECT_CALL.Times}122,5180
#### InSequence {#EXPECT_CALL.InSequence}InSequence {#EXPECT_CALL.InSequence}151,6639
#### After {#EXPECT_CALL.After}After {#EXPECT_CALL.After}181,7556
#### WillOnce {#EXPECT_CALL.WillOnce}WillOnce {#EXPECT_CALL.WillOnce}222,8834
#### WillRepeatedly {#EXPECT_CALL.WillRepeatedly}WillRepeatedly {#EXPECT_CALL.WillRepeatedly}255,10013
#### RetiresOnSaturation {#EXPECT_CALL.RetiresOnSaturation}RetiresOnSaturation {#EXPECT_CALL.RetiresOnSaturation}288,11243
### ON_CALL {#ON_CALL}ON_CALL {#ON_CALL}321,12471
#### With {#ON_CALL.With}With {#ON_CALL.With}349,13707
#### WillByDefault {#ON_CALL.WillByDefault}WillByDefault {#ON_CALL.WillByDefault}380,14725
## Classes {#classes}Classes {#classes}409,15627
### DefaultValue {#DefaultValue}DefaultValue {#DefaultValue}413,15716
### NiceMock {#NiceMock}NiceMock {#NiceMock}437,16466
### NaggyMock {#NaggyMock}NaggyMock {#NaggyMock}468,17597
### StrictMock {#StrictMock}StrictMock {#StrictMock}495,18519
### Sequence {#Sequence}Sequence {#Sequence}527,19677
### InSequence {#InSequence}InSequence {#InSequence}534,19863
### Expectation {#Expectation}Expectation {#Expectation}559,20362
### ExpectationSet {#ExpectationSet}ExpectationSet {#ExpectationSet}574,20712

build/_deps/googletest-src/docs/reference/matchers.md,906
# Matchers ReferenceMatchers Reference1,0
## WildcardWildcard27,1331
## Generic ComparisonGeneric Comparison34,1619
## Floating-Point Matchers {#FpMatchers}Floating-Point Matchers {#FpMatchers}65,3877
## String MatchersString Matchers89,5923
## Container MatchersContainer Matchers112,7440
## Member MatchersMember Matchers162,12544
## Matching the Result of a Function, Functor, or CallbackMatching the Result of a Function, Functor, or Callback196,14732
## Pointer MatchersPointer Matchers203,15150
## Multi-argument Matchers {#MultiArgMatchers}Multi-argument Matchers {#MultiArgMatchers}212,15857
## Composite MatchersComposite Matchers235,16759
## Adapters for MatchersAdapters for Matchers248,17882
## Using Matchers as Predicates {#MatchersAsPredicatesCheat}Using Matchers as Predicates {#MatchersAsPredicatesCheat}259,18495
## Defining MatchersDefining Matchers267,19049

build/_deps/googletest-src/docs/assets/css/style.scss,0

build/_deps/googletest-src/docs/pkgconfig.md,318
## Using GoogleTest from various build systemsUsing GoogleTest from various build systems1,0
### CMakeCMake17,580
### Help! pkg-config can't find GoogleTest!Help! pkg-config can't find GoogleTest!48,1714
### Using pkg-config in a cross-compilation settingUsing pkg-config in a cross-compilation setting72,2616

build/_deps/googletest-src/docs/_layouts/default.html,294
        <h1><a href="{{ "/" | relative_url }}">{{ site.title | default: "Documentation" }}</a></{{ site.title | default: "Documentation" }}23,885
      <input type="checkbox" id="nav-toggle" class="nav-toggle">nav-toggle25,998
        <h2>{{ item.section }}</h2>{{ item.section }}31,1225

build/_deps/googletest-src/docs/community_created_documentation.md,70
# Community-Created DocumentationCommunity-Created Documentation1,0

build/_deps/googletest-src/docs/faq.md,5404
# GoogleTest FAQGoogleTest FAQ1,0
## Why should test suite names and test names not contain underscore?Why should test suite names and test names not contain underscore?3,18
## Why does GoogleTest support `EXPECT_EQ(NULL, ptr)` and `ASSERT_EQ(NULL, ptr)` but not `EXPECTWhy does GoogleTest support `EXPECT_EQ(NULL, ptr)` and `ASSERT_EQ(NULL, ptr)` but not `EXPECT_NE(NULL, ptr)` and `ASSERT_NE(NULL, ptr)`?61,2463
## I need to test that different implementations of an interface satisfy some common requirementI need to test that different implementations of an interface satisfy some common requirements. Should I use typed tests or value-parameterized tests?97,4530
## I got some run-time errors about invalid proto descriptors when using `ProtocolMessageEquals`I got some run-time errors about invalid proto descriptors when using `ProtocolMessageEquals`. Help!131,6679
## My death test modifies some state, but the change seems lost after the death test finishes. WMy death test modifies some state, but the change seems lost after the death test finishes. Why?152,7652
## EXPECT_EQ(htonl(blah), blah_blah) generates weird compiler errors in opt mode. Is this a GoogEXPECT_EQ(htonl(blah), blah_blah) generates weird compiler errors in opt mode. Is this a GoogleTest bug?165,8347
## The compiler complains about "undefined references" to some static const member variables, buThe compiler complains about "undefined references" to some static const member variables, but I did define them in the class body. What's wrong?183,9270
## Can I derive a test fixture from another?Can I derive a test fixture from another?218,10247
## My compiler complains "void value not ignored as it ought to be." What does this mean?My compiler complains "void value not ignored as it ought to be." What does this mean?272,12005
## My death test hangs (or seg-faults). How do I fix it?My death test hangs (or seg-faults). How do I fix it?279,12347
## Should I use the constructor/destructor of the test fixture or SetUp()/TearDown()? {#CtorVsSeShould I use the constructor/destructor of the test fixture or SetUp()/TearDown()? {#CtorVsSetUp}306,13781
## The compiler complains "no matching function to call" when I use ASSERT_PRED*. How do I fix iThe compiler complains "no matching function to call" when I use ASSERT_PRED*. How do I fix it?355,16843
## My compiler complains about "ignoring return value" when I call RUN_ALL_TESTS(). Why?My compiler complains about "ignoring return value" when I call RUN_ALL_TESTS(). Why?360,17043
## My compiler complains that a constructor (or destructor) cannot return a value. What's going My compiler complains that a constructor (or destructor) cannot return a value. What's going on?391,18136
## My SetUp() function is not called. Why?My SetUp() function is not called. Why?406,18746
## I have several test suites which share the same test fixture logic, do I have to define a newI have several test suites which share the same test fixture logic, do I have to define a new test fixture class for each of them? This seems pretty tedious.413,18955
## GoogleTest output is buried in a whole bunch of LOG messages. What do I do?GoogleTest output is buried in a whole bunch of LOG messages. What do I do?443,19579
## Why should I prefer test fixtures over global variables?Why should I prefer test fixtures over global variables?458,20101
## What can the statement argument in ASSERT_DEATH() be?What can the statement argument in ASSERT_DEATH() be?472,20782
## I have a fixture class `FooTest`, but `TEST_F(FooTest, Bar)` gives me error ``"no matching fuI have a fixture class `FooTest`, but `TEST_F(FooTest, Bar)` gives me error ``"no matching function for call to `FooTest::FooTest()'"``. Why?521,22246
## Why does ASSERT_DEATH complain about previous threads that were already joined?Why does ASSERT_DEATH complain about previous threads that were already joined?535,23126
## Why does GoogleTest require the entire test suite, instead of individual tests, to be named *Why does GoogleTest require the entire test suite, instead of individual tests, to be named *DeathTest when it uses ASSERT_DEATH?548,23848
## But I don't like calling my entire test suite \*DeathTest when it contains both death tests aBut I don't like calling my entire test suite \*DeathTest when it contains both death tests and non-death tests. What do I do?573,25024
## GoogleTest prints the LOG messages in a death test's child process only when the test fails. GoogleTest prints the LOG messages in a death test's child process only when the test fails. How can I see the LOG messages when the death test succeeds?591,25575
## The compiler complains about `no match for 'operator<<'` when I use an assertion. What gives?The compiler complains about `no match for 'operator<<'` when I use an assertion. What gives?602,26235
## How do I suppress the memory leak messages on Windows?How do I suppress the memory leak messages on Windows?612,26733
## How can my code detect if it is running in a test?How can my code detect if it is running in a test?621,27199
## How do I temporarily disable a test?How do I temporarily disable a test?642,28473
## Is it OK if I have two separate `TEST(Foo, Bar)` test methods defined in different namespacesIs it OK if I have two separate `TEST(Foo, Bar)` test methods defined in different namespaces?652,28903

build/_deps/googletest-src/docs/_config.yml,0

build/_deps/googletest-src/docs/advanced.md,5129
# Advanced googletest TopicsAdvanced googletest Topics1,0
## IntroductionIntroduction3,30
## More AssertionsMore Assertions11,393
### Explicit Success and FailureExplicit Success and Failure16,496
### Exception AssertionsException Assertions21,636
### Predicate Assertions for Better Error MessagesPredicate Assertions for Better Error Messages26,755
#### Using an Existing Boolean FunctionUsing an Existing Boolean Function40,1509
#### Using a Function That Returns an AssertionResultUsing a Function That Returns an AssertionResult48,1858
#### Using a Predicate-FormatterUsing a Predicate-Formatter135,4029
### Floating-Point ComparisonFloating-Point Comparison146,4528
#### Floating-Point Predicate-Format FunctionsFloating-Point Predicate-Format Functions151,4661
### Asserting Using gMock MatchersAsserting Using gMock Matchers170,5242
### More String AssertionsMore String Assertions175,5365
### Windows HRESULT assertionsWindows HRESULT assertions193,5908
### Type AssertionsType Assertions198,6036
### Assertion PlacementAssertion Placement238,7076
## Skipping test executionSkipping test execution275,9131
## Teaching googletest How to Print Your ValuesTeaching googletest How to Print Your Values307,10083
## Death TestsDeath Tests385,12733
### How to Write a Death TestHow to Write a Death Test407,13919
### Death Test NamingDeath Test Naming457,15499
### Regular Expression SyntaxRegular Expression Syntax483,16182
### How It WorksHow It Works528,18459
### Death Tests And ThreadsDeath Tests And Threads533,18561
### Death Test StylesDeath Test Styles555,19672
### CaveatsCaveats591,20807
## Using Assertions in Sub-routinesUsing Assertions in Sub-routines617,22033
### Adding Traces to AssertionsAdding Traces to Assertions626,22390
### Propagating Fatal FailuresPropagating Fatal Failures704,25032
#### Asserting on Subroutines with an exceptionAsserting on Subroutines with an exception734,25940
#### Asserting on SubroutinesAsserting on Subroutines756,26595
#### Checking for Failures in the Current TestChecking for Failures in the Current Test786,27620
## Logging Additional InformationLogging Additional Information825,28619
## Sharing Resources Between Tests in the Same Test SuiteSharing Resources Between Tests in the Same Test Suite864,30153
## Global Set-Up and Tear-DownGlobal Set-Up and Tear-Down950,33490
## Value-Parameterized TestsValue-Parameterized Tests1008,35768
### How to Write Value-Parameterized TestsHow to Write Value-Parameterized Tests1022,36409
### Creating Value-Parameterized Abstract TestsCreating Value-Parameterized Abstract Tests1153,41665
### Specifying Names for Value-Parameterized Test ParametersSpecifying Names for Value-Parameterized Test Parameters1177,43007
## Typed TestsTyped Tests1232,45129
## Type-Parameterized TestsType-Parameterized Tests1304,47623
## Testing Private CodeTesting Private Code1383,50216
## "Catching" Failures"Catching" Failures1496,54174
## Registering tests programmaticallyRegistering tests programmatically1545,55948
## Getting the Current Test's NameGetting the Current Test's Name1619,58363
## Extending googletest by Handling Test EventsExtending googletest by Handling Test Events1646,59460
### Defining Event ListenersDefining Event Listeners1656,60037
### Using Event ListenersUsing Event Listeners1706,62053
### Generating Failures in ListenersGenerating Failures in Listeners1751,63910
## Running Test Programs: Advanced OptionsRunning Test Programs: Advanced Options1770,64785
### Selecting TestsSelecting Tests1783,65378
#### Listing Test NamesListing Test Names1785,65399
#### Running a Subset of the TestsRunning a Subset of the Tests1803,65864
#### Stop test execution upon first failureStop test execution upon first failure1837,67616
#### Temporarily Disabling TestsTemporarily Disabling Tests1845,68054
#### Temporarily Enabling Disabled TestsTemporarily Enabling Disabled Tests1879,69260
### Repeating the TestsRepeating the Tests1887,69615
### Shuffling the TestsShuffling the Tests1919,70878
### Distributing Test Functions to Multiple MachinesDistributing Test Functions to Multiple Machines1937,71794
### Controlling Test OutputControlling Test Output1989,74167
#### Colored Terminal OutputColored Terminal Output1991,74196
#### Suppressing test passesSuppressing test passes2022,75590
#### Suppressing the Elapsed TimeSuppressing the Elapsed Time2028,75843
#### Suppressing UTF-8 Text OutputSuppressing UTF-8 Text Output2034,76091
#### Generating an XML ReportGenerating an XML Report2043,76552
#### Generating a JSON ReportGenerating a JSON Report2128,79916
### Controlling How Failures Are ReportedControlling How Failures Are Reported2338,84681
#### Detecting Test Premature ExitDetecting Test Premature Exit2340,84724
#### Turning Assertion Failures into Break-PointsTurning Assertion Failures into Break-Points2351,85234
#### Disabling Catching Test-Thrown ExceptionsDisabling Catching Test-Thrown Exceptions2361,85679
### Sanitizer IntegrationSanitizer Integration2376,86487

build/_deps/googletest-src/docs/gmock_faq.md,3406
# Legacy gMock FAQLegacy gMock FAQ1,0
### When I call a method on my mock object, the method for the real object is invoked instead. WWhen I call a method on my mock object, the method for the real object is invoked instead. What's the problem?3,20
### Can I mock a variadic function?Can I mock a variadic function?8,303
### MSVC gives me warning C4301 or C4373 when I define a mock method with a const parameter. WhyMSVC gives me warning C4301 or C4373 when I define a mock method with a const parameter. Why?26,1141
### I can't figure out why gMock thinks my expectations are not satisfied. What should I do?I can't figure out why gMock thinks my expectations are not satisfied. What should I do?82,2907
### My program crashed and `ScopedMockLog` spit out tons of messages. Is it a gMock bug?My program crashed and `ScopedMockLog` spit out tons of messages. Is it a gMock bug?94,3578
### How can I assert that a function is NEVER called?How can I assert that a function is NEVER called?116,4413
### I have a failed test where gMock tells me TWICE that a particular expectation is not satisfiI have a failed test where gMock tells me TWICE that a particular expectation is not satisfied. Isn't this redundant?125,4548
### I get a heapcheck failure when using a mock object, but using a real object is fine. What caI get a heapcheck failure when using a mock object, but using a real object is fine. What can be wrong?137,5205
### The "newer expectations override older ones" rule makes writing expectations awkward. Why doThe "newer expectations override older ones" rule makes writing expectations awkward. Why does gMock do that?170,6005
### gMock prints a warning when a function without EXPECT_CALL is called, even if I have set itsgMock prints a warning when a function without EXPECT_CALL is called, even if I have set its behavior using ON_CALL. Would it be reasonable not to show the warning in this case?235,8201
### How can I delete the mock function's argument in an action?How can I delete the mock function's argument in an action?272,9547
### How can I perform an arbitrary action on a mock function's argument?How can I perform an arbitrary action on a mock function's argument?287,9947
### My code calls a static/global function. Can I mock it?My code calls a static/global function. Can I mock it?305,10513
### My mock object needs to do complex stuff. It's a lot of pain to specify the actions. gMock sMy mock object needs to do complex stuff. It's a lot of pain to specify the actions. gMock sucks!319,11131
### I got a warning "Uninteresting function call encountered - default action taken.." Should I I got a warning "Uninteresting function call encountered - default action taken.." Should I panic?344,12503
### I want to define a custom action. Should I use Invoke() or implement the ActionInterface intI want to define a custom action. Should I use Invoke() or implement the ActionInterface interface?362,13474
### I use SetArgPointee() in WillOnce(), but gcc complains about "conflicting return type specifI use SetArgPointee() in WillOnce(), but gcc complains about "conflicting return type specified". What does it mean?375,14145
### I have a huge mock class, and Microsoft Visual C++ runs out of memory when compiling it. WhaI have a huge mock class, and Microsoft Visual C++ runs out of memory when compiling it. What can I do?386,14683

build/_deps/googletest-src/docs/quickstart-bazel.md,311
# Quickstart: Building with BazelQuickstart: Building with Bazel1,0
## PrerequisitesPrerequisites7,242
## Set up a Bazel workspaceSet up a Bazel workspace26,886
## Create and run a binaryCreate and run a binary67,2476
[  PASSED  ] 1 test.[  PASSED  ] 1 test.127,4427
## Next stepsNext steps142,4964

build/_deps/googletest-src/docs/_sass/main.scss,1491
$sidebar-width: 260px;sidebar-width5,179
.sidebar {sidebar12,243
.sidebar h1 {sidebar23,409
.sidebar h2 {sidebar27,446
.sidebar .header {sidebar36,604
.sidebar .header {header36,604
.sidebar .header a {sidebar44,709
.sidebar .header a {header44,709
.sidebar .nav-toggle {sidebar49,780
.sidebar .nav-toggle {nav-toggle49,780
.sidebar .expander {sidebar53,823
.sidebar .expander {expander53,823
.sidebar .expander .arrow {sidebar63,962
.sidebar .expander .arrow {expander63,962
.sidebar .expander .arrow {arrow63,962
.sidebar nav {sidebar74,1175
.sidebar nav ul {sidebar78,1208
  li.active {active97,1457
.main {main107,1593
.main .main-inner {main112,1675
.main .main-inner {main-inner112,1675
.main .footer {main117,1742
.main .footer {footer117,1742
.main table th {main122,1790
.main .callout {main126,1830
.main .callout {callout126,1830
  &.important {important134,1943
  &.note {note140,2053
  &.tip {tip146,2160
  &.warning {warning152,2262
.main .good pre {main159,2366
.main .good pre {good159,2366
.main .bad pre {main163,2424
.main .bad pre {bad163,2424
  .sidebar {sidebar172,2552
  .sidebar .expander {sidebar178,2629
  .sidebar .expander {expander178,2629
  .sidebar nav {sidebar182,2677
  .sidebar .nav-toggle:checked {sidebar187,2736
  .sidebar .nav-toggle:checked {nav-toggle187,2736
    & + .expander .arrow {expander192,2810
    & + .expander .arrow {arrow192,2810
  .main {main197,2882

build/_deps/googletest-src/docs/index.md,108
# GoogleTest User's GuideGoogleTest User's Guide1,0
## Welcome to GoogleTest!Welcome to GoogleTest!3,27

build/_deps/googletest-subbuild/CMakeLists.txt,61
project(googletest-populate NONE)googletest-populate16,677

build/_deps/googletest-subbuild/cmake_install.cmake,608
  set(CMAKE_INSTALL_PREFIX "/usr/local")CMAKE_INSTALL_PREFIX5,159
    set(CMAKE_INSTALL_CONFIG_NAME "")CMAKE_INSTALL_CONFIG_NAME15,492
    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")CMAKE_INSTALL_COMPONENT24,770
    set(CMAKE_INSTALL_COMPONENT)CMAKE_INSTALL_COMPONENT26,827
  set(CMAKE_INSTALL_SO_NO_EXE "0")CMAKE_INSTALL_SO_NO_EXE32,974
  set(CMAKE_CROSSCOMPILING "FALSE")CMAKE_CROSSCOMPILING37,1108
  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")CMAKE_INSTALL_MANIFEST41,1181
  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")CMAKE_INSTALL_MANIFEST43,1268

build/_deps/googletest-subbuild/googletest-populate-prefix/tmp/googletest-populate-mkdirs.cmake,41
set(configSubDirs )configSubDirs16,874

build/_deps/googletest-subbuild/googletest-populate-prefix/tmp/googletest-populate-cfgcmd.txt,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-mkdir,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/download-googletest-populate.cmake,712
function(check_file_hash has_hash hash_is_good)check_file_hash6,180
function(sleep_before_download attempt)sleep_before_download41,1393
  set(sleep_seconds 0)sleep_seconds51,1559
    set(sleep_seconds 5)sleep_seconds54,1605
    set(sleep_seconds 5)sleep_seconds56,1656
    set(sleep_seconds 15)sleep_seconds58,1707
    set(sleep_seconds 60)sleep_seconds60,1759
    set(sleep_seconds 90)sleep_seconds62,1811
    set(sleep_seconds 300)sleep_seconds64,1863
    set(sleep_seconds 1200)sleep_seconds66,1899
set(retry_number 5)retry_number104,3710
set(download_retry_codes 7 6 8 15 28)download_retry_codes111,3961
set(skip_url_list)skip_url_list112,3999
set(status_code)status_code113,4018

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-patch-info.txt,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-test,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-install,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-update,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-build,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/verify-googletest-populate.cmake,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-download,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-update-info.txt,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-done,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-configure,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-urlinfo.txt,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/extract-googletest-populate.cmake,137
set(i 1234)i22,725
set(ut_dir "${directory}/../ex-googletest-populate${i}")ut_dir26,833
  set(contents "${ut_dir}")contents50,1517

build/_deps/googletest-subbuild/googletest-populate-prefix/src/googletest-populate-stamp/googletest-populate-patch,0

build/_deps/googletest-subbuild/googletest-populate-prefix/src/03597a01ee50ed33e9dfd640b249b4be3799d395.zip,0

build/_deps/googletest-subbuild/Makefile,1257
default_target: alldefault_target5,163
% : %,v%18,515
% : RCS/%%21,560
% : RCS/%,v%24,607
% : SCCS/s.%%27,656
% : s.%%30,706
$(VERBOSE)MAKESILENT = -s$(VERBOSE)MAKESILENT35,803
$(VERBOSE).SILENT:$(VERBOSE).SILENT38,870
cmake_force:cmake_force41,929
SHELL = /bin/shSHELL48,1131
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND51,1172
RM = /usr/bin/cmake -E rm -fRM54,1236
EQUALS = =EQUALS57,1301
EQUALS = =EQUALS57,1301
CMAKE_SOURCE_DIR = /home/kqx/Documents/Project/ray/build/_deps/googletest-subbuildCMAKE_SOURCE_DIR60,1370
CMAKE_BINARY_DIR = /home/kqx/Documents/Project/ray/build/_deps/googletest-subbuildCMAKE_BINARY_DIR63,1510
edit_cache:edit_cache69,1753
edit_cache/fast: edit_cacheedit_cache/fast75,1986
rebuild_cache:rebuild_cache79,2084
rebuild_cache/fast: rebuild_cacherebuild_cache/fast85,2365
all: cmake_check_build_systemall89,2450
clean:clean96,2896
clean/fast: cleanclean/fast101,2996
preinstall: allpreinstall105,3071
preinstall/fast:preinstall/fast110,3202
depend:depend115,3319
googletest-populate: cmake_check_build_systemgoogletest-populate123,3613
googletest-populate/fast:googletest-populate/fast128,3786
help:help133,3974
cmake_check_build_system:cmake_check_build_system151,4552

build/_deps/googletest-subbuild/CMakeCache.txt,0

build/_deps/googletest-subbuild/CMakeFiles/CMakeConfigureLog.yaml,0

build/_deps/googletest-subbuild/CMakeFiles/Makefile2,0

build/_deps/googletest-subbuild/CMakeFiles/CMakeRuleHashes.txt,0

build/_deps/googletest-subbuild/CMakeFiles/Makefile.cmake,310
set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")CMAKE_DEPENDS_GENERATOR5,125
set(CMAKE_MAKEFILE_DEPENDSCMAKE_MAKEFILE_DEPENDS8,237
set(CMAKE_MAKEFILE_OUTPUTSCMAKE_MAKEFILE_OUTPUTS32,1424
set(CMAKE_MAKEFILE_PRODUCTSCMAKE_MAKEFILE_PRODUCTS38,1539
set(CMAKE_DEPEND_INFO_FILESCMAKE_DEPEND_INFO_FILES50,2272

build/_deps/googletest-subbuild/CMakeFiles/googletest-populate.dir/build.make,0

build/_deps/googletest-subbuild/CMakeFiles/googletest-populate.dir/compiler_depend.ts,0

build/_deps/googletest-subbuild/CMakeFiles/googletest-populate.dir/Labels.json,1509
		{04,19
			"file" : "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuild/CMakeFiles/googletefile5,23
		{17,137
			"file" : "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuild/CMakeFiles/googletefile8,141
		{210,260
			"file" : "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuild/CMakeFiles/googletefile11,264
		{313,392
			"file" : "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuild/googletest-populatefile14,396
		{416,567
			"file" : "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuild/googletest-populatefile17,571
		{519,746
			"file" : "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuild/googletest-populatefile20,750
		{622,924
			"file" : "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuild/googletest-populatefile23,928
		{725,1101
			"file" : "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuild/googletest-populatefile26,1105
		{828,1276
			"file" : "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuild/googletest-populatefile29,1280
		{931,1451
			"file" : "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuild/googletest-populatefile32,1455
		{1034,1625
			"file" : "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuild/googletest-populatefile35,1629
	"sources" : sources2,2
			"googletest-populate"042,1838
		"labels" : labels40,1820
		"name" : "googletest-populate"name44,1868
	"target" : target38,1804

build/_deps/googletest-subbuild/CMakeFiles/googletest-populate.dir/cmake_clean.cmake,0

build/_deps/googletest-subbuild/CMakeFiles/googletest-populate.dir/Labels.txt,0

build/_deps/googletest-subbuild/CMakeFiles/googletest-populate.dir/progress.make,0

build/_deps/googletest-subbuild/CMakeFiles/googletest-populate.dir/compiler_depend.make,0

build/_deps/googletest-subbuild/CMakeFiles/googletest-populate.dir/DependInfo.cmake,373
set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)CMAKE_DEPENDS_IN_PROJECT_ONLY3,42
set(CMAKE_DEPENDS_LANGUAGESCMAKE_DEPENDS_LANGUAGES6,149
set(CMAKE_DEPENDS_DEPENDENCY_FILESCMAKE_DEPENDS_DEPENDENCY_FILES10,230
set(CMAKE_Fortran_TARGET_LINKED_INFO_FILESCMAKE_Fortran_TARGET_LINKED_INFO_FILES14,338
set(CMAKE_Fortran_TARGET_MODULE_DIR "")CMAKE_Fortran_TARGET_MODULE_DIR18,421

build/_deps/googletest-subbuild/CMakeFiles/progress.marks,0

build/_deps/googletest-subbuild/CMakeFiles/CMakeDirectoryInformation.cmake,691
set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuCMAKE_RELATIVE_PATH_TOP_SOURCE5,144
set(CMAKE_RELATIVE_PATH_TOP_BINARY "/home/kqx/Documents/Project/ray/build/_deps/googletest-subbuCMAKE_RELATIVE_PATH_TOP_BINARY6,246
set(CMAKE_FORCE_UNIX_PATHS 1)CMAKE_FORCE_UNIX_PATHS9,385
set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")CMAKE_C_INCLUDE_REGEX_SCAN13,486
set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")CMAKE_C_INCLUDE_REGEX_COMPLAIN14,525
set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})CMAKE_CXX_INCLUDE_REGEX_SCAN15,566
set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})CMAKE_CXX_INCLUDE_REGEX_COMPLAIN16,630

build/_deps/googletest-subbuild/CMakeFiles/googletest-populate-complete,0

build/_deps/googletest-subbuild/CMakeFiles/cmake.check_cache,0

build/_deps/googletest-subbuild/CMakeFiles/3.27.4/CMakeSystem.cmake,672
set(CMAKE_HOST_SYSTEM "Linux-5.15.128-1-MANJARO")CMAKE_HOST_SYSTEM1,0
set(CMAKE_HOST_SYSTEM_NAME "Linux")CMAKE_HOST_SYSTEM_NAME2,50
set(CMAKE_HOST_SYSTEM_VERSION "5.15.128-1-MANJARO")CMAKE_HOST_SYSTEM_VERSION3,86
set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")CMAKE_HOST_SYSTEM_PROCESSOR4,138
set(CMAKE_SYSTEM "Linux-5.15.128-1-MANJARO")CMAKE_SYSTEM8,183
set(CMAKE_SYSTEM_NAME "Linux")CMAKE_SYSTEM_NAME9,228
set(CMAKE_SYSTEM_VERSION "5.15.128-1-MANJARO")CMAKE_SYSTEM_VERSION10,259
set(CMAKE_SYSTEM_PROCESSOR "x86_64")CMAKE_SYSTEM_PROCESSOR11,306
set(CMAKE_CROSSCOMPILING "FALSE")CMAKE_CROSSCOMPILING13,344
set(CMAKE_SYSTEM_LOADED 1)CMAKE_SYSTEM_LOADED15,379

build/_deps/googletest-subbuild/CMakeFiles/TargetDirectories.txt,0

build/Makefile,11475
default_target: alldefault_target5,163
% : %,v%18,515
% : RCS/%%21,560
% : RCS/%,v%24,607
% : SCCS/s.%%27,656
% : s.%%30,706
$(VERBOSE)MAKESILENT = -s$(VERBOSE)MAKESILENT35,803
$(VERBOSE).SILENT:$(VERBOSE).SILENT38,870
cmake_force:cmake_force41,929
SHELL = /bin/shSHELL48,1131
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND51,1172
RM = /usr/bin/cmake -E rm -fRM54,1236
EQUALS = =EQUALS57,1301
EQUALS = =EQUALS57,1301
CMAKE_SOURCE_DIR = /home/kqx/Documents/Project/rayCMAKE_SOURCE_DIR60,1370
CMAKE_BINARY_DIR = /home/kqx/Documents/Project/ray/buildCMAKE_BINARY_DIR63,1478
test:test69,1689
test/fast: testtest/fast75,1880
edit_cache:edit_cache79,1957
edit_cache/fast: edit_cacheedit_cache/fast85,2190
rebuild_cache:rebuild_cache89,2288
rebuild_cache/fast: rebuild_cacherebuild_cache/fast95,2569
list_install_components:list_install_components99,2686
list_install_components/fast: list_install_componentslist_install_components/fast104,2917
install: preinstallinstall108,3048
install/fast: preinstall/fastinstall/fast114,3254
install/local: preinstallinstall/local120,3481
install/local/fast: preinstall/fastinstall/local/fast126,3750
install/strip: preinstallinstall/strip132,4034
install/strip/fast: preinstall/fastinstall/strip/fast138,4297
all: cmake_check_build_systemall144,4553
clean:clean151,4921
clean/fast: cleanclean/fast156,5021
preinstall: allpreinstall160,5096
preinstall/fast:preinstall/fast165,5227
depend:depend170,5344
global_include: cmake_check_build_systemglobal_include178,5633
global_include/fast:global_include/fast183,5791
raylib: cmake_check_build_systemraylib191,6090
raylib/fast:raylib/fast196,6224
main: cmake_check_build_systemmain204,6489
main/fast:main/fast209,6617
tracer_test: cmake_check_build_systemtracer_test217,6881
tracer_test/fast:tracer_test/fast222,7030
global_include_test: cmake_check_build_systemglobal_include_test230,7330
global_include_test/fast:global_include_test/fast235,7503
gmock: cmake_check_build_systemgmock243,7821
gmock/fast:gmock/fast248,7952
gmock_main: cmake_check_build_systemgmock_main256,8287
gmock_main/fast:gmock_main/fast261,8433
gtest: cmake_check_build_systemgtest269,8783
gtest/fast:gtest/fast274,8914
gtest_main: cmake_check_build_systemgtest_main282,9249
gtest_main/fast:gtest_main/fast287,9395
include/args.o: include/args.cpp.oinclude/args.o291,9601
include/args.cpp.o:include/args.cpp.o295,9694
include/args.i: include/args.cpp.iinclude/args.i299,9859
include/args.cpp.i:include/args.cpp.i303,9956
include/args.s: include/args.cpp.sinclude/args.s307,10121
include/args.cpp.s:include/args.cpp.s311,10222
include/global_config.o: include/global_config.cpp.oinclude/global_config.o315,10387
include/global_config.cpp.o:include/global_config.cpp.o319,10507
include/global_config.i: include/global_config.cpp.iinclude/global_config.i323,10699
include/global_config.cpp.i:include/global_config.cpp.i327,10823
include/global_config.s: include/global_config.cpp.sinclude/global_config.s331,11015
include/global_config.cpp.s:include/global_config.cpp.s335,11143
include/test/arg-parser-test.o: include/test/arg-parser-test.cpp.oinclude/test/arg-parser-test.o339,11335
include/test/arg-parser-test.cpp.o:include/test/arg-parser-test.cpp.o343,11476
include/test/arg-parser-test.i: include/test/arg-parser-test.cpp.iinclude/test/arg-parser-test.i347,11699
include/test/arg-parser-test.cpp.i:include/test/arg-parser-test.cpp.i351,11844
include/test/arg-parser-test.s: include/test/arg-parser-test.cpp.sinclude/test/arg-parser-test.s355,12067
include/test/arg-parser-test.cpp.s:include/test/arg-parser-test.cpp.s359,12216
include/test/global-config-test.o: include/test/global-config-test.cpp.oinclude/test/global-config-test.o363,12439
include/test/global-config-test.cpp.o:include/test/global-config-test.cpp.o367,12589
include/test/global-config-test.i: include/test/global-config-test.cpp.iinclude/test/global-config-test.i371,12821
include/test/global-config-test.cpp.i:include/test/global-config-test.cpp.i375,12975
include/test/global-config-test.s: include/test/global-config-test.cpp.sinclude/test/global-config-test.s379,13207
include/test/global-config-test.cpp.s:include/test/global-config-test.cpp.s383,13365
source.o: source.cpp.osource.o387,13597
source.cpp.o:source.cpp.o391,13672
source.i: source.cpp.isource.i395,13799
source.cpp.i:source.cpp.i399,13878
source.s: source.cpp.ssource.s403,14005
source.cpp.s:source.cpp.s407,14088
tracer/arch.o: tracer/arch.cpp.otracer/arch.o411,14215
tracer/arch.cpp.o:tracer/arch.cpp.o415,14305
tracer/arch.i: tracer/arch.cpp.itracer/arch.i419,14451
tracer/arch.cpp.i:tracer/arch.cpp.i423,14545
tracer/arch.s: tracer/arch.cpp.stracer/arch.s427,14691
tracer/arch.cpp.s:tracer/arch.cpp.s431,14789
tracer/bvh.o: tracer/bvh.cpp.otracer/bvh.o435,14935
tracer/bvh.cpp.o:tracer/bvh.cpp.o439,15022
tracer/bvh.i: tracer/bvh.cpp.itracer/bvh.i443,15165
tracer/bvh.cpp.i:tracer/bvh.cpp.i447,15256
tracer/bvh.s: tracer/bvh.cpp.stracer/bvh.s451,15399
tracer/bvh.cpp.s:tracer/bvh.cpp.s455,15494
tracer/camera.o: tracer/camera.cpp.otracer/camera.o459,15637
tracer/camera.cpp.o:tracer/camera.cpp.o463,15733
tracer/camera.i: tracer/camera.cpp.itracer/camera.i467,15885
tracer/camera.cpp.i:tracer/camera.cpp.i471,15985
tracer/camera.s: tracer/camera.cpp.stracer/camera.s475,16137
tracer/camera.cpp.s:tracer/camera.cpp.s479,16241
tracer/materials/dielectric.o: tracer/materials/dielectric.cpp.otracer/materials/dielectric.o483,16393
tracer/materials/dielectric.cpp.o:tracer/materials/dielectric.cpp.o487,16531
tracer/materials/dielectric.i: tracer/materials/dielectric.cpp.itracer/materials/dielectric.i491,16725
tracer/materials/dielectric.cpp.i:tracer/materials/dielectric.cpp.i495,16867
tracer/materials/dielectric.s: tracer/materials/dielectric.cpp.stracer/materials/dielectric.s499,17061
tracer/materials/dielectric.cpp.s:tracer/materials/dielectric.cpp.s503,17207
tracer/materials/lambertian.o: tracer/materials/lambertian.cpp.otracer/materials/lambertian.o507,17401
tracer/materials/lambertian.cpp.o:tracer/materials/lambertian.cpp.o511,17539
tracer/materials/lambertian.i: tracer/materials/lambertian.cpp.itracer/materials/lambertian.i515,17733
tracer/materials/lambertian.cpp.i:tracer/materials/lambertian.cpp.i519,17875
tracer/materials/lambertian.s: tracer/materials/lambertian.cpp.stracer/materials/lambertian.s523,18069
tracer/materials/lambertian.cpp.s:tracer/materials/lambertian.cpp.s527,18215
tracer/materials/metal.o: tracer/materials/metal.cpp.otracer/materials/metal.o531,18409
tracer/materials/metal.cpp.o:tracer/materials/metal.cpp.o535,18532
tracer/materials/metal.i: tracer/materials/metal.cpp.itracer/materials/metal.i539,18711
tracer/materials/metal.cpp.i:tracer/materials/metal.cpp.i543,18838
tracer/materials/metal.s: tracer/materials/metal.cpp.stracer/materials/metal.s547,19017
tracer/materials/metal.cpp.s:tracer/materials/metal.cpp.s551,19148
tracer/renderer.o: tracer/renderer.cpp.otracer/renderer.o555,19327
tracer/renderer.cpp.o:tracer/renderer.cpp.o559,19429
tracer/renderer.i: tracer/renderer.cpp.itracer/renderer.i563,19587
tracer/renderer.cpp.i:tracer/renderer.cpp.i567,19693
tracer/renderer.s: tracer/renderer.cpp.stracer/renderer.s571,19851
tracer/renderer.cpp.s:tracer/renderer.cpp.s575,19961
tracer/shapes/sphere.o: tracer/shapes/sphere.cpp.otracer/shapes/sphere.o579,20119
tracer/shapes/sphere.cpp.o:tracer/shapes/sphere.cpp.o583,20236
tracer/shapes/sphere.i: tracer/shapes/sphere.cpp.itracer/shapes/sphere.i587,20409
tracer/shapes/sphere.cpp.i:tracer/shapes/sphere.cpp.i591,20530
tracer/shapes/sphere.s: tracer/shapes/sphere.cpp.stracer/shapes/sphere.s595,20703
tracer/shapes/sphere.cpp.s:tracer/shapes/sphere.cpp.s599,20828
tracer/test/bvh-test.o: tracer/test/bvh-test.cpp.otracer/test/bvh-test.o603,21001
tracer/test/bvh-test.cpp.o:tracer/test/bvh-test.cpp.o607,21118
tracer/test/bvh-test.i: tracer/test/bvh-test.cpp.itracer/test/bvh-test.i611,21301
tracer/test/bvh-test.cpp.i:tracer/test/bvh-test.cpp.i615,21422
tracer/test/bvh-test.s: tracer/test/bvh-test.cpp.stracer/test/bvh-test.s619,21605
tracer/test/bvh-test.cpp.s:tracer/test/bvh-test.cpp.s623,21730
tracer/test/interval-test.o: tracer/test/interval-test.cpp.otracer/test/interval-test.o627,21913
tracer/test/interval-test.cpp.o:tracer/test/interval-test.cpp.o631,22045
tracer/test/interval-test.i: tracer/test/interval-test.cpp.itracer/test/interval-test.i635,22243
tracer/test/interval-test.cpp.i:tracer/test/interval-test.cpp.i639,22379
tracer/test/interval-test.s: tracer/test/interval-test.cpp.stracer/test/interval-test.s643,22577
tracer/test/interval-test.cpp.s:tracer/test/interval-test.cpp.s647,22717
tracer/test/sphere-test.o: tracer/test/sphere-test.cpp.otracer/test/sphere-test.o651,22915
tracer/test/sphere-test.cpp.o:tracer/test/sphere-test.cpp.o655,23041
tracer/test/sphere-test.i: tracer/test/sphere-test.cpp.itracer/test/sphere-test.i659,23233
tracer/test/sphere-test.cpp.i:tracer/test/sphere-test.cpp.i663,23363
tracer/test/sphere-test.s: tracer/test/sphere-test.cpp.stracer/test/sphere-test.s667,23555
tracer/test/sphere-test.cpp.s:tracer/test/sphere-test.cpp.s671,23689
tracer/util/aabb.o: tracer/util/aabb.cpp.otracer/util/aabb.o675,23881
tracer/util/aabb.cpp.o:tracer/util/aabb.cpp.o679,23986
tracer/util/aabb.i: tracer/util/aabb.cpp.itracer/util/aabb.i683,24147
tracer/util/aabb.cpp.i:tracer/util/aabb.cpp.i687,24256
tracer/util/aabb.s: tracer/util/aabb.cpp.stracer/util/aabb.s691,24417
tracer/util/aabb.cpp.s:tracer/util/aabb.cpp.s695,24530
tracer/util/color.o: tracer/util/color.cpp.otracer/util/color.o699,24691
tracer/util/color.cpp.o:tracer/util/color.cpp.o703,24799
tracer/util/color.i: tracer/util/color.cpp.itracer/util/color.i707,24963
tracer/util/color.cpp.i:tracer/util/color.cpp.i711,25075
tracer/util/color.s: tracer/util/color.cpp.stracer/util/color.s715,25239
tracer/util/color.cpp.s:tracer/util/color.cpp.s719,25355
tracer/util/random.o: tracer/util/random.cpp.otracer/util/random.o723,25519
tracer/util/random.cpp.o:tracer/util/random.cpp.o727,25630
tracer/util/random.i: tracer/util/random.cpp.itracer/util/random.i731,25797
tracer/util/random.cpp.i:tracer/util/random.cpp.i735,25912
tracer/util/random.s: tracer/util/random.cpp.stracer/util/random.s739,26079
tracer/util/random.cpp.s:tracer/util/random.cpp.s743,26198
tracer/util/ray.o: tracer/util/ray.cpp.otracer/util/ray.o747,26365
tracer/util/ray.cpp.o:tracer/util/ray.cpp.o751,26467
tracer/util/ray.i: tracer/util/ray.cpp.itracer/util/ray.i755,26625
tracer/util/ray.cpp.i:tracer/util/ray.cpp.i759,26731
tracer/util/ray.s: tracer/util/ray.cpp.stracer/util/ray.s763,26889
tracer/util/ray.cpp.s:tracer/util/ray.cpp.s767,26999
tracer/util/vector3.o: tracer/util/vector3.cpp.otracer/util/vector3.o771,27157
tracer/util/vector3.cpp.o:tracer/util/vector3.cpp.o775,27271
tracer/util/vector3.i: tracer/util/vector3.cpp.itracer/util/vector3.i779,27441
tracer/util/vector3.cpp.i:tracer/util/vector3.cpp.i783,27559
tracer/util/vector3.s: tracer/util/vector3.cpp.stracer/util/vector3.s787,27729
tracer/util/vector3.cpp.s:tracer/util/vector3.cpp.s791,27851
help:help796,28035
cmake_check_build_system:cmake_check_build_system890,31116

build/global_include_test[1]_include.cmake,0

build/Testing/Temporary/LastTest.log,0

build/Testing/Temporary/CTestCostData.txt,0

build/CMakeCache.txt,0

build/global_include_test[1]_tests.cmake,131
set(  global_include_test_TESTS argParser.init argParser.parse argMarshaler.programname GlobalCoglobal_include_test_TESTS11,1710

build/CMakeFiles/tracer_test.dir/build.make,0

build/CMakeFiles/tracer_test.dir/compiler_depend.ts,0

build/CMakeFiles/tracer_test.dir/flags.make,0

build/CMakeFiles/tracer_test.dir/tracer/test/interval-test.cpp.o.d,0

build/CMakeFiles/tracer_test.dir/tracer/test/bvh-test.cpp.o.d,0

build/CMakeFiles/tracer_test.dir/tracer/test/sphere-test.cpp.o.d,0

build/CMakeFiles/tracer_test.dir/link.txt,0

build/CMakeFiles/tracer_test.dir/cmake_clean.cmake,0

build/CMakeFiles/tracer_test.dir/depend.make,0

build/CMakeFiles/tracer_test.dir/progress.make,0

build/CMakeFiles/tracer_test.dir/compiler_depend.make,0

build/CMakeFiles/tracer_test.dir/DependInfo.cmake,373
set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)CMAKE_DEPENDS_IN_PROJECT_ONLY3,42
set(CMAKE_DEPENDS_LANGUAGESCMAKE_DEPENDS_LANGUAGES6,149
set(CMAKE_DEPENDS_DEPENDENCY_FILESCMAKE_DEPENDS_DEPENDENCY_FILES10,230
set(CMAKE_Fortran_TARGET_LINKED_INFO_FILESCMAKE_Fortran_TARGET_LINKED_INFO_FILES17,905
set(CMAKE_Fortran_TARGET_MODULE_DIR "")CMAKE_Fortran_TARGET_MODULE_DIR21,988

build/CMakeFiles/tracer_test.dir/compiler_depend.internal,0

build/CMakeFiles/CMakeConfigureLog.yaml,0

build/CMakeFiles/Makefile2,0

build/CMakeFiles/Makefile.cmake,310
set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")CMAKE_DEPENDS_GENERATOR5,125
set(CMAKE_MAKEFILE_DEPENDSCMAKE_MAKEFILE_DEPENDS8,237
set(CMAKE_MAKEFILE_OUTPUTSCMAKE_MAKEFILE_OUTPUTS66,3268
set(CMAKE_MAKEFILE_PRODUCTSCMAKE_MAKEFILE_PRODUCTS72,3383
set(CMAKE_DEPEND_INFO_FILESCMAKE_DEPEND_INFO_FILES87,4159

build/CMakeFiles/progress.marks,0

build/CMakeFiles/CMakeDirectoryInformation.cmake,643
set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/home/kqx/Documents/Project/ray")CMAKE_RELATIVE_PATH_TOP_SOURCE5,144
set(CMAKE_RELATIVE_PATH_TOP_BINARY "/home/kqx/Documents/Project/ray/build")CMAKE_RELATIVE_PATH_TOP_BINARY6,214
set(CMAKE_FORCE_UNIX_PATHS 1)CMAKE_FORCE_UNIX_PATHS9,327
set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")CMAKE_C_INCLUDE_REGEX_SCAN13,428
set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")CMAKE_C_INCLUDE_REGEX_COMPLAIN14,467
set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})CMAKE_CXX_INCLUDE_REGEX_SCAN15,508
set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})CMAKE_CXX_INCLUDE_REGEX_COMPLAIN16,572

build/CMakeFiles/main.dir/build.make,0

build/CMakeFiles/main.dir/compiler_depend.ts,0

build/CMakeFiles/main.dir/flags.make,0

build/CMakeFiles/main.dir/link.txt,0

build/CMakeFiles/main.dir/cmake_clean.cmake,0

build/CMakeFiles/main.dir/depend.make,0

build/CMakeFiles/main.dir/progress.make,0

build/CMakeFiles/main.dir/source.cpp.o.d,0

build/CMakeFiles/main.dir/compiler_depend.make,0

build/CMakeFiles/main.dir/DependInfo.cmake,373
set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)CMAKE_DEPENDS_IN_PROJECT_ONLY3,42
set(CMAKE_DEPENDS_LANGUAGESCMAKE_DEPENDS_LANGUAGES6,149
set(CMAKE_DEPENDS_DEPENDENCY_FILESCMAKE_DEPENDS_DEPENDENCY_FILES10,230
set(CMAKE_Fortran_TARGET_LINKED_INFO_FILESCMAKE_Fortran_TARGET_LINKED_INFO_FILES15,463
set(CMAKE_Fortran_TARGET_MODULE_DIR "")CMAKE_Fortran_TARGET_MODULE_DIR19,546

build/CMakeFiles/main.dir/compiler_depend.internal,0

build/CMakeFiles/raylib.dir/build.make,0

build/CMakeFiles/raylib.dir/compiler_depend.ts,0

build/CMakeFiles/raylib.dir/flags.make,0

build/CMakeFiles/raylib.dir/tracer/renderer.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/materials/metal.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/materials/basic_material.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/materials/lambertian.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/materials/dielectric.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/camera.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/shapes/sphere.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/arch.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/util/aabb.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/util/ray.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/util/vector3.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/util/random.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/util/color.cpp.o.d,0

build/CMakeFiles/raylib.dir/tracer/bvh.cpp.o.d,0

build/CMakeFiles/raylib.dir/link.txt,0

build/CMakeFiles/raylib.dir/cmake_clean.cmake,0

build/CMakeFiles/raylib.dir/depend.make,0

build/CMakeFiles/raylib.dir/progress.make,0

build/CMakeFiles/raylib.dir/compiler_depend.make,0

build/CMakeFiles/raylib.dir/DependInfo.cmake,375
set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)CMAKE_DEPENDS_IN_PROJECT_ONLY3,42
set(CMAKE_DEPENDS_LANGUAGESCMAKE_DEPENDS_LANGUAGES6,149
set(CMAKE_DEPENDS_DEPENDENCY_FILESCMAKE_DEPENDS_DEPENDENCY_FILES10,230
set(CMAKE_Fortran_TARGET_LINKED_INFO_FILESCMAKE_Fortran_TARGET_LINKED_INFO_FILES27,2471
set(CMAKE_Fortran_TARGET_MODULE_DIR "")CMAKE_Fortran_TARGET_MODULE_DIR31,2554

build/CMakeFiles/raylib.dir/cmake_clean_target.cmake,0

build/CMakeFiles/raylib.dir/compiler_depend.internal,0

build/CMakeFiles/global_include.dir/build.make,0

build/CMakeFiles/global_include.dir/compiler_depend.ts,0

build/CMakeFiles/global_include.dir/flags.make,0

build/CMakeFiles/global_include.dir/include/args.cpp.o.d,0

build/CMakeFiles/global_include.dir/include/global_config.cpp.o.d,0

build/CMakeFiles/global_include.dir/link.txt,0

build/CMakeFiles/global_include.dir/cmake_clean.cmake,0

build/CMakeFiles/global_include.dir/depend.make,0

build/CMakeFiles/global_include.dir/progress.make,0

build/CMakeFiles/global_include.dir/compiler_depend.make,0

build/CMakeFiles/global_include.dir/DependInfo.cmake,373
set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)CMAKE_DEPENDS_IN_PROJECT_ONLY3,42
set(CMAKE_DEPENDS_LANGUAGESCMAKE_DEPENDS_LANGUAGES6,149
set(CMAKE_DEPENDS_DEPENDENCY_FILESCMAKE_DEPENDS_DEPENDENCY_FILES10,230
set(CMAKE_Fortran_TARGET_LINKED_INFO_FILESCMAKE_Fortran_TARGET_LINKED_INFO_FILES16,691
set(CMAKE_Fortran_TARGET_MODULE_DIR "")CMAKE_Fortran_TARGET_MODULE_DIR20,774

build/CMakeFiles/global_include.dir/cmake_clean_target.cmake,0

build/CMakeFiles/global_include.dir/compiler_depend.internal,0

build/CMakeFiles/cmake.check_cache,0

build/CMakeFiles/3.27.4/CMakeSystem.cmake,672
set(CMAKE_HOST_SYSTEM "Linux-5.15.128-1-MANJARO")CMAKE_HOST_SYSTEM1,0
set(CMAKE_HOST_SYSTEM_NAME "Linux")CMAKE_HOST_SYSTEM_NAME2,50
set(CMAKE_HOST_SYSTEM_VERSION "5.15.128-1-MANJARO")CMAKE_HOST_SYSTEM_VERSION3,86
set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")CMAKE_HOST_SYSTEM_PROCESSOR4,138
set(CMAKE_SYSTEM "Linux-5.15.128-1-MANJARO")CMAKE_SYSTEM8,183
set(CMAKE_SYSTEM_NAME "Linux")CMAKE_SYSTEM_NAME9,228
set(CMAKE_SYSTEM_VERSION "5.15.128-1-MANJARO")CMAKE_SYSTEM_VERSION10,259
set(CMAKE_SYSTEM_PROCESSOR "x86_64")CMAKE_SYSTEM_PROCESSOR11,306
set(CMAKE_CROSSCOMPILING "FALSE")CMAKE_CROSSCOMPILING13,344
set(CMAKE_SYSTEM_LOADED 1)CMAKE_SYSTEM_LOADED15,379

build/CMakeFiles/3.27.4/CompilerIdC/CMakeCCompilerId.c,17601
# define ID_VOID_MAINID_VOID_MAIN6,98
# define constconst10,197
# define volatilevolatile11,212
#  define __has_include(__has_include17,354
# define COMPILER_ID COMPILER_ID25,566
#  define SIMULATE_ID SIMULATE_ID27,618
#  define SIMULATE_ID SIMULATE_ID30,678
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR35,953
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR36,1012
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH38,1114
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH40,1185
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR43,1264
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR44,1319
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH47,1493
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK51,1631
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR55,1753
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR56,1806
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR59,1890
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR61,1962
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR64,2046
#  define SIMULATE_VERSION_PATCH SIMULATE_VERSION_PATCH67,2141
# define COMPILER_ID COMPILER_ID71,2304
# define SIMULATE_ID SIMULATE_ID73,2359
# define SIMULATE_ID SIMULATE_ID76,2416
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR83,2717
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR84,2780
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH85,2847
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR87,2920
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR88,2985
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH89,3054
# define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR93,3176
# define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR94,3228
# define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR97,3309
# define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR99,3379
# define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR102,3460
# define SIMULATE_VERSION_PATCH SIMULATE_VERSION_PATCH105,3552
# define COMPILER_ID COMPILER_ID109,3643
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR110,3676
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR111,3724
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH113,3814
# define COMPILER_ID COMPILER_ID117,3945
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR118,3980
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR119,4052
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH120,4124
# define COMPILER_ID COMPILER_ID123,4225
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR125,4285
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR126,4338
# define COMPILER_ID COMPILER_ID129,4445
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR131,4503
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR132,4558
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH134,4647
# define COMPILER_ID COMPILER_ID138,4738
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR140,4807
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR141,4871
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH143,4960
# define COMPILER_ID COMPILER_ID147,5050
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR150,5135
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR151,5188
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH152,5247
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR155,5341
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR156,5393
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH157,5451
# define COMPILER_ID COMPILER_ID161,5541
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR163,5592
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR164,5643
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH165,5698
# define COMPILER_ID COMPILER_ID168,5776
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR170,5837
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR171,5894
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH172,5956
# define COMPILER_ID COMPILER_ID175,6074
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR177,6124
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR178,6174
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH179,6228
# define COMPILER_ID COMPILER_ID182,6332
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR183,6364
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR184,6421
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH185,6478
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK186,6540
# define COMPILER_ID COMPILER_ID190,6652
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR191,6683
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR192,6738
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH193,6793
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK194,6853
# define COMPILER_ID COMPILER_ID198,6989
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR200,7038
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR201,7088
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH202,7142
# define COMPILER_ID COMPILER_ID205,7269
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR207,7325
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR208,7375
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH209,7429
# define COMPILER_ID COMPILER_ID212,7512
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR213,7541
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR214,7599
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH216,7697
# define COMPILER_ID COMPILER_ID220,7791
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR221,7818
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR222,7864
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH224,7950
# define COMPILER_ID COMPILER_ID228,8039
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR229,8067
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR230,8119
# define COMPILER_ID COMPILER_ID233,8211
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR235,8281
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR236,8350
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH237,8425
# define COMPILER_ID COMPILER_ID240,8532
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR241,8568
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR242,8619
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH243,8670
# define COMPILER_VERSION_INTERNAL_STR COMPILER_VERSION_INTERNAL_STR244,8726
# define COMPILER_ID COMPILER_ID248,8810
#   define COMPILER_VERSION COMPILER_VERSION250,8871
#   define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR252,8945
#   define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR253,8998
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH254,9051
#   define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL257,9145
#   define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL259,9231
# define COMPILER_ID COMPILER_ID264,9320
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR267,9412
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR268,9476
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH269,9544
# define COMPILER_ID COMPILER_ID273,9648
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR274,9679
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR275,9735
# define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL276,9792
# define COMPILER_ID COMPILER_ID279,9870
# define COMPILER_ID COMPILER_ID282,9924
# define COMPILER_ID COMPILER_ID285,9985
# define COMPILER_ID COMPILER_ID288,10067
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR291,10161
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR292,10224
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH293,10291
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR296,10397
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR297,10459
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH298,10525
# define COMPILER_ID COMPILER_ID303,10661
#  define SIMULATE_ID SIMULATE_ID305,10718
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR307,10755
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR308,10808
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH309,10861
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR312,10967
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR313,11020
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK315,11081
# define COMPILER_ID COMPILER_ID318,11202
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR319,11234
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR320,11303
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH321,11376
# define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL322,11449
# define COMPILER_ID COMPILER_ID325,11537
#  define SIMULATE_ID SIMULATE_ID327,11589
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR329,11626
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR330,11679
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH331,11732
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR334,11838
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR335,11891
# define COMPILER_ID COMPILER_ID339,12041
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR340,12068
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR341,12119
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH343,12198
#  define SIMULATE_ID SIMULATE_ID346,12308
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR347,12336
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR348,12383
#   define SIMULATE_VERSION_PATCH SIMULATE_VERSION_PATCH350,12471
# define COMPILER_ID COMPILER_ID355,12572
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR356,12599
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR358,12674
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH361,12769
# define COMPILER_ID COMPILER_ID365,12860
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR367,12912
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR368,12964
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH372,13103
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH375,13208
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK379,13311
# define COMPILER_ID COMPILER_ID383,13398
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR386,13490
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR387,13556
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH388,13622
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK389,13687
# define COMPILER_ID COMPILER_ID393,13820
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR395,13892
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR396,13950
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH397,14014
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL398,14069
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR400,14370
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR401,14424
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH402,14498
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL403,14551
# define COMPILER_ID COMPILER_ID407,14674
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR409,14737
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR410,14796
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH411,14855
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR414,14940
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR415,14987
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH416,15038
# define COMPILER_ID COMPILER_ID424,15306
# define COMPILER_ID COMPILER_ID427,15362
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";info_compiler434,15660
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";info_simulate436,15747
char const* qnxnto = "INFO" ":" "qnxnto[]";qnxnto440,15841
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";info_cray444,15936
#define STRINGIFY_HELPER(STRINGIFY_HELPER447,16011
#define STRINGIFY(X) STRINGIFY_STRINGIFY448,16042
# define PLATFORM_ID PLATFORM_ID452,16186
# define PLATFORM_ID PLATFORM_ID455,16240
# define PLATFORM_ID PLATFORM_ID458,16295
# define PLATFORM_ID PLATFORM_ID461,16353
# define PLATFORM_ID PLATFORM_ID464,16408
# define PLATFORM_ID PLATFORM_ID467,16501
# define PLATFORM_ID PLATFORM_ID470,16582
# define PLATFORM_ID PLATFORM_ID473,16661
# define PLATFORM_ID PLATFORM_ID476,16741
# define PLATFORM_ID PLATFORM_ID479,16810
# define PLATFORM_ID PLATFORM_ID482,16936
# define PLATFORM_ID PLATFORM_ID485,17007
# define PLATFORM_ID PLATFORM_ID488,17062
# define PLATFORM_ID PLATFORM_ID491,17153
# define PLATFORM_ID PLATFORM_ID494,17228
# define PLATFORM_ID PLATFORM_ID497,17320
# define PLATFORM_ID PLATFORM_ID500,17397
# define PLATFORM_ID PLATFORM_ID503,17495
# define PLATFORM_ID PLATFORM_ID506,17552
# define PLATFORM_ID PLATFORM_ID509,17609
# define PLATFORM_ID PLATFORM_ID512,17679
# define PLATFORM_ID PLATFORM_ID515,17751
# define PLATFORM_ID PLATFORM_ID518,17841
# define PLATFORM_ID PLATFORM_ID521,17939
# define PLATFORM_ID PLATFORM_ID524,18032
#  define PLATFORM_ID PLATFORM_ID528,18113
#  define PLATFORM_ID PLATFORM_ID531,18168
#  define PLATFORM_ID PLATFORM_ID534,18221
#  define PLATFORM_ID PLATFORM_ID537,18278
#  define PLATFORM_ID PLATFORM_ID540,18341
#  define PLATFORM_IDPLATFORM_ID543,18404
#  define PLATFORM_ID PLATFORM_ID548,18485
#  define PLATFORM_ID PLATFORM_ID551,18554
#  define PLATFORM_ID PLATFORM_ID555,18627
# define PLATFORM_IDPLATFORM_ID558,18686
#  define ARCHITECTURE_ID ARCHITECTURE_ID569,19026
#  define ARCHITECTURE_ID ARCHITECTURE_ID572,19087
#  define ARCHITECTURE_ID ARCHITECTURE_ID575,19168
#  define ARCHITECTURE_ID ARCHITECTURE_ID578,19225
#  define ARCHITECTURE_ID ARCHITECTURE_ID581,19283
#   define ARCHITECTURE_ID ARCHITECTURE_ID585,19359
#   define ARCHITECTURE_ID ARCHITECTURE_ID587,19415
#   define ARCHITECTURE_ID ARCHITECTURE_ID589,19459
#  define ARCHITECTURE_ID ARCHITECTURE_ID593,19545
#  define ARCHITECTURE_ID ARCHITECTURE_ID596,19601
#  define ARCHITECTURE_ID ARCHITECTURE_ID599,19668
#  define ARCHITECTURE_ID ARCHITECTURE_ID604,19754
#  define ARCHITECTURE_ID ARCHITECTURE_ID607,19811
#  define ARCHITECTURE_ID ARCHITECTURE_ID610,19878
#  define ARCHITECTURE_ID ARCHITECTURE_ID615,20006
#  define ARCHITECTURE_ID ARCHITECTURE_ID618,20065
#  define ARCHITECTURE_ID ARCHITECTURE_ID621,20126
#  define ARCHITECTURE_ID ARCHITECTURE_ID624,20189
#  define ARCHITECTURE_ID ARCHITECTURE_ID627,20252
#  define ARCHITECTURE_ID ARCHITECTURE_ID630,20314
#  define ARCHITECTURE_ID ARCHITECTURE_ID633,20374
#  define ARCHITECTURE_ID ARCHITECTURE_ID636,20438
#  define ARCHITECTURE_ID ARCHITECTURE_ID639,20500
#  define ARCHITECTURE_ID ARCHITECTURE_ID642,20562
#  define ARCHITECTURE_ID ARCHITECTURE_ID645,20630
#  define ARCHITECTURE_ID ARCHITECTURE_ID650,20715
#  define ARCHITECTURE_ID ARCHITECTURE_ID653,20774
#  define ARCHITECTURE_ID ARCHITECTURE_ID656,20831
#  define ARCHITECTURE_ID ARCHITECTURE_ID659,20891
#  define ARCHITECTURE_ID ARCHITECTURE_ID662,20949
#  define ARCHITECTURE_ID ARCHITECTURE_ID665,21016
#  define ARCHITECTURE_ID ARCHITECTURE_ID670,21118
#  define ARCHITECTURE_ID ARCHITECTURE_ID673,21178
#  define ARCHITECTURE_ID ARCHITECTURE_ID676,21246
#  define ARCHITECTURE_ID ARCHITECTURE_ID679,21339
#  define ARCHITECTURE_ID ARCHITECTURE_ID682,21412
#  define ARCHITECTURE_ID ARCHITECTURE_ID686,21480
#  define ARCHITECTURE_ID ARCHITECTURE_ID689,21548
#  define ARCHITECTURE_ID ARCHITECTURE_ID694,21657
#  define ARCHITECTURE_ID ARCHITECTURE_ID697,21719
#  define ARCHITECTURE_ID ARCHITECTURE_ID700,21777
#  define ARCHITECTURE_ID ARCHITECTURE_ID703,21835
#  define ARCHITECTURE_ID ARCHITECTURE_ID706,21892
#  define ARCHITECTURE_ID ARCHITECTURE_ID709,21951
#  define ARCHITECTURE_ID ARCHITECTURE_ID712,21991
#  define ARCHITECTURE_IDARCHITECTURE_ID716,22035
#define DEC(DEC720,22119
#define HEX(HEX731,22468
char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";info_version743,22813
char const info_version[] = {info_version747,23005
char const info_version_internal[] = {info_version_internal765,23503
char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTinfo_version_internal771,23763
char const info_simulate_version[] = {info_simulate_version776,23985
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";info_platform796,24654
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";info_arch797,24722
#  define C_VERSION C_VERSION803,24901
#  define C_VERSIONC_VERSION805,24933
# define C_VERSION C_VERSION808,24994
# define C_VERSION C_VERSION810,25052
# define C_VERSION C_VERSION812,25110
# define C_VERSION C_VERSION814,25168
# define C_VERSION C_VERSION816,25198
const char* info_language_standard_default =info_language_standard_default818,25229
const char* info_language_extensions_default = "INFO" ":" "extensions_default["info_language_extensions_default821,25323
void main() {}main834,25725
int main(argc, argv) int argc; char *argv[];main837,25774

build/CMakeFiles/3.27.4/CompilerIdC/a.out,0

build/CMakeFiles/3.27.4/CMakeCCompiler.cmake,3697
set(CMAKE_C_COMPILER "/usr/bin/cc")CMAKE_C_COMPILER1,0
set(CMAKE_C_COMPILER_ARG1 "")CMAKE_C_COMPILER_ARG12,36
set(CMAKE_C_COMPILER_ID "GNU")CMAKE_C_COMPILER_ID3,66
set(CMAKE_C_COMPILER_VERSION "13.2.1")CMAKE_C_COMPILER_VERSION4,97
set(CMAKE_C_COMPILER_VERSION_INTERNAL "")CMAKE_C_COMPILER_VERSION_INTERNAL5,136
set(CMAKE_C_COMPILER_WRAPPER "")CMAKE_C_COMPILER_WRAPPER6,178
set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "17")CMAKE_C_STANDARD_COMPUTED_DEFAULT7,211
set(CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT "ON")CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT8,255
set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macrCMAKE_C_COMPILE_FEATURES9,301
set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")CMAKE_C90_COMPILE_FEATURES10,445
set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")CMAKE_C99_COMPILE_FEATURES11,510
set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")CMAKE_C11_COMPILE_FEATURES12,582
set(CMAKE_C17_COMPILE_FEATURES "c_std_17")CMAKE_C17_COMPILE_FEATURES13,641
set(CMAKE_C23_COMPILE_FEATURES "c_std_23")CMAKE_C23_COMPILE_FEATURES14,684
set(CMAKE_C_PLATFORM_ID "Linux")CMAKE_C_PLATFORM_ID16,728
set(CMAKE_C_SIMULATE_ID "")CMAKE_C_SIMULATE_ID17,761
set(CMAKE_C_COMPILER_FRONTEND_VARIANT "GNU")CMAKE_C_COMPILER_FRONTEND_VARIANT18,789
set(CMAKE_C_SIMULATE_VERSION "")CMAKE_C_SIMULATE_VERSION19,834
set(CMAKE_AR "/usr/bin/ar")CMAKE_AR24,871
set(CMAKE_C_COMPILER_AR "/usr/bin/gcc-ar")CMAKE_C_COMPILER_AR25,899
set(CMAKE_RANLIB "/usr/bin/ranlib")CMAKE_RANLIB26,942
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/gcc-ranlib")CMAKE_C_COMPILER_RANLIB27,978
set(CMAKE_LINKER "/usr/bin/ld")CMAKE_LINKER28,1029
set(CMAKE_MT "")CMAKE_MT29,1061
set(CMAKE_TAPI "CMAKE_TAPI-NOTFOUND")CMAKE_TAPI30,1078
set(CMAKE_COMPILER_IS_GNUCC 1)CMAKE_COMPILER_IS_GNUCC31,1116
set(CMAKE_C_COMPILER_LOADED 1)CMAKE_C_COMPILER_LOADED32,1147
set(CMAKE_C_COMPILER_WORKS TRUE)CMAKE_C_COMPILER_WORKS33,1178
set(CMAKE_C_ABI_COMPILED TRUE)CMAKE_C_ABI_COMPILED34,1211
set(CMAKE_C_COMPILER_ENV_VAR "CC")CMAKE_C_COMPILER_ENV_VAR36,1243
set(CMAKE_C_COMPILER_ID_RUN 1)CMAKE_C_COMPILER_ID_RUN38,1279
set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)CMAKE_C_SOURCE_FILE_EXTENSIONS39,1310
set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)CMAKE_C_IGNORE_EXTENSIONS40,1350
set(CMAKE_C_LINKER_PREFERENCE 10)CMAKE_C_LINKER_PREFERENCE41,1411
set(CMAKE_C_LINKER_DEPFILE_SUPPORTED TRUE)CMAKE_C_LINKER_DEPFILE_SUPPORTED42,1445
set(CMAKE_C_SIZEOF_DATA_PTR "8")CMAKE_C_SIZEOF_DATA_PTR45,1522
set(CMAKE_C_COMPILER_ABI "ELF")CMAKE_C_COMPILER_ABI46,1555
set(CMAKE_C_BYTE_ORDER "LITTLE_ENDIAN")CMAKE_C_BYTE_ORDER47,1587
set(CMAKE_C_LIBRARY_ARCHITECTURE "")CMAKE_C_LIBRARY_ARCHITECTURE48,1627
  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")CMAKE_SIZEOF_VOID_P51,1693
  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")CMAKE_INTERNAL_PLATFORM_ABI55,1783
  set(CMAKE_LIBRARY_ARCHITECTURE "")CMAKE_LIBRARY_ARCHITECTURE59,1886
set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")CMAKE_C_CL_SHOWINCLUDES_PREFIX62,1932
  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")CMAKE_CL_SHOWINCLUDES_PREFIX64,2006
set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/include;/usr/lCMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES71,2091
set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "gcc;gcc_s;c;gcc;gcc_s")CMAKE_C_IMPLICIT_LINK_LIBRARIES72,2269
set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1;/usr/lib;/lib")CMAKE_C_IMPLICIT_LINK_DIRECTORIES73,2330
set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES74,2425

build/CMakeFiles/3.27.4/CMakeDetermineCompilerABI_CXX.bin,0

build/CMakeFiles/3.27.4/CMakeCXXCompiler.cmake,4194
set(CMAKE_CXX_COMPILER "/usr/bin/c++")CMAKE_CXX_COMPILER1,0
set(CMAKE_CXX_COMPILER_ARG1 "")CMAKE_CXX_COMPILER_ARG12,39
set(CMAKE_CXX_COMPILER_ID "GNU")CMAKE_CXX_COMPILER_ID3,71
set(CMAKE_CXX_COMPILER_VERSION "13.2.1")CMAKE_CXX_COMPILER_VERSION4,104
set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")CMAKE_CXX_COMPILER_VERSION_INTERNAL5,145
set(CMAKE_CXX_COMPILER_WRAPPER "")CMAKE_CXX_COMPILER_WRAPPER6,189
set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "17")CMAKE_CXX_STANDARD_COMPUTED_DEFAULT7,224
set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT8,270
set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_aliasCMAKE_CXX_COMPILE_FEATURES9,318
set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")CMAKE_CXX98_COMPILE_FEATURES10,1681
set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attCMAKE_CXX11_COMPILE_FEATURES11,1761
set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deCMAKE_CXX14_COMPILE_FEATURES12,2776
set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")CMAKE_CXX17_COMPILE_FEATURES13,3085
set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")CMAKE_CXX20_COMPILE_FEATURES14,3132
set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")CMAKE_CXX23_COMPILE_FEATURES15,3179
set(CMAKE_CXX_PLATFORM_ID "Linux")CMAKE_CXX_PLATFORM_ID17,3227
set(CMAKE_CXX_SIMULATE_ID "")CMAKE_CXX_SIMULATE_ID18,3262
set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "GNU")CMAKE_CXX_COMPILER_FRONTEND_VARIANT19,3292
set(CMAKE_CXX_SIMULATE_VERSION "")CMAKE_CXX_SIMULATE_VERSION20,3339
set(CMAKE_AR "/usr/bin/ar")CMAKE_AR25,3378
set(CMAKE_CXX_COMPILER_AR "/usr/bin/gcc-ar")CMAKE_CXX_COMPILER_AR26,3406
set(CMAKE_RANLIB "/usr/bin/ranlib")CMAKE_RANLIB27,3451
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/gcc-ranlib")CMAKE_CXX_COMPILER_RANLIB28,3487
set(CMAKE_LINKER "/usr/bin/ld")CMAKE_LINKER29,3540
set(CMAKE_MT "")CMAKE_MT30,3572
set(CMAKE_TAPI "CMAKE_TAPI-NOTFOUND")CMAKE_TAPI31,3589
set(CMAKE_COMPILER_IS_GNUCXX 1)CMAKE_COMPILER_IS_GNUCXX32,3627
set(CMAKE_CXX_COMPILER_LOADED 1)CMAKE_CXX_COMPILER_LOADED33,3659
set(CMAKE_CXX_COMPILER_WORKS TRUE)CMAKE_CXX_COMPILER_WORKS34,3692
set(CMAKE_CXX_ABI_COMPILED TRUE)CMAKE_CXX_ABI_COMPILED35,3727
set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")CMAKE_CXX_COMPILER_ENV_VAR37,3761
set(CMAKE_CXX_COMPILER_ID_RUN 1)CMAKE_CXX_COMPILER_ID_RUN39,3800
set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m)CMAKE_CXX_SOURCE_FILE_EXTENSIONS40,3833
set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)CMAKE_CXX_IGNORE_EXTENSIONS41,3926
set(CMAKE_CXX_LINKER_PREFERENCE 30)CMAKE_CXX_LINKER_PREFERENCE51,4248
set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES52,4284
set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED TRUE)CMAKE_CXX_LINKER_DEPFILE_SUPPORTED53,4330
set(CMAKE_CXX_SIZEOF_DATA_PTR "8")CMAKE_CXX_SIZEOF_DATA_PTR56,4409
set(CMAKE_CXX_COMPILER_ABI "ELF")CMAKE_CXX_COMPILER_ABI57,4444
set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")CMAKE_CXX_BYTE_ORDER58,4478
set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")CMAKE_CXX_LIBRARY_ARCHITECTURE59,4520
  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")CMAKE_SIZEOF_VOID_P62,4590
  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")CMAKE_INTERNAL_PLATFORM_ABI66,4684
  set(CMAKE_LIBRARY_ARCHITECTURE "")CMAKE_LIBRARY_ARCHITECTURE70,4791
set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")CMAKE_CXX_CL_SHOWINCLUDES_PREFIX73,4837
  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")CMAKE_CL_SHOWINCLUDES_PREFIX75,4915
set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "/usr/include/c++/13.2.1;/usr/include/c++/13.2.1/x86_CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES82,5002
set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc")CMAKE_CXX_IMPLICIT_LINK_LIBRARIES83,5283
set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1;/usr/lib;/lib")CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES84,5355
set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES85,5452

build/CMakeFiles/3.27.4/CMakeDetermineCompilerABI_C.bin,0

build/CMakeFiles/3.27.4/CompilerIdCXX/CMakeCXXCompilerId.cpp,17109
#  define __has_include(__has_include11,357
# define COMPILER_ID COMPILER_ID19,543
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR21,604
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR22,664
# define COMPILER_ID COMPILER_ID25,775
#  define SIMULATE_ID SIMULATE_ID27,827
#  define SIMULATE_ID SIMULATE_ID30,887
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR35,1162
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR36,1221
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH38,1323
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH40,1394
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR43,1473
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR44,1528
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH47,1702
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK51,1840
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR55,1962
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR56,2015
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR59,2099
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR61,2171
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR64,2255
#  define SIMULATE_VERSION_PATCH SIMULATE_VERSION_PATCH67,2350
# define COMPILER_ID COMPILER_ID71,2513
# define SIMULATE_ID SIMULATE_ID73,2568
# define SIMULATE_ID SIMULATE_ID76,2625
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR83,2926
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR84,2989
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH85,3056
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR87,3129
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR88,3194
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH89,3263
# define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR93,3385
# define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR94,3437
# define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR97,3518
# define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR99,3588
# define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR102,3669
# define SIMULATE_VERSION_PATCH SIMULATE_VERSION_PATCH105,3761
# define COMPILER_ID COMPILER_ID109,3852
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR110,3885
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR111,3933
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH113,4023
# define COMPILER_ID COMPILER_ID117,4154
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR118,4189
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR119,4261
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH120,4333
# define COMPILER_ID COMPILER_ID123,4434
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR125,4494
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR126,4547
# define COMPILER_ID COMPILER_ID129,4654
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR131,4712
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR132,4767
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH134,4856
# define COMPILER_ID COMPILER_ID138,4947
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR140,5016
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR141,5080
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH143,5169
# define COMPILER_ID COMPILER_ID147,5260
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR150,5347
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR151,5401
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH152,5461
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR155,5556
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR156,5609
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH157,5668
# define COMPILER_ID COMPILER_ID161,5760
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR163,5812
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR164,5864
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH165,5920
# define COMPILER_ID COMPILER_ID168,6001
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR170,6064
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR171,6123
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH172,6187
# define COMPILER_ID COMPILER_ID175,6309
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR177,6361
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR178,6413
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH179,6469
# define COMPILER_ID COMPILER_ID182,6575
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR183,6607
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR184,6664
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH185,6721
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK186,6783
# define COMPILER_ID COMPILER_ID190,6895
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR191,6926
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR192,6981
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH193,7036
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK194,7096
# define COMPILER_ID COMPILER_ID198,7236
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR200,7287
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR201,7339
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH202,7395
# define COMPILER_ID COMPILER_ID205,7528
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR207,7586
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR208,7638
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH209,7694
# define COMPILER_ID COMPILER_ID212,7779
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR213,7808
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR214,7866
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH216,7964
# define COMPILER_ID COMPILER_ID220,8058
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR221,8085
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR222,8131
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH224,8217
# define COMPILER_ID COMPILER_ID228,8306
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR229,8334
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR230,8386
# define COMPILER_ID COMPILER_ID233,8478
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR235,8548
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR236,8617
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH237,8692
# define COMPILER_ID COMPILER_ID240,8799
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR241,8835
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR242,8886
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH243,8937
# define COMPILER_VERSION_INTERNAL_STR COMPILER_VERSION_INTERNAL_STR244,8993
# define COMPILER_ID COMPILER_ID248,9077
#   define COMPILER_VERSION COMPILER_VERSION250,9138
#   define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR252,9212
#   define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR253,9265
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH254,9318
#   define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL257,9412
#   define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL259,9498
# define COMPILER_ID COMPILER_ID264,9587
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR267,9679
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR268,9743
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH269,9811
# define COMPILER_ID COMPILER_ID273,9915
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR274,9946
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR275,10002
# define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL276,10059
# define COMPILER_ID COMPILER_ID279,10143
# define COMPILER_ID COMPILER_ID282,10225
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR285,10319
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR286,10382
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH287,10449
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR290,10555
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR291,10617
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH292,10683
# define COMPILER_ID COMPILER_ID297,10819
#  define SIMULATE_ID SIMULATE_ID299,10876
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR301,10913
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR302,10966
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH303,11019
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR306,11125
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR307,11178
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK309,11239
# define COMPILER_ID COMPILER_ID312,11360
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR313,11392
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR314,11461
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH315,11534
# define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL316,11607
# define COMPILER_ID COMPILER_ID319,11695
#  define SIMULATE_ID SIMULATE_ID321,11747
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR323,11784
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR324,11837
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH325,11890
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR328,11996
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR329,12049
# define COMPILER_ID COMPILER_ID333,12199
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR334,12226
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR335,12277
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH337,12356
#  define SIMULATE_ID SIMULATE_ID340,12466
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR341,12494
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR342,12541
#   define SIMULATE_VERSION_PATCH SIMULATE_VERSION_PATCH344,12629
# define COMPILER_ID COMPILER_ID349,12751
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR351,12801
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR353,12855
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR356,12939
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH359,13034
# define COMPILER_ID COMPILER_ID363,13125
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR365,13177
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR366,13229
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH370,13368
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH373,13473
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK377,13576
# define COMPILER_ID COMPILER_ID381,13663
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR384,13755
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR385,13821
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH386,13887
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK387,13952
# define COMPILER_ID COMPILER_ID391,14085
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR393,14157
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR394,14215
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH395,14279
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL396,14334
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR398,14635
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR399,14689
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH400,14763
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL401,14816
# define COMPILER_ID COMPILER_ID409,15094
# define COMPILER_ID COMPILER_ID412,15150
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";info_compiler419,15448
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";info_simulate421,15535
char const* qnxnto = "INFO" ":" "qnxnto[]";qnxnto425,15629
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";info_cray429,15724
#define STRINGIFY_HELPER(STRINGIFY_HELPER432,15799
#define STRINGIFY(X) STRINGIFY_STRINGIFY433,15830
# define PLATFORM_ID PLATFORM_ID437,15974
# define PLATFORM_ID PLATFORM_ID440,16028
# define PLATFORM_ID PLATFORM_ID443,16083
# define PLATFORM_ID PLATFORM_ID446,16141
# define PLATFORM_ID PLATFORM_ID449,16196
# define PLATFORM_ID PLATFORM_ID452,16289
# define PLATFORM_ID PLATFORM_ID455,16370
# define PLATFORM_ID PLATFORM_ID458,16449
# define PLATFORM_ID PLATFORM_ID461,16529
# define PLATFORM_ID PLATFORM_ID464,16598
# define PLATFORM_ID PLATFORM_ID467,16724
# define PLATFORM_ID PLATFORM_ID470,16795
# define PLATFORM_ID PLATFORM_ID473,16850
# define PLATFORM_ID PLATFORM_ID476,16941
# define PLATFORM_ID PLATFORM_ID479,17016
# define PLATFORM_ID PLATFORM_ID482,17108
# define PLATFORM_ID PLATFORM_ID485,17185
# define PLATFORM_ID PLATFORM_ID488,17283
# define PLATFORM_ID PLATFORM_ID491,17340
# define PLATFORM_ID PLATFORM_ID494,17397
# define PLATFORM_ID PLATFORM_ID497,17467
# define PLATFORM_ID PLATFORM_ID500,17539
# define PLATFORM_ID PLATFORM_ID503,17629
# define PLATFORM_ID PLATFORM_ID506,17727
# define PLATFORM_ID PLATFORM_ID509,17820
#  define PLATFORM_ID PLATFORM_ID513,17901
#  define PLATFORM_ID PLATFORM_ID516,17956
#  define PLATFORM_ID PLATFORM_ID519,18009
#  define PLATFORM_ID PLATFORM_ID522,18066
#  define PLATFORM_ID PLATFORM_ID525,18129
#  define PLATFORM_IDPLATFORM_ID528,18192
#  define PLATFORM_ID PLATFORM_ID533,18273
#  define PLATFORM_ID PLATFORM_ID536,18342
#  define PLATFORM_ID PLATFORM_ID540,18415
# define PLATFORM_IDPLATFORM_ID543,18474
#  define ARCHITECTURE_ID ARCHITECTURE_ID554,18814
#  define ARCHITECTURE_ID ARCHITECTURE_ID557,18875
#  define ARCHITECTURE_ID ARCHITECTURE_ID560,18956
#  define ARCHITECTURE_ID ARCHITECTURE_ID563,19013
#  define ARCHITECTURE_ID ARCHITECTURE_ID566,19071
#   define ARCHITECTURE_ID ARCHITECTURE_ID570,19147
#   define ARCHITECTURE_ID ARCHITECTURE_ID572,19203
#   define ARCHITECTURE_ID ARCHITECTURE_ID574,19247
#  define ARCHITECTURE_ID ARCHITECTURE_ID578,19333
#  define ARCHITECTURE_ID ARCHITECTURE_ID581,19389
#  define ARCHITECTURE_ID ARCHITECTURE_ID584,19456
#  define ARCHITECTURE_ID ARCHITECTURE_ID589,19542
#  define ARCHITECTURE_ID ARCHITECTURE_ID592,19599
#  define ARCHITECTURE_ID ARCHITECTURE_ID595,19666
#  define ARCHITECTURE_ID ARCHITECTURE_ID600,19794
#  define ARCHITECTURE_ID ARCHITECTURE_ID603,19853
#  define ARCHITECTURE_ID ARCHITECTURE_ID606,19914
#  define ARCHITECTURE_ID ARCHITECTURE_ID609,19977
#  define ARCHITECTURE_ID ARCHITECTURE_ID612,20040
#  define ARCHITECTURE_ID ARCHITECTURE_ID615,20102
#  define ARCHITECTURE_ID ARCHITECTURE_ID618,20162
#  define ARCHITECTURE_ID ARCHITECTURE_ID621,20226
#  define ARCHITECTURE_ID ARCHITECTURE_ID624,20288
#  define ARCHITECTURE_ID ARCHITECTURE_ID627,20350
#  define ARCHITECTURE_ID ARCHITECTURE_ID630,20418
#  define ARCHITECTURE_ID ARCHITECTURE_ID635,20503
#  define ARCHITECTURE_ID ARCHITECTURE_ID638,20562
#  define ARCHITECTURE_ID ARCHITECTURE_ID641,20619
#  define ARCHITECTURE_ID ARCHITECTURE_ID644,20679
#  define ARCHITECTURE_ID ARCHITECTURE_ID647,20737
#  define ARCHITECTURE_ID ARCHITECTURE_ID650,20804
#  define ARCHITECTURE_ID ARCHITECTURE_ID655,20906
#  define ARCHITECTURE_ID ARCHITECTURE_ID658,20966
#  define ARCHITECTURE_ID ARCHITECTURE_ID661,21034
#  define ARCHITECTURE_ID ARCHITECTURE_ID664,21127
#  define ARCHITECTURE_ID ARCHITECTURE_ID667,21200
#  define ARCHITECTURE_ID ARCHITECTURE_ID671,21268
#  define ARCHITECTURE_ID ARCHITECTURE_ID674,21336
#  define ARCHITECTURE_ID ARCHITECTURE_ID679,21445
#  define ARCHITECTURE_ID ARCHITECTURE_ID682,21507
#  define ARCHITECTURE_ID ARCHITECTURE_ID685,21565
#  define ARCHITECTURE_ID ARCHITECTURE_ID688,21623
#  define ARCHITECTURE_ID ARCHITECTURE_ID691,21680
#  define ARCHITECTURE_ID ARCHITECTURE_ID694,21739
#  define ARCHITECTURE_ID ARCHITECTURE_ID697,21779
#  define ARCHITECTURE_IDARCHITECTURE_ID701,21823
#define DEC(DEC705,21907
#define HEX(HEX716,22256
char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";info_version728,22601
char const info_version[] = {info_version732,22793
char const info_version_internal[] = {info_version_internal750,23291
char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTinfo_version_internal756,23551
char const info_simulate_version[] = {info_simulate_version761,23773
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";info_platform781,24442
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";info_arch782,24510
#      define CXX_STD CXX_STD789,24729
#      define CXX_STD CXX_STD791,24769
#    define CXX_STD CXX_STD794,24818
#  define CXX_STD CXX_STD797,24902
#  define CXX_STD CXX_STD799,24937
const char* info_language_standard_default = "INFO" ":" "standard_default["info_language_standard_default802,24975
const char* info_language_extensions_default = "INFO" ":" "extensions_default["info_language_extensions_default818,25233
int main(int argc, char* argv[])main830,25615

build/CMakeFiles/3.27.4/CompilerIdCXX/a.out,0

build/CMakeFiles/global_include_test.dir/build.make,0

build/CMakeFiles/global_include_test.dir/compiler_depend.ts,0

build/CMakeFiles/global_include_test.dir/flags.make,0

build/CMakeFiles/global_include_test.dir/include/test/arg-parser-test.cpp.o.d,0

build/CMakeFiles/global_include_test.dir/include/test/global-config-test.cpp.o.d,0

build/CMakeFiles/global_include_test.dir/link.txt,0

build/CMakeFiles/global_include_test.dir/cmake_clean.cmake,0

build/CMakeFiles/global_include_test.dir/depend.make,0

build/CMakeFiles/global_include_test.dir/progress.make,0

build/CMakeFiles/global_include_test.dir/compiler_depend.make,0

build/CMakeFiles/global_include_test.dir/DependInfo.cmake,373
set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)CMAKE_DEPENDS_IN_PROJECT_ONLY3,42
set(CMAKE_DEPENDS_LANGUAGESCMAKE_DEPENDS_LANGUAGES6,149
set(CMAKE_DEPENDS_DEPENDENCY_FILESCMAKE_DEPENDS_DEPENDENCY_FILES10,230
set(CMAKE_Fortran_TARGET_LINKED_INFO_FILESCMAKE_Fortran_TARGET_LINKED_INFO_FILES16,789
set(CMAKE_Fortran_TARGET_MODULE_DIR "")CMAKE_Fortran_TARGET_MODULE_DIR20,872

build/CMakeFiles/global_include_test.dir/compiler_depend.internal,0

build/CMakeFiles/TargetDirectories.txt,0

tracer/test/interval-test.cpp,76
constexpr double EPS = 1e-8;EPS5,55
TEST(Mergeinterval, merge){TEST7,85

tracer/test/bvh-test.cpp,1623
constexpr double EPS = 1e-6;EPS11,175
TEST(aabbConstructor, nopara){TEST13,205
TEST(rayaabbIntersection, hit){TEST19,346
TEST(rayaabbIntersection, notHit){TEST32,907
TEST(rayaabbIntersection, ParallelRayHit){TEST45,1448
TEST(rayaabbIntersection, ParallelRayNoHit){TEST58,1991
TEST(aabbComparer, canSortAABBs){TEST71,2543
namespace bvhDataTest{bvhDataTest84,2936
using Sphere_Data = std::vector<std::pair<Point3,int>>;Sphere_Data89,3067
typedef std::vector<std::pair<Point3, int>> dataFactory();dataFactory90,3123
Sphere_Data GenerateData(size_t data_size, Interval<int> value_range=Interval(-10,10)){GenerateData92,3183
  auto randint = [&value_range](){ return random_int(value_range.begin, value_range.end);};__anon088adba2010297,3325
Sphere_Data GenerateSmallData(){ return GenerateData(8); }GenerateSmallData106,3613
Sphere_Data GenerateScatteredData(){ return GenerateData(8, Interval<int>(-1000,1000)); }GenerateScatteredData107,3672
Sphere_Data GenerateCondensedData(){ return GenerateData(128); }GenerateCondensedData108,3762
Sphere_Data GenerateLargeData(){ return GenerateData(131072, Interval<int>(-2097152, 2097152)); GenerateLargeData109,3827
class ValueParameterizedBVHFixture : public TestWithParam<dataFactory*>{ValueParameterizedBVHFixture111,3926
  void SetUp() override{SetUp114,4013
  void TearDown() override{TearDown119,4159
  std::vector<std::shared_ptr<Shape>> spheres;spheres122,4192
testing::AssertionResult HITRECORD_SAME(Hit_record expect, Hit_record actual){HITRECORD_SAME125,4243
TEST_P(ValueParameterizedBVHFixture, BatRayHitwithBF){TEST_P135,4732

tracer/test/sphere-test.cpp,159
const std::string sphere_shapeid("sphere");sphere_shapeid9,136
TEST(sphere, registerfactory){TEST11,181
TEST(sphere, instantiateUsingFactory){TEST16,287

tracer/arch.hpp,572
#define ARCH_HARCH_H2,15
class Importer{Importer13,162
  Importer(){}Importer15,186
  Importer(std::string filename){Importer16,201
  std::shared_ptr<Camera> Get_camera(){ return cam; }Get_camera25,423
  std::vector<std::shared_ptr<Shape>> Get_objects(){ return objects; }Get_objects26,477
  std::vector<std::shared_ptr<Material>> Get_material(){ return materials; }Get_material27,548
  std::shared_ptr<Camera> cam;cam30,639
  std::vector<std::shared_ptr<Shape>> objects;objects31,670
  std::vector<std::shared_ptr<Material>> materials;materials32,717

tracer/renderer.cpp,864
std::vector<Point3> Rand_Pixel_Samples(const Camera::View_Info& view, const int& row, const int&Rand_Pixel_Samples11,169
int _finished_render_sub_process_count,_total_render_sub_process_count;_finished_render_sub_process_count28,909
int _finished_render_sub_process_count,_total_render_sub_process_count;_total_render_sub_process_count28,909
bool _show_preview_window;_show_preview_window29,981
void Write_Color(Mat& canvas, const int& i,const int &j, Color pixel_color){Write_Color30,1008
Mat Renderer::__Renderer_facade::Render(){Render36,1285
void _render_sub_process(Mat canvas, Interval<int> row, Interval<int> col, const Camera::View_In_render_sub_process68,2700
void _update_preview_window(Mat canvas){_update_preview_window89,3500
Color Renderer::__Renderer_facade::Ray_Color(const Ray& r, int current_recur_depth) const{Ray_Color96,3631

tracer/shape.hpp,59
#define OBJECTS_HOBJECTS_H2,18
class Shape{Shape12,135

tracer/bvh.hpp,566
#define BVF_HBVF_H2,14
class bvh_node : public Shape{bvh_node13,152
  bvh_node(const std::vector<std::shared_ptr<Shape>>& src){bvh_node18,378
  AABB Get_Bounding_box(void) const override{ return bbox; }Get_Bounding_box33,1165
  std::string Get_Name(void) const override{ return std::string{"bvh_node"}; }Get_Name35,1227
  void Set_material(std::shared_ptr<Material>) override{ std::cerr<<"Cannot set material to a bvSet_material36,1306
  std::shared_ptr<Shape> lch,rch;lch38,1445
  std::shared_ptr<Shape> lch,rch;rch38,1445
  AABB bbox;bbox39,1479

tracer/camera.hpp,1710
#define CAMERA_HCAMERA_H2,17
class Camera{Camera10,118
  Camera(const Point3& center_position = Point3(0,0,0),Camera12,140
  void Set_Position(const Vector3& position){Set_Position26,620
  void Adjust_Position(const Vector3& translate){Adjust_Position29,700
  Vector3 Position(void) const{ return camera_center; }Position32,786
  void Set_Looking_point(const Point3& _looking_at){ looking_at = _looking_at; }Set_Looking_point33,842
  void Set_Aspect_ratio(const double& _aspect_ratio){ aspect_ratio = _aspect_ratio; }Set_Aspect_ratio35,924
  void Set_View_angle_vertical(const double& angle){ view_angle_vertical = angle; }Set_View_angle_vertical37,1011
  void Set_Image_Width(const int& _width){Set_Image_Width39,1100
  void Set_Image_Height(const int& _height){Set_Image_Height44,1286
  struct View_Info{View_Info50,1477
    double focal_length;focal_length51,1497
    double viewport_height, viewport_width;viewport_height52,1522
    double viewport_height, viewport_width;viewport_width52,1522
    Vector3 viewport_u, viewport_v;viewport_u53,1566
    Vector3 viewport_u, viewport_v;viewport_v53,1566
    Vector3 pixel_delta_u, pixel_delta_v;pixel_delta_u54,1602
    Vector3 pixel_delta_u, pixel_delta_v;pixel_delta_v54,1602
    Point3 viewport_upper_left;viewport_upper_left55,1644
    Point3 pixel00_loc;pixel00_loc56,1676
  double aspect_ratio;aspect_ratio63,1788
  int image_height, image_width;image_height64,1811
  int image_height, image_width;image_width64,1811
  Point3 camera_center;camera_center65,1844
  Vector3 up_direction;up_direction66,1868
  Point3 looking_at;looking_at67,1892
  double view_angle_vertical;view_angle_vertical69,1914

tracer/materials/dielectric.hpp,618
#define DIELECTRIC_HDIELECTRIC_H2,21
class Dielectric : public Material{Dielectric12,150
  static constexpr std::string name{"dielectric"};name14,194
  Dielectric(const double& index_of_refraction) : eta(index_of_refraction) {}Dielectric16,248
  double eta;eta21,418
namespace{__anon0d5545f4011126,438
  std::shared_ptr<Material> CreateDielectric(std::stringstream& ss){CreateDielectric27,449
  constexpr std::string Dielectric_MaterialID = Dielectric::name;Dielectric_MaterialID31,593
  const bool registered1 = MaterialFactory::Instance()->Register(Dielectric_MaterialID, CreateDiregistered132,659

tracer/materials/lambertian.hpp,609
#define LAMBERTIAN_HLAMBERTIAN_H2,21
class Lambertian : public Material{Lambertian11,149
  static constexpr std::string name{"lambertian"};name13,193
  Lambertian(const Color& col) : attenuation(col) {}Lambertian15,247
  Color attenuation;attenuation20,393
namespace{__anoncaf6e23b011123,418
  std::shared_ptr<Material> CreateLambertian(std::stringstream& ss){CreateLambertian24,429
  constexpr std::string Lambertian_MaterialID = Lambertian::name;Lambertian_MaterialID28,588
  const bool registered00 = MaterialFactory::Instance()->Register(Lambertian_MaterialID, CreateLregistered0029,654

tracer/materials/material.hpp,55
#define MATERIALS_MATERIAL_HMATERIALS_MATERIAL_H2,29

tracer/materials/dielectric.cpp,172
double Reflectance(const double& cosine, const double& ref_idx){Reflectance8,92
Color Dielectric::Ray_Color(const Ray& r, const Hit_record& rec) const {Ray_Color14,301

tracer/materials/lambertian.cpp,87
Color Lambertian::Ray_Color(const Ray& r,const Hit_record& rec) const {Ray_Color6,75

tracer/materials/metal.cpp,82
Color Metal::Ray_Color(const Ray& r,const Hit_record& rec) const {Ray_Color6,70

tracer/materials/metal.hpp,614
#define METAL_HMETAL_H2,16
class Metal : public Material{Metal11,139
  static constexpr std::string name{"metal"};name13,178
  Metal(const Color& col, const double& f=0) : attenuation(col),fuzz(fabs(f)<1?f:1) {}Metal15,227
  Color attenuation;attenuation20,407
  double fuzz;fuzz21,428
namespace{__anoncfd0a28f011124,447
  std::shared_ptr<Material> CreateMetal(std::stringstream& ss){CreateMetal25,458
  constexpr std::string Metal_MaterialID = Metal::name;Metal_MaterialID29,624
  const bool registered3 = MaterialFactory::Instance()->Register(Metal_MaterialID, CreateMetal);registered330,680

tracer/material.hpp,65
#define MATERIAL_HMATERIAL_H2,19
class Material{Material6,65

tracer/factory.hpp,917
#define VISUAL_SHAPE_FACTORY_HVISUAL_SHAPE_FACTORY_H2,31
class _Factory{_Factory11,195
  typedef productType (*Create_Callback)(std::stringstream&);Create_Callback13,219
  using CallbackMap = std::map<idtype, Create_Callback>;CallbackMap15,290
  CallbackMap _callbacks;_callbacks16,347
  bool Register(idtype id, Create_Callback CreateFn){Register20,459
  bool isRegistered(idtype id) const{isRegistered24,580
  Create_Callback GetCreateFn(idtype shapeid){GetCreateFn28,675
class ShapeFactory{ShapeFactory38,916
  class ShapeFactory_ins : public _Factory<std::string, std::shared_ptr<Shape>>{};ShapeFactory_ins40,945
  static ShapeFactory_ins* Instance(){Instance46,1109
class MaterialFactory{MaterialFactory54,1231
  class MaterialFactory_ins : public _Factory<std::string, std::shared_ptr<Material>> {};MaterialFactory_ins56,1263
  static MaterialFactory_ins* Instance(){Instance62,1439

tracer/renderer.hpp,897
#define RENDERER_PANEL_HRENDERER_PANEL_H2,25
class Renderer{Renderer11,157
  class __Renderer_facade{__Renderer_facade13,182
    __Renderer_facade(){}__Renderer_facade15,219
    void Set_Camera(std::shared_ptr<Camera> cam_){ cam=cam_; }Set_Camera18,282
    void Set_World(std::shared_ptr<Scene> world_){ world=world_; }Set_World19,345
    void Set_Samples_per_pixel(const int& samples){ samples_per_pixel = samples; }Set_Samples_per_pixel24,495
    void Set_Max_recurrent_depth(const int& max_recur){ max_recurrent_depth = max_recur; }Set_Max_recurrent_depth25,578
    std::shared_ptr<Camera> cam;cam28,685
    std::shared_ptr<Scene> world;world29,718
    int samples_per_pixel;samples_per_pixel32,772
    int max_recurrent_depth;max_recurrent_depth33,799
    bool show_preview_window;show_preview_window34,828
  static __Renderer_facade* Instance(void){Instance41,934

tracer/camera.cpp,80
Camera::View_Info Camera::Get_Initialize_View() const{Get_Initialize_View5,49

tracer/shapes/sphere.hpp,1051
#define SPHERE_HSPHERE_H2,17
class Sphere : public Shape{Sphere14,194
  static constexpr std::string name{"sphere"};name16,231
  Sphere(const Point3& _center, const double& r):Sphere(_center,r,nullptr) {}Sphere18,279
  Sphere(const Point3& _center, const double& r, std::shared_ptr<Material> _material) : center(_Sphere19,357
  AABB Get_Bounding_box(void) const override{ return bbox; }Get_Bounding_box25,617
  std::string Get_Name(void) const override{ return name; }Get_Name31,853
  void Set_material(std::shared_ptr<Material> mat) override{ material = mat; }Set_material32,913
  Point3 center;center34,1001
  double radius;radius35,1018
  std::shared_ptr<Material> material;material36,1035
  AABB bbox;bbox38,1074
namespace{__anonc6540f05011141,1091
  std::shared_ptr<Shape> CreateSphere(std::stringstream& ss){CreateSphere42,1102
  constexpr std::string Sphere_ShapeID = Sphere::name;Sphere_ShapeID50,1278
  const bool registered = ShapeFactory::Instance()->Register(Sphere_ShapeID, CreateSphere);registered51,1333

tracer/shapes/shape.hpp,43
#define SHAPES_SHAPE_HSHAPES_SHAPE_H2,23

tracer/shapes/sphere.cpp,178
Color Sphere::Ray_Color(const Ray& r, const Hit_record& rec) const{Ray_Color11,148
Hit_record Sphere::Ray_Hit(const Ray& r, const Interval<double>& time) const{Ray_Hit19,538

tracer/arch.cpp,310
void Importer::Import(std::stringstream& ss){Import13,300
std::shared_ptr<Camera> Import_cam(std::stringstream& ss){Import_cam32,777
std::shared_ptr<Shape> Import_object(std::stringstream& ss){Import_object47,1195
std::shared_ptr<Material> Import_material(std::stringstream& ss){Import_material52,1343

tracer/core.hpp,41
#define TRACER_CORE_HTRACER_CORE_H2,22

tracer/scene.hpp,1058
#define SCENE_HSCENE_H2,16
class Scene: public Shape{Scene11,128
  Scene(){}Scene13,163
  Scene(std::shared_ptr<Shape> obj) : objects{obj} {Scene14,175
  Scene(const std::vector<std::shared_ptr<Shape>>& obj_src){Scene17,268
  void Clear(){ objects.clear(); bbox=AABB(); bv_tree=nullptr; }Clear22,396
  void Add(std::shared_ptr<Shape> obj){Add23,461
  void Build_BVH(void){Build_BVH29,605
  virtual Hit_record Ray_Hit(const Ray& r, const Interval<double>& time) const override{Ray_Hit36,889
  virtual Color Ray_Color(const Ray& r, const Hit_record& rec) const override{Ray_Color55,1347
  virtual AABB Get_Bounding_box(void) const override{ return bbox; }Get_Bounding_box59,1476
  std::string Get_Name(void) const override{ return std::string{"object_list"}; }Get_Name61,1546
  void Set_material(std::shared_ptr<Material>) override{ std::cerr<<"Cannot set material to a scSet_material62,1628
  std::vector<std::shared_ptr<Shape>> objects;objects65,1769
  AABB bbox;bbox67,1817
  std::shared_ptr<bvh_node> bv_tree;bv_tree68,1830

tracer/util/aabb.cpp,167
const Interval<double>& AABB::Axis(const int& n) const{Axis7,76
bool AABB::Is_Hit_in_Interval(const Ray& r, Interval<double> ray_t)const {Is_Hit_in_Interval14,369

tracer/util/constant.hpp,172
#define CONSTANT_HCONSTANT_H2,19
constexpr double infinity = std::numeric_limits<double>::infinity();infinity7,70
constexpr double pi = 3.1415926535897932385;pi8,139

tracer/util/color.hpp,63
#define COLOR_HCOLOR_H2,16
using Color = Vector3;Color7,76

tracer/util/vector3.hpp,117
#define VEC3_HVEC3_H2,15
class Vector3{Vector36,51
  double e[3];e41,960
using Point3 = Vector3;Point343,978

tracer/util/color.cpp,165
inline double Linear2Gamma(const double& linear_component){Linear2Gamma7,82
Color Format_Color(const Color& pixel_color, const double& scale){Format_Color11,183

tracer/util/vector3.cpp,2092
Vector3::Vector3():e{0,0,0} {}Vector38,99
Vector3::Vector3(const double& e0,const double& e1,const double& e2):e{e0,e1,e2} {}Vector39,130
double Vector3::x() const{ return e[0]; }x12,277
double Vector3::y() const{ return e[1]; }y13,319
double Vector3::z() const{ return e[2]; }z14,361
bool Vector3::Near_Zero() const{Near_Zero16,404
Vector3 Vector3::operator - () const{operator -21,537
Vector3 Vector3::operator - (const Vector3& v) const{operator -24,614
Vector3& Vector3::operator -= (const Vector3& v){ return *this = *this-v; }operator -=27,719
Vector3 Vector3::operator + (const Vector3& v) const{operator +28,795
Vector3& Vector3::operator += (const Vector3& v){ return *this = *this + v; }operator +=31,900
Vector3 operator * (const Vector3& e, const double& t){operator *32,978
Vector3 operator * (const double& t, const Vector3& e){ return e*t; }operator *35,1078
Vector3& Vector3::operator *= (const double& t){ return *this = *this * t; }operator *=36,1148
Vector3 Vector3::operator * (const Vector3& v)const {operator *37,1225
Vector3& Vector3::operator *= (const Vector3& v){ return *this = *this * v; }operator *=40,1332
Vector3 Vector3::operator / (const double& t)const{operator /42,1411
Vector3& Vector3::operator /= (const double& t){ return *this = *this / t; }operator /=45,1507
double Vector3::operator [](const int& i) const{ return e[i]; }operator []47,1585
double& Vector3::operator [](const int& i){ return e[i]; }operator []48,1649
double Vector3::Length() const{ return sqrt(this->Length_squared()); }Length50,1709
double Vector3::Length_squared() const{Length_squared51,1780
Vector3 Vector3::Unit() const{Unit55,1867
std::ostream& operator <<(std::ostream& out, const Vector3& v){operator <<60,1931
double Dot(const Vector3 &u, const Vector3 &v) {Dot65,2051
Vector3 Cross(const Vector3 &u, const Vector3 &v) {Cross71,2161
Vector3 Unit_vector(const Vector3& v) {Unit_vector77,2321
Vector3 Vector3::Random_Unit(){Random_Unit81,2389
Vector3 Vector3::Random(const double& min,const double& max){Random88,2591

tracer/util/util.hpp,98
#define COMMON_HCOMMON_H2,17
inline double Degree2Rad(const double& degrees){Degree2Rad19,292

tracer/util/random.cpp,202
double random_uniform_01(void){random_uniform_016,57
double random_double(const double& min, const double& max){random_double12,239
int random_int(const int& min, const int& max){random_int16,348

tracer/util/ray.hpp,959
#define RAY_HRAY_H2,14
class Ray{Ray8,71
  Ray(){}Ray10,90
  Ray(const Point3& origin_, const Vector3& direction_) : origin(origin_), direction(direction_)Ray11,100
  Point3 Origin() const{ return origin; }Origin13,201
  Vector3 Direction() const{ return direction; }Direction14,243
  Point3 origin;origin22,610
  Vector3 direction;direction23,627
class Hit_record{		// Records with a ray hits a visible Shape objectHit_record28,666
  bool hits;hits30,743
  int hit_counts;hit_counts31,756
  std::shared_ptr<Shape> hitted_obj;hitted_obj32,774
  Point3 position;	        // hit positionposition34,814
  Vector3 normal;		// outward normal vectornormal35,857
  double time;			// timetime36,901
  bool front_face;		// is this the front face of the hitted obj?front_face37,926
  Hit_record():hits(false),hit_counts(0) {}Hit_record39,992
  void Set_Face_Normal(const Ray& r, const Vector3& outward_normal){Set_Face_Normal41,1037

tracer/util/aabb.hpp,834
#define AABB_HAABB_H2,15
class AABB{AABB10,127
  AABB():x_interval(Interval<double>::Empty()), y_interval(Interval<double>::Empty()), z_intervaAABB14,242
  AABB(const Point3& a, const Point3& b){AABB15,370
  AABB(const AABB& a,const AABB& b):AABB20,611
  bool operator == (const AABB& rhs) const{operator ==25,810
  class Componentbased_Comparer{Componentbased_Comparer35,1086
    Componentbased_Comparer(const int& _component) : component(_component) {}Componentbased_Comparer37,1129
    bool operator () (const AABB& a, const AABB& b) const{operator () 38,1207
    int component;component42,1347
  Interval<double> x_interval,y_interval,z_interval;x_interval45,1380
  Interval<double> x_interval,y_interval,z_interval;y_interval45,1380
  Interval<double> x_interval,y_interval,z_interval;z_interval45,1380

tracer/util/ray.cpp,361
Point3 Ray::At(const double& time) const{At6,60
Vector3 Ray::Scatter_Direction(const Vector3& normal){Scatter_Direction10,139
Vector3 Ray::Reflect_Direction(const Vector3& in_direction, const Vector3& normal){Reflect_Direction15,305
Vector3 Ray::Refract_Direction(const Vector3& in_direction, const Vector3& normal, const double&Refract_Direction20,498

tracer/util/random.hpp,31
#define RANDOM_HRANDOM_H2,17

tracer/util/interval.hpp,1326
#define INTERVAL_HINTERVAL_H2,19
class Interval{Interval8,97
  T begin,end;begin10,121
  T begin,end;end10,121
  Interval():begin(std::numeric_limits<T>::max()),end(std::numeric_limits<T>::min()) {} // defauInterval12,139
  Interval(const T& _min, const T& _max) : begin(_min), end(_max) {}Interval13,256
  Interval(const Interval& a, const Interval& b){Interval14,325
  bool operator == (const Interval& rhs) const{operator ==20,497
  Interval(const Interval& cp):begin(cp.begin), end(cp.end) {}Interval26,683
  Interval& operator = (const Interval& cp){operator =27,746
  Interval Expand(const double& x) const{Expand32,850
  T Size(void) const{ return end-begin; }Size36,934
  bool isEmpty(void) const{ return Size()<=0; }isEmpty37,976
  bool In(const Interval& a) const{ return a.begin<=begin and end<=a.end; }In38,1024
  bool Contains(const T& x) const{Contains40,1103
  bool Surrounds(const T& x) const{Surrounds43,1174
  T Clamp(const T& x) const{Clamp47,1245
  friend std::ostream& operator << (std::ostream& out, const Interval<T>& seq){operator <<52,1349
  static Interval<T> Empty(){ return Interval<T>(std::numeric_limits<T>::max(), std::numeric_limEmpty56,1485
  static Interval<T> Positive(){ return Interval<T>(std::numeric_limits<T>::min(), std::numeric_Positive57,1599

tracer/util/mat.hpp,25
#define MAT_HMAT_H2,14

tracer/bvh.cpp,634
Color bvh_node::Ray_Color(const Ray& r, const Hit_record& rec) const{Ray_Color9,100
bvh_node::bvh_node(std::vector<std::shared_ptr<Shape>>& src_obj, size_t start, size_t end, int abvh_node15,295
  class __final_comparer{__final_comparer16,397
    __final_comparer(const AABB::Componentbased_Comparer& cp) : component_comparer(cp) {}__final_comparer18,433
    bool operator () (std::shared_ptr<Shape> a, std::shared_ptr<Shape> b){operator () 19,523
    AABB::Componentbased_Comparer component_comparer;component_comparer23,694
Hit_record bvh_node::Ray_Hit(const Ray& r, const Interval<double>& time) const{Ray_Hit51,1752

images/metal-glass-balls.png,0

images/metal-glass-balls-hq.ppm,0

images/metal-glass-balls_draft_10sp.png,0

make.sh,0

TAGS,0
